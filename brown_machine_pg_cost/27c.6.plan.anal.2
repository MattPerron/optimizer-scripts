Aggregate  (cost=3809.44..3809.45 rows=1 width=96) (actual time=50.987..50.987 rows=1 loops=1)
  ->  Nested Loop  (cost=602.65..3809.44 rows=1 width=48) (actual time=2.694..50.315 rows=743 loops=1)
        ->  Nested Loop  (cost=602.23..1851.49 rows=4437 width=52) (actual time=1.955..23.151 rows=11620 loops=1)
              Join Filter: (ml.movie_id = mk.movie_id)
              ->  Nested Loop  (cost=601.80..1670.04 rows=96 width=68) (actual time=1.949..15.076 rows=1150 loops=1)
                    Join Filter: (ml.movie_id = mi.movie_id)
                    ->  Nested Loop  (cost=601.37..1593.62 rows=37 width=64) (actual time=1.926..9.779 rows=277 loops=1)
                          ->  Nested Loop  (cost=600.95..1510.43 rows=182 width=49) (actual time=1.749..7.433 rows=763 loops=1)
                                Join Filter: (ct.id = mc.company_type_id)
                                Rows Removed by Join Filter: 101
                                ->  Nested Loop  (cost=600.95..1498.46 rows=728 width=53) (actual time=1.746..7.025 rows=864 loops=1)
                                      Join Filter: (ml.movie_id = mc.movie_id)
                                      ->  Nested Loop  (cost=600.52..1359.46 rows=228 width=41) (actual time=1.737..5.702 rows=228 loops=1)
                                            Join Filter: (ml.movie_id = t.id)
                                            ->  Nested Loop  (cost=600.09..949.71 rows=228 width=20) (actual time=1.730..4.924 rows=228 loops=1)
                                                  Join Filter: (cct2.id = cc.status_id)
                                                  Rows Removed by Join Filter: 68
                                                  ->  Nested Loop  (cost=600.09..942.38 rows=228 width=24) (actual time=1.727..4.816 rows=228 loops=1)
                                                        Join Filter: (cct1.id = cc.subject_id)
                                                        Rows Removed by Join Filter: 29
                                                        ->  Merge Join  (cost=600.09..937.47 rows=257 width=28) (actual time=1.721..4.688 rows=257 loops=1)
                                                              Merge Cond: (cc.movie_id = ml.movie_id)
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6346.28 rows=135086 width=12) (actual time=0.009..2.111 rows=5993 loops=1)
                                                              ->  Sort  (cost=599.65..605.43 rows=2315 width=16) (actual time=1.496..1.671 rows=2341 loops=1)
                                                                    Sort Key: ml.movie_id
                                                                    Sort Method: quicksort  Memory: 205kB
                                                                    ->  Nested Loop  (cost=38.82..470.28 rows=2315 width=16) (actual time=0.080..0.980 rows=2315 loops=1)
                                                                          ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=16) (actual time=0.004..0.009 rows=2 loops=1)
                                                                                Filter: ((link)::text ~~ '%follow%'::text)
                                                                                Rows Removed by Filter: 16
                                                                          ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=8) (actual time=0.073..0.309 rows=1158 loops=2)
                                                                                Recheck Cond: (link_type_id = lt.id)
                                                                                Heap Blocks: exact=191
                                                                                ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.058..0.058 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                        ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=257)
                                                              ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.005 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'cast'::text)
                                                                    Rows Removed by Filter: 3
                                                  ->  Materialize  (cost=0.00..1.06 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=228)
                                                        ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=2 width=4) (actual time=0.002..0.002 rows=2 loops=1)
                                                              Filter: ((kind)::text ~~ 'complete%'::text)
                                                              Rows Removed by Filter: 2
                                            ->  Index Scan using title_pkey on title t  (cost=0.43..1.78 rows=1 width=21) (actual time=0.003..0.003 rows=1 loops=228)
                                                  Index Cond: (id = cc.movie_id)
                                                  Filter: ((production_year >= 1950) AND (production_year <= 2010))
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=3 width=12) (actual time=0.003..0.004 rows=4 loops=228)
                                            Index Cond: (movie_id = t.id)
                                            Filter: (note IS NULL)
                                            Rows Removed by Filter: 3
                                ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=864)
                                      ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                            Filter: ((kind)::text = 'production companies'::text)
                                            Rows Removed by Filter: 3
                          ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=763)
                                Index Cond: (id = mc.company_id)
                                Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                                Rows Removed by Filter: 1
                    ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.04 rows=2 width=4) (actual time=0.015..0.018 rows=4 loops=277)
                          Index Cond: (movie_id = t.id)
                          Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
                          Rows Removed by Filter: 21
              ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.32 rows=46 width=8) (actual time=0.002..0.004 rows=10 loops=1150)
                    Index Cond: (movie_id = t.id)
        ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=11620)
              Index Cond: (id = mk.keyword_id)
              Filter: (keyword = 'sequel'::text)
              Rows Removed by Filter: 1
Planning time: 69.816 ms
Execution time: 51.093 ms
