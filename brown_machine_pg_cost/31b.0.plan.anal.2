Aggregate  (cost=11326.75..11326.76 rows=1 width=128) (actual time=420.069..420.069 rows=1 loops=1)
  ->  Nested Loop  (cost=9.90..11326.74 rows=1 width=82) (actual time=41.180..419.897 rows=84 loops=1)
        ->  Nested Loop  (cost=9.47..11325.39 rows=1 width=71) (actual time=41.169..419.470 rows=84 loops=1)
              Join Filter: (mi_idx.info_type_id = it2.id)
              Rows Removed by Join Filter: 168
              ->  Nested Loop  (cost=9.47..11322.96 rows=1 width=75) (actual time=41.143..416.612 rows=252 loops=1)
                    Join Filter: (t.id = mi_idx.movie_id)
                    ->  Nested Loop  (cost=9.05..11321.86 rows=1 width=85) (actual time=41.131..416.164 rows=84 loops=1)
                          Join Filter: (mi.info_type_id = it1.id)
                          ->  Nested Loop  (cost=9.05..11319.43 rows=1 width=89) (actual time=41.121..415.816 rows=84 loops=1)
                                Join Filter: (t.id = mi.movie_id)
                                ->  Nested Loop  (cost=8.61..11296.57 rows=1 width=37) (actual time=41.034..410.812 rows=53 loops=1)
                                      ->  Nested Loop  (cost=8.19..11294.82 rows=1 width=41) (actual time=41.016..410.361 rows=119 loops=1)
                                            Join Filter: (t.id = mc.movie_id)
                                            ->  Nested Loop  (cost=7.76..11292.64 rows=1 width=33) (actual time=24.972..409.191 rows=77 loops=1)
                                                  Join Filter: (t.id = ci.movie_id)
                                                  ->  Nested Loop  (cost=7.20..11259.63 rows=1 width=25) (actual time=24.822..404.949 rows=49 loops=1)
                                                        ->  Nested Loop  (cost=6.77..10991.68 rows=236 width=4) (actual time=4.247..148.762 rows=76714 loops=1)
                                                              ->  Seq Scan on keyword k  (cost=0.00..3464.69 rows=7 width=4) (actual time=1.091..39.297 rows=7 loops=1)
                                                                    Filter: (keyword = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                    Rows Removed by Filter: 134163
                                                              ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.77..1072.28 rows=301 width=8) (actual time=2.793..13.803 rows=10959 loops=7)
                                                                    Recheck Cond: (keyword_id = k.id)
                                                                    Heap Blocks: exact=53234
                                                                    ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.69 rows=301 width=0) (actual time=1.428..1.428 rows=10959 loops=7)
                                                                          Index Cond: (keyword_id = k.id)
                                                        ->  Index Scan using title_pkey on title t  (cost=0.43..1.14 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=76714)
                                                              Index Cond: (id = mk.movie_id)
                                                              Filter: ((production_year > 2000) AND ((title ~~ '%Freddy%'::text) OR (title ~~ '%Jason%'::text) OR (title ~~ 'Saw%'::text)))
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.00 rows=1 width=8) (actual time=0.057..0.085 rows=2 loops=49)
                                                        Index Cond: (movie_id = mk.movie_id)
                                                        Filter: (note = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                                        Rows Removed by Filter: 82
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.16 rows=1 width=8) (actual time=0.009..0.014 rows=2 loops=77)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: (note ~~ '%(Blu-ray)%'::text)
                                                  Rows Removed by Filter: 24
                                      ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.65 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=119)
                                            Index Cond: (id = mc.company_id)
                                            Filter: (name ~~ 'Lionsgate%'::text)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..22.85 rows=1 width=52) (actual time=0.093..0.093 rows=2 loops=53)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: (info = ANY ('{Horror,Thriller}'::text[]))
                                      Rows Removed by Filter: 292
                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=84)
                                Filter: ((info)::text = 'genres'::text)
                                Rows Removed by Filter: 2
                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=14) (actual time=0.003..0.004 rows=3 loops=84)
                          Index Cond: (movie_id = mk.movie_id)
              ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=252)
                    Filter: ((info)::text = 'votes'::text)
                    Rows Removed by Filter: 108
        ->  Index Scan using name_pkey on name n  (cost=0.43..1.36 rows=1 width=19) (actual time=0.004..0.004 rows=1 loops=84)
              Index Cond: (id = ci.person_id)
              Filter: ((gender)::text = 'm'::text)
Planning time: 46.013 ms
Execution time: 420.197 ms
