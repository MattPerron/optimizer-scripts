Aggregate  (cost=9169.10..9169.11 rows=1 width=192) (actual time=202.350..202.350 rows=1 loops=1)
  ->  Nested Loop  (cost=6.66..9169.08 rows=1 width=84) (actual time=26.018..202.334 rows=8 loops=1)
        Join Filter: (t1.kind_id = kt1.id)
        ->  Nested Loop  (cost=6.66..9167.98 rows=1 width=88) (actual time=26.014..202.318 rows=8 loops=1)
              ->  Nested Loop  (cost=6.24..9167.54 rows=1 width=73) (actual time=26.003..202.236 rows=28 loops=1)
                    Join Filter: (kt2.id = t2.kind_id)
                    ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                          Filter: ((kind)::text = 'tv series'::text)
                          Rows Removed by Filter: 6
                    ->  Nested Loop  (cost=6.24..9166.44 rows=1 width=77) (actual time=25.996..202.218 rows=28 loops=1)
                          Join Filter: (ml.linked_movie_id = t2.id)
                          ->  Nested Loop  (cost=5.81..9164.30 rows=4 width=68) (actual time=25.991..201.720 rows=179 loops=1)
                                Join Filter: (mi_idx2.info_type_id = it2.id)
                                Rows Removed by Join Filter: 69648
                                ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                                      Filter: ((info)::text = 'rating'::text)
                                      Rows Removed by Filter: 112
                                ->  Nested Loop  (cost=5.81..9156.40 rows=439 width=72) (actual time=0.173..195.788 rows=69827 loops=1)
                                      ->  Nested Loop  (cost=5.38..8897.77 rows=425 width=80) (actual time=0.168..137.512 rows=11987 loops=1)
                                            ->  Nested Loop  (cost=4.96..8709.33 rows=425 width=65) (actual time=0.164..104.784 rows=11987 loops=1)
                                                  Join Filter: (ml.linked_movie_id = mc2.movie_id)
                                                  ->  Nested Loop  (cost=4.53..8651.79 rows=78 width=57) (actual time=0.153..88.735 rows=2786 loops=1)
                                                        ->  Nested Loop  (cost=4.11..8538.46 rows=55 width=43) (actual time=0.146..78.744 rows=2064 loops=1)
                                                              Join Filter: (mi_idx1.info_type_id = it1.id)
                                                              Rows Removed by Join Filter: 4128
                                                              ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.013 rows=1 loops=1)
                                                                    Filter: ((info)::text = 'rating'::text)
                                                                    Rows Removed by Filter: 112
                                                              ->  Nested Loop  (cost=4.11..8458.64 rows=6192 width=47) (actual time=0.126..77.665 rows=6192 loops=1)
                                                                    Join Filter: (ml.movie_id = t1.id)
                                                                    ->  Hash Join  (cost=3.68..4802.87 rows=6192 width=22) (actual time=0.118..60.134 rows=6192 loops=1)
                                                                          Hash Cond: (ml.link_type_id = lt.id)
                                                                          ->  Merge Join  (cost=2.40..4041.29 rows=62670 width=26) (actual time=0.015..52.484 rows=62670 loops=1)
                                                                                Merge Cond: (ml.movie_id = mi_idx1.movie_id)
                                                                                ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=12) (actual time=0.007..6.150 rows=29997 loops=1)
                                                                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43810.54 rows=1380035 width=14) (actual time=0.006..21.043 rows=114373 loops=1)
                                                                          ->  Hash  (cost=1.25..1.25 rows=2 width=4) (actual time=0.009..0.009 rows=2 loops=1)
                                                                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.003..0.007 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                    ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=6192)
                                                                          Index Cond: (id = mi_idx1.movie_id)
                                                        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.003..0.004 rows=1 loops=2064)
                                                              Index Cond: (movie_id = ml.linked_movie_id)
                                                              Filter: (info < '3.0'::text)
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=2786)
                                                        Index Cond: (movie_id = mi_idx2.movie_id)
                                            ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=11987)
                                                  Index Cond: (id = mc2.company_id)
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=6 loops=11987)
                                            Index Cond: (movie_id = t1.id)
                          ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=179)
                                Index Cond: (id = mc2.movie_id)
                                Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                Rows Removed by Filter: 1
              ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=28)
                    Index Cond: (id = mc1.company_id)
                    Filter: ((country_code)::text = '[us]'::text)
                    Rows Removed by Filter: 1
        ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=8)
              Filter: ((kind)::text = 'tv series'::text)
              Rows Removed by Filter: 1
Planning time: 89.137 ms
Execution time: 202.470 ms
