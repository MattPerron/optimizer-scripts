Aggregate  (cost=7760.55..7760.56 rows=1 width=192) (actual time=20.694..20.694 rows=1 loops=1)
  ->  Nested Loop  (cost=42.65..7760.53 rows=1 width=84) (actual time=1.618..20.683 rows=4 loops=1)
        ->  Nested Loop  (cost=42.51..7760.35 rows=1 width=88) (actual time=1.545..20.663 rows=12 loops=1)
              ->  Nested Loop  (cost=42.38..7760.18 rows=1 width=92) (actual time=1.541..20.641 rows=12 loops=1)
                    ->  Nested Loop  (cost=41.96..7759.73 rows=1 width=77) (actual time=1.535..20.602 rows=12 loops=1)
                          Join Filter: (t2.id = mc2.movie_id)
                          ->  Nested Loop  (cost=41.53..7758.99 rows=1 width=85) (actual time=1.531..20.584 rows=3 loops=1)
                                ->  Nested Loop  (cost=41.38..7758.81 rows=1 width=89) (actual time=1.488..20.522 rows=36 loops=1)
                                      Join Filter: (kt1.id = t1.kind_id)
                                      ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                            Filter: ((kind)::text = 'tv series'::text)
                                            Rows Removed by Filter: 6
                                      ->  Nested Loop  (cost=41.38..7757.61 rows=9 width=93) (actual time=1.481..20.502 rows=36 loops=1)
                                            Join Filter: (ml.movie_id = t1.id)
                                            ->  Nested Loop  (cost=40.95..7752.85 rows=9 width=84) (actual time=1.476..20.400 rows=36 loops=1)
                                                  Join Filter: (ml.movie_id = mi_idx1.movie_id)
                                                  ->  Nested Loop  (cost=40.53..7751.24 rows=3 width=70) (actual time=1.471..20.342 rows=12 loops=1)
                                                        ->  Nested Loop  (cost=40.11..7605.44 rows=327 width=55) (actual time=1.195..19.594 rows=284 loops=1)
                                                              ->  Nested Loop  (cost=39.68..7406.95 rows=50 width=47) (actual time=1.189..19.287 rows=50 loops=1)
                                                                    Join Filter: (ml.linked_movie_id = t2.id)
                                                                    ->  Nested Loop  (cost=39.25..5240.54 rows=2944 width=22) (actual time=0.091..10.413 rows=2944 loops=1)
                                                                          ->  Nested Loop  (cost=38.82..470.28 rows=2315 width=8) (actual time=0.082..1.176 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=4) (actual time=0.002..0.007 rows=2 loops=1)
                                                                                      Filter: ((link)::text ~~ '%follow%'::text)
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.075..0.372 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.060..0.060 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.003..0.003 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.0'::text)
                                                                                Rows Removed by Filter: 1
                                                                    ->  Index Scan using title_pkey on title t2  (cost=0.43..0.72 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=2944)
                                                                          Index Cond: (id = mi_idx2.movie_id)
                                                                          Filter: (production_year = 2007)
                                                                          Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..3.92 rows=5 width=8) (actual time=0.003..0.004 rows=6 loops=50)
                                                                    Index Cond: (movie_id = ml.movie_id)
                                                        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=284)
                                                              Index Cond: (id = mc1.company_id)
                                                              Filter: ((country_code)::text = '[nl]'::text)
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..0.50 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=12)
                                                        Index Cond: (movie_id = mc1.movie_id)
                                            ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=36)
                                                  Index Cond: (id = mc1.movie_id)
                                ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=36)
                                      Index Cond: (id = mi_idx2.info_type_id)
                                      Filter: ((info)::text = 'rating'::text)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=3)
                                Index Cond: (movie_id = mi_idx2.movie_id)
                    ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=12)
                          Index Cond: (id = mc2.company_id)
              ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=12)
                    Index Cond: (id = t2.kind_id)
                    Filter: ((kind)::text = 'tv series'::text)
        ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=12)
              Index Cond: (id = mi_idx1.info_type_id)
              Filter: ((info)::text = 'rating'::text)
              Rows Removed by Filter: 1
Planning time: 89.858 ms
Execution time: 20.830 ms
