Aggregate  (cost=7772.74..7772.75 rows=1 width=192) (actual time=20.061..20.062 rows=1 loops=1)
  ->  Nested Loop  (cost=42.38..7772.68 rows=4 width=84) (actual time=1.519..20.051 rows=4 loops=1)
        ->  Nested Loop  (cost=42.23..7770.71 rows=12 width=88) (actual time=1.460..20.030 rows=12 loops=1)
              Join Filter: (t2.kind_id = kt2.id)
              ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                    Filter: ((kind)::text = 'tv series'::text)
                    Rows Removed by Filter: 6
              ->  Nested Loop  (cost=42.23..7769.47 rows=12 width=92) (actual time=1.453..20.019 rows=12 loops=1)
                    ->  Nested Loop  (cost=41.81..7764.15 rows=12 width=77) (actual time=1.450..19.983 rows=12 loops=1)
                          Join Filter: (t2.id = mc2.movie_id)
                          ->  Nested Loop  (cost=41.38..7761.94 rows=3 width=85) (actual time=1.446..19.965 rows=3 loops=1)
                                Join Filter: (mi_idx2.info_type_id = it2.id)
                                Rows Removed by Join Filter: 33
                                ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                                      Filter: ((info)::text = 'rating'::text)
                                      Rows Removed by Filter: 112
                                ->  Nested Loop  (cost=41.38..7759.08 rows=36 width=89) (actual time=1.400..19.946 rows=36 loops=1)
                                      Join Filter: (kt1.id = t1.kind_id)
                                      ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                            Filter: ((kind)::text = 'tv series'::text)
                                            Rows Removed by Filter: 6
                                      ->  Nested Loop  (cost=41.38..7757.54 rows=36 width=93) (actual time=1.398..19.933 rows=36 loops=1)
                                            Join Filter: (ml.movie_id = t1.id)
                                            ->  Nested Loop  (cost=40.95..7738.50 rows=36 width=84) (actual time=1.394..19.836 rows=36 loops=1)
                                                  Join Filter: (ml.movie_id = mi_idx1.movie_id)
                                                  ->  Nested Loop  (cost=40.53..7732.07 rows=12 width=70) (actual time=1.389..19.780 rows=12 loops=1)
                                                        ->  Nested Loop  (cost=40.11..7605.44 rows=284 width=55) (actual time=1.137..19.032 rows=284 loops=1)
                                                              ->  Nested Loop  (cost=39.68..7406.95 rows=50 width=47) (actual time=1.132..18.735 rows=50 loops=1)
                                                                    Join Filter: (ml.linked_movie_id = t2.id)
                                                                    ->  Nested Loop  (cost=39.25..5240.54 rows=2944 width=22) (actual time=0.090..10.479 rows=2944 loops=1)
                                                                          ->  Nested Loop  (cost=38.82..470.28 rows=2315 width=8) (actual time=0.079..1.196 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=4) (actual time=0.002..0.007 rows=2 loops=1)
                                                                                      Filter: ((link)::text ~~ '%follow%'::text)
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.073..0.378 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.058..0.058 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.003..0.003 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.0'::text)
                                                                                Rows Removed by Filter: 1
                                                                    ->  Index Scan using title_pkey on title t2  (cost=0.43..0.72 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2944)
                                                                          Index Cond: (id = mi_idx2.movie_id)
                                                                          Filter: (production_year = 2007)
                                                                          Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..3.92 rows=5 width=8) (actual time=0.003..0.004 rows=6 loops=50)
                                                                    Index Cond: (movie_id = ml.movie_id)
                                                        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=284)
                                                              Index Cond: (id = mc1.company_id)
                                                              Filter: ((country_code)::text = '[nl]'::text)
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..0.50 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=12)
                                                        Index Cond: (movie_id = mc1.movie_id)
                                            ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=36)
                                                  Index Cond: (id = mc1.movie_id)
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=3)
                                Index Cond: (movie_id = mi_idx2.movie_id)
                    ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=12)
                          Index Cond: (id = mc2.company_id)
        ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=12)
              Index Cond: (id = mi_idx1.info_type_id)
              Filter: ((info)::text = 'rating'::text)
              Rows Removed by Filter: 1
Planning time: 89.049 ms
Execution time: 20.182 ms
