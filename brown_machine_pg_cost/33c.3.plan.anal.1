Aggregate  (cost=3265.48..3265.49 rows=1 width=192) (actual time=61.573..61.573 rows=1 loops=1)
  ->  Nested Loop  (cost=603.26..3265.47 rows=1 width=84) (actual time=8.445..61.410 rows=114 loops=1)
        ->  Nested Loop  (cost=602.84..3265.03 rows=1 width=69) (actual time=8.441..61.085 rows=114 loops=1)
              ->  Nested Loop  (cost=602.41..3264.36 rows=1 width=77) (actual time=8.436..60.877 rows=46 loops=1)
                    ->  Nested Loop  (cost=602.27..3264.19 rows=1 width=81) (actual time=8.433..60.781 rows=46 loops=1)
                          Join Filter: (ml.movie_id = t1.id)
                          ->  Nested Loop  (cost=601.84..3263.66 rows=1 width=72) (actual time=8.427..60.629 rows=46 loops=1)
                                Join Filter: (it2.id = mi_idx2.info_type_id)
                                Rows Removed by Join Filter: 4040
                                ->  Nested Loop  (cost=601.42..3250.84 rows=23 width=66) (actual time=1.981..49.393 rows=2996 loops=1)
                                      Join Filter: (t2.kind_id = kt2.id)
                                      Rows Removed by Join Filter: 3351
                                      ->  Nested Loop  (cost=601.42..3247.44 rows=81 width=70) (actual time=1.573..47.232 rows=3519 loops=1)
                                            ->  Nested Loop  (cost=601.00..3180.11 rows=151 width=55) (actual time=1.568..35.727 rows=4087 loops=1)
                                                  Join Filter: (ml.movie_id = mc1.movie_id)
                                                  ->  Nested Loop  (cost=600.57..3165.04 rows=23 width=47) (actual time=1.562..30.984 rows=851 loops=1)
                                                        ->  Nested Loop  (cost=600.57..3162.34 rows=23 width=43) (actual time=1.550..30.415 rows=851 loops=1)
                                                              ->  Nested Loop  (cost=600.14..2916.20 rows=55 width=18) (actual time=1.542..23.646 rows=2064 loops=1)
                                                                    Join Filter: (it1.id = mi_idx1.info_type_id)
                                                                    Rows Removed by Join Filter: 4128
                                                                    ->  Merge Join  (cost=600.14..2820.91 rows=6192 width=22) (actual time=1.520..21.253 rows=6192 loops=1)
                                                                          Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43810.54 rows=1380035 width=14) (actual time=0.009..10.980 rows=63901 loops=1)
                                                                          ->  Sort  (cost=599.67..605.46 rows=2315 width=8) (actual time=1.481..2.130 rows=6443 loops=1)
                                                                                Sort Key: ml.movie_id
                                                                                Sort Method: quicksort  Memory: 205kB
                                                                                ->  Nested Loop  (cost=38.82..470.30 rows=2315 width=8) (actual time=0.082..0.990 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.005..0.010 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.073..0.312 rows=1158 loops=2)
                                                                                            Recheck Cond: (link_type_id = lt.id)
                                                                                            Heap Blocks: exact=191
                                                                                            ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.058..0.058 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                    ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6192)
                                                                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                              ->  Index Scan using title_pkey on title t2  (cost=0.43..4.48 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=2064)
                                                                    Index Cond: (id = ml.linked_movie_id)
                                                                    Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                    Rows Removed by Filter: 1
                                                        ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=851)
                                                              ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                                                                    Filter: ((info)::text = 'rating'::text)
                                                                    Rows Removed by Filter: 112
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.002..0.004 rows=5 loops=851)
                                                        Index Cond: (movie_id = mi_idx1.movie_id)
                                            ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=4087)
                                                  Index Cond: (id = mc1.company_id)
                                                  Filter: ((country_code)::text <> '[us]'::text)
                                                  Rows Removed by Filter: 0
                                      ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=3519)
                                            ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=1)
                                                  Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                  Rows Removed by Filter: 5
                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.53 rows=2 width=14) (actual time=0.002..0.003 rows=1 loops=2996)
                                      Index Cond: (movie_id = t2.id)
                                      Filter: (info < '3.5'::text)
                                      Rows Removed by Filter: 2
                          ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=46)
                                Index Cond: (id = mc1.movie_id)
                    ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=46)
                          Index Cond: (id = t1.kind_id)
                          Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
              ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.002..0.003 rows=2 loops=46)
                    Index Cond: (movie_id = t2.id)
        ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=114)
              Index Cond: (id = mc2.company_id)
Planning time: 87.231 ms
Execution time: 61.697 ms
