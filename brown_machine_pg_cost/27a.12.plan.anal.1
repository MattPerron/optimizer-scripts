Aggregate  (cost=3975.63..3975.64 rows=1 width=96) (actual time=21.264..21.264 rows=1 loops=1)
  ->  Hash Join  (cost=603.72..3972.05 rows=477 width=48) (actual time=2.593..20.891 rows=477 loops=1)
        Hash Cond: (mc.company_type_id = ct.id)
        ->  Nested Loop  (cost=602.65..3965.44 rows=534 width=52) (actual time=2.580..20.700 rows=534 loops=1)
              Join Filter: (ml.movie_id = mi.movie_id)
              ->  Nested Loop  (cost=602.22..3669.54 rows=191 width=72) (actual time=2.570..18.123 rows=191 loops=1)
                    Join Filter: (ml.movie_id = t.id)
                    ->  Nested Loop  (cost=601.79..3573.13 rows=191 width=51) (actual time=2.565..17.547 rows=191 loops=1)
                          Join Filter: (cc.status_id = cct2.id)
                          Rows Removed by Join Filter: 57
                          ->  Nested Loop  (cost=601.79..3568.36 rows=248 width=55) (actual time=2.559..17.411 rows=248 loops=1)
                                ->  Nested Loop  (cost=601.37..3302.79 rows=581 width=40) (actual time=1.910..15.689 rows=581 loops=1)
                                      Join Filter: (ml.movie_id = mc.movie_id)
                                      ->  Nested Loop  (cost=600.94..3246.15 rows=98 width=28) (actual time=1.903..15.025 rows=98 loops=1)
                                            Join Filter: (cc.subject_id = cct1.id)
                                            Rows Removed by Join Filter: 20
                                            ->  Nested Loop  (cost=600.94..3242.39 rows=98 width=32) (actual time=1.897..14.956 rows=98 loops=1)
                                                  ->  Nested Loop  (cost=600.52..1683.80 rows=3532 width=36) (actual time=1.733..7.016 rows=3532 loops=1)
                                                        Join Filter: (ml.movie_id = mk.movie_id)
                                                        ->  Merge Join  (cost=600.09..937.47 rows=257 width=28) (actual time=1.726..4.628 rows=257 loops=1)
                                                              Merge Cond: (cc.movie_id = ml.movie_id)
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6346.28 rows=135086 width=12) (actual time=0.008..2.068 rows=5993 loops=1)
                                                              ->  Sort  (cost=599.65..605.43 rows=2315 width=16) (actual time=1.496..1.671 rows=2341 loops=1)
                                                                    Sort Key: ml.movie_id
                                                                    Sort Method: quicksort  Memory: 205kB
                                                                    ->  Nested Loop  (cost=38.82..470.28 rows=2315 width=16) (actual time=0.079..0.980 rows=2315 loops=1)
                                                                          ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=16) (actual time=0.003..0.007 rows=2 loops=1)
                                                                                Filter: ((link)::text ~~ '%follow%'::text)
                                                                                Rows Removed by Filter: 16
                                                                          ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=8) (actual time=0.073..0.309 rows=1158 loops=2)
                                                                                Recheck Cond: (link_type_id = lt.id)
                                                                                Heap Blocks: exact=191
                                                                                ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.058..0.058 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                        ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..2.33 rows=46 width=8) (actual time=0.003..0.005 rows=14 loops=257)
                                                              Index Cond: (movie_id = cc.movie_id)
                                                  ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=3532)
                                                        Index Cond: (id = mk.keyword_id)
                                                        Filter: (keyword = 'sequel'::text)
                                                        Rows Removed by Filter: 1
                                            ->  Materialize  (cost=0.00..1.06 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=98)
                                                  ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.004..0.005 rows=2 loops=1)
                                                        Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.003..0.005 rows=6 loops=98)
                                            Index Cond: (movie_id = mk.movie_id)
                                            Filter: (note IS NULL)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=581)
                                      Index Cond: (id = mc.company_id)
                                      Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                                      Rows Removed by Filter: 1
                          ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=248)
                                ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                      Filter: ((kind)::text = 'complete'::text)
                                      Rows Removed by Filter: 3
                    ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=191)
                          Index Cond: (id = mk.movie_id)
                          Filter: ((production_year >= 1950) AND (production_year <= 2000))
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.54 rows=1 width=4) (actual time=0.010..0.012 rows=3 loops=191)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                    Rows Removed by Filter: 17
        ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                    Filter: ((kind)::text = 'production companies'::text)
                    Rows Removed by Filter: 3
Planning time: 69.088 ms
Execution time: 21.372 ms
