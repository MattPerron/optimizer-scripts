Aggregate  (cost=5487.94..5487.95 rows=1 width=192) (actual time=10.977..10.977 rows=1 loops=1)
  ->  Nested Loop  (cost=42.64..5487.93 rows=1 width=84) (actual time=0.899..10.962 rows=8 loops=1)
        ->  Nested Loop  (cost=42.22..5487.48 rows=1 width=69) (actual time=0.892..10.879 rows=28 loops=1)
              ->  Nested Loop  (cost=41.79..5486.87 rows=1 width=77) (actual time=0.888..10.833 rows=10 loops=1)
                    ->  Nested Loop  (cost=41.66..5486.70 rows=1 width=81) (actual time=0.886..10.815 rows=10 loops=1)
                          ->  Nested Loop  (cost=41.53..5486.53 rows=1 width=85) (actual time=0.882..10.793 rows=10 loops=1)
                                Join Filter: (it1.id = mi_idx1.info_type_id)
                                Rows Removed by Join Filter: 20
                                ->  Nested Loop  (cost=41.10..5480.63 rows=11 width=79) (actual time=0.877..10.749 rows=11 loops=1)
                                      ->  Nested Loop  (cost=40.68..5475.75 rows=11 width=64) (actual time=0.873..10.709 rows=11 loops=1)
                                            Join Filter: (t2.id = mc2.movie_id)
                                            ->  Nested Loop  (cost=40.25..5471.33 rows=6 width=72) (actual time=0.869..10.679 rows=6 loops=1)
                                                  Join Filter: (ml.linked_movie_id = t2.id)
                                                  ->  Nested Loop  (cost=39.82..5446.22 rows=34 width=47) (actual time=0.864..10.566 rows=34 loops=1)
                                                        ->  Nested Loop  (cost=39.39..5294.24 rows=34 width=22) (actual time=0.859..10.445 rows=34 loops=1)
                                                              ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..14.12 rows=1 width=4) (actual time=0.024..0.027 rows=1 loops=1)
                                                                    Filter: ((info)::text = 'rating'::text)
                                                                    Rows Removed by Filter: 112
                                                              ->  Nested Loop  (cost=39.25..5279.78 rows=34 width=18) (actual time=0.833..10.409 rows=34 loops=1)
                                                                    Join Filter: (mi_idx2.info_type_id = it2.id)
                                                                    Rows Removed by Join Filter: 2910
                                                                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                                    ->  Nested Loop  (cost=39.25..5240.56 rows=2944 width=22) (actual time=0.087..10.070 rows=2944 loops=1)
                                                                          ->  Nested Loop  (cost=38.82..470.30 rows=2315 width=8) (actual time=0.079..1.129 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.003..0.008 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.073..0.359 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.058..0.058 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.003..0.003 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.0'::text)
                                                                                Rows Removed by Filter: 1
                                                        ->  Index Scan using title_pkey on title t1  (cost=0.43..4.47 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=34)
                                                              Index Cond: (id = ml.movie_id)
                                                  ->  Index Scan using title_pkey on title t2  (cost=0.43..0.73 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=34)
                                                        Index Cond: (id = mi_idx2.movie_id)
                                                        Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                                        Rows Removed by Filter: 1
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.003..0.004 rows=2 loops=6)
                                                  Index Cond: (movie_id = mi_idx2.movie_id)
                                      ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=11)
                                            Index Cond: (id = mc2.company_id)
                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..0.50 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=11)
                                      Index Cond: (movie_id = t1.id)
                          ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=10)
                                Index Cond: (id = t1.kind_id)
                                Filter: ((kind)::text = 'tv series'::text)
                    ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=10)
                          Index Cond: (id = t2.kind_id)
                          Filter: ((kind)::text = 'tv series'::text)
              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=3 loops=10)
                    Index Cond: (movie_id = t1.id)
        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=28)
              Index Cond: (id = mc1.company_id)
              Filter: ((country_code)::text = '[us]'::text)
              Rows Removed by Filter: 1
Planning time: 89.307 ms
Execution time: 11.096 ms
