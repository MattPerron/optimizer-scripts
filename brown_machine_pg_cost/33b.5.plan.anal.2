Aggregate  (cost=7571.34..7571.35 rows=1 width=192) (actual time=19.100..19.100 rows=1 loops=1)
  ->  Nested Loop  (cost=42.65..7571.33 rows=1 width=84) (actual time=1.609..19.087 rows=4 loops=1)
        Join Filter: ((ml.movie_id = t1.id) AND (kt1.id = t1.kind_id))
        ->  Nested Loop  (cost=42.22..7570.79 rows=1 width=83) (actual time=1.602..19.071 rows=4 loops=1)
              ->  Nested Loop  (cost=42.08..7570.61 rows=1 width=87) (actual time=1.489..19.056 rows=8 loops=1)
                    ->  Nested Loop  (cost=41.94..7570.10 rows=3 width=91) (actual time=1.435..19.012 rows=24 loops=1)
                          ->  Nested Loop  (cost=41.52..7568.77 rows=3 width=76) (actual time=1.430..18.940 rows=24 loops=1)
                                Join Filter: (t2.id = mc2.movie_id)
                                ->  Nested Loop  (cost=41.09..7566.56 rows=3 width=84) (actual time=1.421..18.902 rows=6 loops=1)
                                      Join Filter: (ml.movie_id = mi_idx1.movie_id)
                                      ->  Nested Loop  (cost=40.66..7566.03 rows=1 width=70) (actual time=1.413..18.887 rows=2 loops=1)
                                            ->  Nested Loop  (cost=40.24..7504.49 rows=138 width=55) (actual time=1.159..18.717 rows=52 loops=1)
                                                  ->  Nested Loop  (cost=39.81..7421.13 rows=21 width=47) (actual time=1.151..18.615 rows=21 loops=1)
                                                        ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..12.26 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'tv series'::text)
                                                              Rows Removed by Filter: 6
                                                        ->  Nested Loop  (cost=39.68..7408.66 rows=21 width=43) (actual time=1.138..18.593 rows=21 loops=1)
                                                              Join Filter: (kt2.id = t2.kind_id)
                                                              Rows Removed by Join Filter: 29
                                                              ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'tv series'::text)
                                                                    Rows Removed by Filter: 6
                                                              ->  Nested Loop  (cost=39.68..7406.95 rows=50 width=47) (actual time=1.133..18.575 rows=50 loops=1)
                                                                    Join Filter: (ml.linked_movie_id = t2.id)
                                                                    ->  Nested Loop  (cost=39.25..5240.54 rows=2944 width=22) (actual time=0.095..10.444 rows=2944 loops=1)
                                                                          ->  Nested Loop  (cost=38.82..470.28 rows=2315 width=8) (actual time=0.084..1.219 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=4) (actual time=0.003..0.008 rows=2 loops=1)
                                                                                      Filter: ((link)::text ~~ '%follow%'::text)
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.080..0.391 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.061..0.061 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.003..0.003 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.0'::text)
                                                                                Rows Removed by Filter: 1
                                                                    ->  Index Scan using title_pkey on title t2  (cost=0.43..0.72 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2944)
                                                                          Index Cond: (id = mi_idx2.movie_id)
                                                                          Filter: (production_year = 2007)
                                                                          Rows Removed by Filter: 1
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..3.92 rows=5 width=8) (actual time=0.003..0.004 rows=2 loops=21)
                                                        Index Cond: (movie_id = ml.movie_id)
                                            ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=52)
                                                  Index Cond: (id = mc1.company_id)
                                                  Filter: ((country_code)::text = '[nl]'::text)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..0.50 rows=3 width=14) (actual time=0.005..0.006 rows=3 loops=2)
                                            Index Cond: (movie_id = mc1.movie_id)
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=6)
                                      Index Cond: (movie_id = mi_idx2.movie_id)
                          ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=24)
                                Index Cond: (id = mc2.company_id)
                    ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=24)
                          Index Cond: (id = mi_idx1.info_type_id)
                          Filter: ((info)::text = 'rating'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=8)
                    Index Cond: (id = mi_idx2.info_type_id)
                    Filter: ((info)::text = 'rating'::text)
                    Rows Removed by Filter: 0
        ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=4)
              Index Cond: (id = mc1.movie_id)
Planning time: 89.809 ms
Execution time: 19.294 ms
