Aggregate  (cost=38881.39..38881.40 rows=1 width=128) (actual time=1971.997..1971.997 rows=1 loops=1)
  ->  Nested Loop  (cost=3781.63..38881.38 rows=1 width=82) (actual time=681.571..1971.870 rows=28 loops=1)
        Join Filter: (mi.movie_id = t.id)
        ->  Nested Loop  (cost=3781.20..38880.51 rows=1 width=85) (actual time=52.954..1949.123 rows=4394 loops=1)
              ->  Nested Loop  (cost=3780.77..38879.42 rows=1 width=74) (actual time=52.260..1916.349 rows=6488 loops=1)
                    Join Filter: (mi.movie_id = ci.movie_id)
                    ->  Nested Loop  (cost=3780.20..38850.35 rows=1 width=66) (actual time=52.237..1251.351 rows=8247 loops=1)
                          Join Filter: (it1.id = mi.info_type_id)
                          Rows Removed by Join Filter: 2048
                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.024 rows=1 loops=1)
                                Filter: ((info)::text = 'genres'::text)
                                Rows Removed by Filter: 112
                          ->  Nested Loop  (cost=3780.20..38847.10 rows=67 width=70) (actual time=52.223..1248.361 rows=10295 loops=1)
                                Join Filter: (mi_idx.movie_id = mi.movie_id)
                                ->  Nested Loop  (cost=3779.77..31283.06 rows=429 width=18) (actual time=51.897..352.068 rows=16283 loops=1)
                                      Join Filter: (it2.id = mi_idx.info_type_id)
                                      Rows Removed by Join Filter: 33372
                                      ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.025 rows=1 loops=1)
                                            Filter: ((info)::text = 'votes'::text)
                                            Rows Removed by Filter: 112
                                      ->  Nested Loop  (cost=3779.77..30674.93 rows=48457 width=22) (actual time=51.885..344.537 rows=49655 loops=1)
                                            ->  Hash Join  (cost=3779.34..17426.10 rows=16336 width=8) (actual time=51.873..255.257 rows=16336 loops=1)
                                                  Hash Cond: (cc.subject_id = cct1.id)
                                                  ->  Hash Join  (cost=3778.26..17255.03 rows=16336 width=12) (actual time=51.860..249.087 rows=16336 loops=1)
                                                        Hash Cond: (cc.status_id = cct2.id)
                                                        ->  Hash Join  (cost=3777.20..16879.24 rows=36010 width=16) (actual time=51.829..241.249 rows=36010 loops=1)
                                                              Hash Cond: (mk.movie_id = cc.movie_id)
                                                              ->  Nested Loop  (cost=6.77..10991.68 rows=76714 width=4) (actual time=4.165..160.945 rows=76714 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..3464.69 rows=7 width=4) (actual time=1.069..39.283 rows=7 loops=1)
                                                                          Filter: (keyword = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                          Rows Removed by Filter: 134163
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.77..1072.28 rows=301 width=8) (actual time=2.784..15.693 rows=10959 loops=7)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=53234
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.69 rows=301 width=0) (actual time=1.436..1.436 rows=10959 loops=7)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Hash  (cost=2081.86..2081.86 rows=135086 width=12) (actual time=47.409..47.409 rows=135086 loops=1)
                                                                    Buckets: 262144  Batches: 1  Memory Usage: 7853kB
                                                                    ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.008..23.952 rows=135086 loops=1)
                                                        ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                              ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'complete+verified'::text)
                                                                    Rows Removed by Filter: 3
                                                  ->  Hash  (cost=1.05..1.05 rows=2 width=4) (actual time=0.006..0.006 rows=2 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                                              Rows Removed by Filter: 2
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=14) (actual time=0.004..0.004 rows=3 loops=16336)
                                                  Index Cond: (movie_id = mk.movie_id)
                                ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..17.62 rows=1 width=52) (actual time=0.053..0.055 rows=1 loops=16283)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: (info = ANY ('{Horror,Thriller}'::text[]))
                                      Rows Removed by Filter: 135
                    ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.05 rows=1 width=8) (actual time=0.059..0.080 rows=1 loops=8247)
                          Index Cond: (movie_id = mk.movie_id)
                          Filter: (note = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                          Rows Removed by Filter: 77
              ->  Index Scan using name_pkey on name n  (cost=0.43..1.09 rows=1 width=19) (actual time=0.004..0.004 rows=1 loops=6488)
                    Index Cond: (id = ci.person_id)
                    Filter: ((gender)::text = 'm'::text)
                    Rows Removed by Filter: 0
        ->  Index Scan using title_pkey on title t  (cost=0.43..0.86 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=4394)
              Index Cond: (id = mk.movie_id)
              Filter: ((production_year > 2000) AND ((title ~~ '%Freddy%'::text) OR (title ~~ '%Jason%'::text) OR (title ~~ 'Saw%'::text)))
              Rows Removed by Filter: 1
Planning time: 70.683 ms
Execution time: 1972.142 ms
