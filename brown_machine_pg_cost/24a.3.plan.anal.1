Aggregate  (cost=30031.95..30031.96 rows=1 width=96) (actual time=674.891..674.891 rows=1 loops=1)
  ->  Nested Loop  (cost=10.33..30031.94 rows=1 width=48) (actual time=63.294..674.615 rows=275 loops=1)
        ->  Nested Loop  (cost=9.90..30028.24 rows=2 width=41) (actual time=1.351..655.969 rows=6518 loops=1)
              ->  Nested Loop  (cost=9.48..30026.13 rows=1 width=37) (actual time=1.340..644.576 rows=2748 loops=1)
                    Join Filter: (rt.id = ci.role_id)
                    Rows Removed by Join Filter: 10860
                    ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                          Filter: ((role)::text = 'actress'::text)
                          Rows Removed by Filter: 11
                    ->  Nested Loop  (cost=9.48..30024.97 rows=1 width=41) (actual time=1.290..642.396 rows=13608 loops=1)
                          ->  Nested Loop  (cost=9.05..30023.23 rows=1 width=29) (actual time=1.280..598.663 rows=13758 loops=1)
                                Join Filter: (t.id = ci.movie_id)
                                ->  Nested Loop  (cost=8.48..29983.42 rows=1 width=33) (actual time=1.003..192.504 rows=3406 loops=1)
                                      Join Filter: (it.id = mi.info_type_id)
                                      ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.021 rows=1 loops=1)
                                            Filter: ((info)::text = 'release dates'::text)
                                            Rows Removed by Filter: 112
                                      ->  Nested Loop  (cost=8.48..29980.73 rows=22 width=37) (actual time=0.993..191.399 rows=3406 loops=1)
                                            Join Filter: (t.id = mi.movie_id)
                                            ->  Nested Loop  (cost=8.05..24103.82 rows=184 width=29) (actual time=0.984..104.960 rows=1576 loops=1)
                                                  ->  Nested Loop  (cost=7.63..23350.42 rows=511 width=33) (actual time=0.977..85.274 rows=5566 loops=1)
                                                        Join Filter: (t.id = mc.movie_id)
                                                        ->  Nested Loop  (cost=7.20..21637.52 rows=495 width=25) (actual time=0.969..78.313 rows=495 loops=1)
                                                              ->  Nested Loop  (cost=6.77..6093.36 rows=9696 width=4) (actual time=0.914..41.015 rows=9696 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.013..25.412 rows=3 loops=1)
                                                                          Filter: (keyword = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                          Rows Removed by Filter: 134167
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.77..1096.83 rows=301 width=8) (actual time=0.859..4.668 rows=3232 loops=3)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=7446
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.69 rows=301 width=0) (actual time=0.468..0.468 rows=3232 loops=3)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=9696)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2010)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.40 rows=5 width=8) (actual time=0.005..0.010 rows=11 loops=495)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                  ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=5566)
                                                        Index Cond: (id = mc.company_id)
                                                        Filter: ((country_code)::text = '[us]'::text)
                                                        Rows Removed by Filter: 1
                                            ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..31.93 rows=1 width=8) (actual time=0.014..0.054 rows=2 loops=1576)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%201%'::text) OR (info ~~ 'USA:%201%'::text)))
                                                  Rows Removed by Filter: 131
                                ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.80 rows=1 width=16) (actual time=0.078..0.118 rows=4 loops=3406)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                      Rows Removed by Filter: 169
                          ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.74 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=13758)
                                Index Cond: (id = ci.person_role_id)
              ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.003..0.003 rows=2 loops=2748)
                    Index Cond: (person_id = ci.person_id)
                    Heap Fetches: 6518
        ->  Index Scan using name_pkey on name n  (cost=0.43..1.85 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=6518)
              Index Cond: (id = ci.person_id)
              Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
              Rows Removed by Filter: 1
Planning time: 74.167 ms
Execution time: 675.071 ms
