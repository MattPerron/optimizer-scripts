Aggregate  (cost=437227.43..437227.44 rows=1 width=64) (actual time=24036.693..24036.693 rows=1 loops=1)
  ->  Nested Loop  (cost=228268.88..437215.13 rows=2461 width=32) (actual time=3106.706..23204.588 rows=1760645 loops=1)
        ->  Nested Loop  (cost=228268.46..433572.09 rows=2215 width=40) (actual time=3105.432..20642.021 rows=787043 loops=1)
              ->  Nested Loop  (cost=228268.03..431215.63 rows=1612 width=44) (actual time=3105.407..18444.776 rows=880631 loops=1)
                    ->  Nested Loop  (cost=228267.61..425988.09 rows=4466 width=48) (actual time=3105.374..8984.449 rows=3671284 loops=1)
                          Join Filter: (t.id = mc.movie_id)
                          ->  Nested Loop  (cost=228267.18..423440.68 rows=953 width=56) (actual time=3105.347..6125.219 rows=371543 loops=1)
                                ->  Hash Join  (cost=228266.75..416898.49 rows=4130 width=37) (actual time=3105.307..4822.612 rows=371852 loops=1)
                                      Hash Cond: (mi.movie_id = t.id)
                                      ->  Nested Loop  (cost=3971.58..179403.51 rows=3036719 width=4) (actual time=162.689..1103.257 rows=3036719 loops=1)
                                            ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.031 rows=1 loops=1)
                                                  Filter: ((info)::text = 'release dates'::text)
                                                  Rows Removed by Filter: 112
                                            ->  Bitmap Heap Scan on movie_info mi  (cost=3971.58..177280.91 rows=212019 width=8) (actual time=162.674..651.049 rows=3036719 loops=1)
                                                  Recheck Cond: (info_type_id = it.id)
                                                  Heap Blocks: exact=25448
                                                  ->  Bitmap Index Scan on info_type_id_movie_info  (cost=0.00..3918.58 rows=212019 width=0) (actual time=157.153..157.153 rows=3036719 loops=1)
                                                        Index Cond: (info_type_id = it.id)
                                      ->  Hash  (cost=222409.12..222409.12 rows=150884 width=33) (actual time=2942.304..2942.304 rows=168407 loops=1)
                                            Buckets: 262144  Batches: 1  Memory Usage: 14124kB
                                            ->  Hash Join  (cost=84873.05..222409.12 rows=150884 width=33) (actual time=913.484..2878.627 rows=168407 loops=1)
                                                  Hash Cond: (ci.movie_id = t.id)
                                                  ->  Nested Loop  (cost=0.56..134050.03 rows=276166 width=12) (actual time=0.180..1817.211 rows=276166 loops=1)
                                                        ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.014..0.023 rows=1 loops=1)
                                                              Filter: ((role)::text = 'actress'::text)
                                                              Rows Removed by Filter: 11
                                                        ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133252.59 rows=79629 width=16) (actual time=0.162..1777.971 rows=276166 loops=1)
                                                              Index Cond: (role_id = rt.id)
                                                              Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                              Rows Removed by Filter: 7175807
                                                  ->  Hash  (cost=67604.32..67604.32 rows=1381453 width=21) (actual time=909.695..909.695 rows=1381453 loops=1)
                                                        Buckets: 2097152  Batches: 1  Memory Usage: 90381kB
                                                        ->  Seq Scan on title t  (cost=0.00..67604.32 rows=1381453 width=21) (actual time=0.012..498.243 rows=1381453 loops=1)
                                                              Filter: (production_year > 2000)
                                                              Rows Removed by Filter: 1146859
                                ->  Index Scan using name_pkey on name n  (cost=0.43..1.58 rows=1 width=19) (actual time=0.003..0.003 rows=1 loops=371852)
                                      Index Cond: (id = ci.person_id)
                                      Filter: ((gender)::text = 'f'::text)
                                      Rows Removed by Filter: 0
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.61 rows=5 width=8) (actual time=0.002..0.004 rows=10 loops=371543)
                                Index Cond: (movie_id = mi.movie_id)
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.17 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=3671284)
                          Index Cond: (id = mc.company_id)
                          Filter: ((country_code)::text = '[us]'::text)
                          Rows Removed by Filter: 1
              ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.46 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=880631)
                    Index Cond: (id = ci.person_role_id)
                    Heap Fetches: 787043
        ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.62 rows=2 width=4) (actual time=0.002..0.003 rows=2 loops=787043)
              Index Cond: (person_id = n.id)
              Heap Fetches: 1760645
Planning time: 18.422 ms
Execution time: 24038.866 ms
