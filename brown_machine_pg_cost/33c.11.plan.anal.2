Aggregate  (cost=12636.17..12636.18 rows=1 width=192) (actual time=19.884..19.884 rows=1 loops=1)
  ->  Nested Loop  (cost=42.38..12636.05 rows=8 width=84) (actual time=1.294..19.722 rows=114 loops=1)
        ->  Nested Loop  (cost=41.96..12629.36 rows=15 width=69) (actual time=1.290..19.321 rows=131 loops=1)
              ->  Nested Loop  (cost=41.53..12620.23 rows=15 width=77) (actual time=1.285..19.113 rows=44 loops=1)
                    Join Filter: (t2.kind_id = kt2.id)
                    Rows Removed by Join Filter: 14
                    ->  Nested Loop  (cost=41.53..12617.68 rows=51 width=81) (actual time=1.282..19.080 rows=51 loops=1)
                          Join Filter: (t1.kind_id = kt1.id)
                          ->  Nested Loop  (cost=41.53..12615.12 rows=51 width=85) (actual time=1.275..19.043 rows=51 loops=1)
                                Join Filter: (it1.id = mi_idx1.info_type_id)
                                Rows Removed by Join Filter: 102
                                ->  Nested Loop  (cost=41.10..12585.64 rows=55 width=79) (actual time=1.270..18.828 rows=55 loops=1)
                                      ->  Nested Loop  (cost=40.68..12561.25 rows=55 width=64) (actual time=1.265..18.652 rows=55 loops=1)
                                            ->  Nested Loop  (cost=40.25..12315.40 rows=55 width=39) (actual time=1.261..18.481 rows=55 loops=1)
                                                  ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..14.12 rows=1 width=4) (actual time=0.024..0.027 rows=1 loops=1)
                                                        Filter: ((info)::text = 'rating'::text)
                                                        Rows Removed by Filter: 112
                                                  ->  Nested Loop  (cost=40.11..12300.73 rows=55 width=35) (actual time=1.235..18.439 rows=55 loops=1)
                                                        Join Filter: (mi_idx2.info_type_id = it2.id)
                                                        Rows Removed by Join Filter: 5243
                                                        ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                                              Filter: ((info)::text = 'rating'::text)
                                                              Rows Removed by Filter: 112
                                                        ->  Nested Loop  (cost=40.11..12232.09 rows=5298 width=39) (actual time=0.096..17.921 rows=5298 loops=1)
                                                              ->  Nested Loop  (cost=39.68..11352.94 rows=1318 width=47) (actual time=0.091..11.966 rows=1318 loops=1)
                                                                    ->  Nested Loop  (cost=39.25..10830.31 rows=946 width=33) (actual time=0.085..8.006 rows=946 loops=1)
                                                                          ->  Nested Loop  (cost=38.82..470.30 rows=2315 width=8) (actual time=0.079..1.194 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.003..0.007 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.072..0.380 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.058..0.058 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using title_pkey on title t2  (cost=0.43..4.48 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=2315)
                                                                                Index Cond: (id = ml.linked_movie_id)
                                                                                Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                                Rows Removed by Filter: 1
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.53 rows=2 width=14) (actual time=0.003..0.004 rows=1 loops=946)
                                                                          Index Cond: (movie_id = t2.id)
                                                                          Filter: (info < '3.5'::text)
                                                                          Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.002..0.003 rows=4 loops=1318)
                                                                    Index Cond: (movie_id = t2.id)
                                            ->  Index Scan using title_pkey on title t1  (cost=0.43..4.47 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=55)
                                                  Index Cond: (id = ml.movie_id)
                                      ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=55)
                                            Index Cond: (id = mc2.company_id)
                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..0.50 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=55)
                                      Index Cond: (movie_id = t1.id)
                          ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=51)
                                ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=2 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                      Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                      Rows Removed by Filter: 1
                    ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=51)
                          ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.002..0.004 rows=2 loops=1)
                                Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                Rows Removed by Filter: 5
              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.004 rows=3 loops=44)
                    Index Cond: (movie_id = t1.id)
        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=131)
              Index Cond: (id = mc1.company_id)
              Filter: ((country_code)::text <> '[us]'::text)
              Rows Removed by Filter: 0
Planning time: 86.345 ms
Execution time: 20.001 ms
