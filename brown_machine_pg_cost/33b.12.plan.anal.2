Aggregate  (cost=5423.48..5423.49 rows=1 width=192) (actual time=11.052..11.052 rows=1 loops=1)
  ->  Nested Loop  (cost=42.64..5423.47 rows=1 width=84) (actual time=0.871..11.041 rows=4 loops=1)
        ->  Nested Loop  (cost=42.22..5420.79 rows=6 width=69) (actual time=0.868..10.998 rows=14 loops=1)
              ->  Nested Loop  (cost=41.79..5417.14 rows=6 width=77) (actual time=0.864..10.972 rows=6 loops=1)
                    Join Filter: (it1.id = mi_idx1.info_type_id)
                    Rows Removed by Join Filter: 12
                    ->  Nested Loop  (cost=41.36..5413.93 rows=6 width=71) (actual time=0.859..10.947 rows=6 loops=1)
                          ->  Nested Loop  (cost=41.23..5413.00 rows=6 width=75) (actual time=0.856..10.936 rows=6 loops=1)
                                ->  Nested Loop  (cost=40.80..5386.18 rows=6 width=50) (actual time=0.852..10.917 rows=6 loops=1)
                                      ->  Nested Loop  (cost=40.67..5385.25 rows=6 width=54) (actual time=0.849..10.904 rows=6 loops=1)
                                            Join Filter: (ml.linked_movie_id = t2.id)
                                            ->  Nested Loop  (cost=40.24..5349.11 rows=68 width=45) (actual time=0.844..10.706 rows=68 loops=1)
                                                  ->  Nested Loop  (cost=39.82..5318.96 rows=68 width=30) (actual time=0.840..10.494 rows=68 loops=1)
                                                        Join Filter: (ml.linked_movie_id = mc2.movie_id)
                                                        ->  Nested Loop  (cost=39.39..5293.88 rows=34 width=22) (actual time=0.835..10.335 rows=34 loops=1)
                                                              Join Filter: (it2.id = mi_idx2.info_type_id)
                                                              Rows Removed by Join Filter: 2910
                                                              ->  Nested Loop  (cost=0.14..16.54 rows=1 width=8) (actual time=0.037..0.042 rows=1 loops=1)
                                                                    ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..14.12 rows=1 width=4) (actual time=0.025..0.027 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                              ->  Nested Loop  (cost=39.25..5240.54 rows=2944 width=22) (actual time=0.086..9.963 rows=2944 loops=1)
                                                                    ->  Nested Loop  (cost=38.82..470.28 rows=2315 width=8) (actual time=0.078..1.114 rows=2315 loops=1)
                                                                          ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=4) (actual time=0.002..0.007 rows=2 loops=1)
                                                                                Filter: ((link)::text ~~ '%follow%'::text)
                                                                                Rows Removed by Filter: 16
                                                                          ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.072..0.354 rows=1158 loops=2)
                                                                                Recheck Cond: (link_type_id = lt.id)
                                                                                Heap Blocks: exact=191
                                                                                ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.058..0.058 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.002..0.003 rows=1 loops=2315)
                                                                          Index Cond: (movie_id = ml.linked_movie_id)
                                                                          Filter: (info < '3.0'::text)
                                                                          Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.003..0.004 rows=2 loops=34)
                                                              Index Cond: (movie_id = mi_idx2.movie_id)
                                                  ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=68)
                                                        Index Cond: (id = mc2.company_id)
                                            ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=68)
                                                  Index Cond: (id = mc2.movie_id)
                                                  Filter: (production_year = 2007)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6)
                                            Index Cond: (id = t2.kind_id)
                                            Filter: ((kind)::text = 'tv series'::text)
                                ->  Index Scan using title_pkey on title t1  (cost=0.43..4.47 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=6)
                                      Index Cond: (id = ml.movie_id)
                          ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6)
                                Index Cond: (id = t1.kind_id)
                                Filter: ((kind)::text = 'tv series'::text)
                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..0.50 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=6)
                          Index Cond: (movie_id = t1.id)
              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=2 loops=6)
                    Index Cond: (movie_id = t1.id)
        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=14)
              Index Cond: (id = mc1.company_id)
              Filter: ((country_code)::text = '[nl]'::text)
              Rows Removed by Filter: 1
Planning time: 89.145 ms
Execution time: 11.165 ms
