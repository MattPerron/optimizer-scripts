Aggregate  (cost=7364.95..7364.96 rows=1 width=192) (actual time=34.458..34.459 rows=1 loops=1)
  ->  Nested Loop  (cost=603.23..7364.94 rows=1 width=84) (actual time=5.567..34.448 rows=4 loops=1)
        Join Filter: ((ml.movie_id = t1.id) AND (kt1.id = t1.kind_id))
        ->  Nested Loop  (cost=602.80..7364.41 rows=1 width=83) (actual time=5.561..34.432 rows=4 loops=1)
              ->  Nested Loop  (cost=602.80..7363.31 rows=1 width=79) (actual time=5.558..34.420 rows=4 loops=1)
                    ->  Nested Loop  (cost=602.67..7363.14 rows=1 width=83) (actual time=5.555..34.411 rows=4 loops=1)
                          Join Filter: (ml.linked_movie_id = t2.id)
                          ->  Nested Loop  (cost=602.24..7357.82 rows=10 width=74) (actual time=5.550..34.378 rows=10 loops=1)
                                ->  Nested Loop  (cost=601.82..7353.39 rows=10 width=59) (actual time=5.547..34.346 rows=10 loops=1)
                                      ->  Nested Loop  (cost=601.40..7273.57 rows=179 width=44) (actual time=5.539..33.857 rows=179 loops=1)
                                            Join Filter: (ml.movie_id = mc1.movie_id)
                                            ->  Nested Loop  (cost=600.97..7235.57 rows=58 width=36) (actual time=5.535..33.590 rows=58 loops=1)
                                                  Join Filter: (ml.linked_movie_id = mc2.movie_id)
                                                  ->  Nested Loop  (cost=600.54..7213.44 rows=30 width=28) (actual time=5.530..33.446 rows=30 loops=1)
                                                        Join Filter: (mi_idx2.info_type_id = it2.id)
                                                        Rows Removed by Join Filter: 2756
                                                        ->  Nested Loop  (cost=600.54..7169.24 rows=2786 width=32) (actual time=1.553..32.264 rows=2786 loops=1)
                                                              ->  Nested Loop  (cost=600.11..2916.18 rows=2064 width=18) (actual time=1.545..23.556 rows=2064 loops=1)
                                                                    Join Filter: (it1.id = mi_idx1.info_type_id)
                                                                    Rows Removed by Join Filter: 4128
                                                                    ->  Merge Join  (cost=600.11..2820.89 rows=6192 width=22) (actual time=1.523..21.229 rows=6192 loops=1)
                                                                          Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43810.54 rows=1380035 width=14) (actual time=0.009..11.008 rows=63901 loops=1)
                                                                          ->  Sort  (cost=599.65..605.43 rows=2315 width=8) (actual time=1.483..2.096 rows=6443 loops=1)
                                                                                Sort Key: ml.movie_id
                                                                                Sort Method: quicksort  Memory: 205kB
                                                                                ->  Nested Loop  (cost=38.82..470.28 rows=2315 width=8) (actual time=0.083..0.993 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=4) (actual time=0.004..0.009 rows=2 loops=1)
                                                                                            Filter: ((link)::text ~~ '%follow%'::text)
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.075..0.314 rows=1158 loops=2)
                                                                                            Recheck Cond: (link_type_id = lt.id)
                                                                                            Heap Blocks: exact=191
                                                                                            ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.060..0.060 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                    ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6192)
                                                                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.003..0.004 rows=1 loops=2064)
                                                                    Index Cond: (movie_id = ml.linked_movie_id)
                                                                    Filter: (info < '3.0'::text)
                                                                    Rows Removed by Filter: 1
                                                        ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=2786)
                                                              ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                                    Filter: ((info)::text = 'rating'::text)
                                                                    Rows Removed by Filter: 112
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.003..0.004 rows=2 loops=30)
                                                        Index Cond: (movie_id = mi_idx2.movie_id)
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.002..0.003 rows=3 loops=58)
                                                  Index Cond: (movie_id = mi_idx1.movie_id)
                                      ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=179)
                                            Index Cond: (id = mc1.company_id)
                                            Filter: ((country_code)::text = '[nl]'::text)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=10)
                                      Index Cond: (id = mc2.company_id)
                          ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=10)
                                Index Cond: (id = mc2.movie_id)
                                Filter: (production_year = 2007)
                                Rows Removed by Filter: 1
                    ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=4)
                          Index Cond: (id = t2.kind_id)
                          Filter: ((kind)::text = 'tv series'::text)
              ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=4)
                    Filter: ((kind)::text = 'tv series'::text)
                    Rows Removed by Filter: 6
        ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=4)
              Index Cond: (id = mc1.movie_id)
Planning time: 89.593 ms
Execution time: 34.582 ms
