Aggregate  (cost=6510.55..6510.56 rows=1 width=96) (actual time=104.002..104.002 rows=1 loops=1)
  ->  Nested Loop  (cost=10.33..6510.54 rows=1 width=48) (actual time=40.648..103.956 rows=45 loops=1)
        Join Filter: (n.id = an.person_id)
        ->  Nested Loop  (cost=9.91..6508.43 rows=1 width=56) (actual time=40.636..103.883 rows=9 loops=1)
              ->  Nested Loop  (cost=9.49..6505.90 rows=1 width=60) (actual time=27.261..103.212 rows=155 loops=1)
                    ->  Nested Loop  (cost=9.06..6504.16 rows=1 width=48) (actual time=27.254..102.668 rows=155 loops=1)
                          ->  Nested Loop  (cost=8.63..6502.30 rows=1 width=29) (actual time=27.224..98.816 rows=1221 loops=1)
                                Join Filter: (rt.id = ci.role_id)
                                Rows Removed by Join Filter: 3958
                                ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                                      Filter: ((role)::text = 'actress'::text)
                                      Rows Removed by Filter: 11
                                ->  Nested Loop  (cost=8.63..6501.14 rows=1 width=33) (actual time=27.181..98.221 rows=5179 loops=1)
                                      Join Filter: (t.id = ci.movie_id)
                                      ->  Nested Loop  (cost=8.06..6461.33 rows=1 width=37) (actual time=27.164..80.248 rows=158 loops=1)
                                            Join Filter: (it.id = mi.info_type_id)
                                            ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.018 rows=1 loops=1)
                                                  Filter: ((info)::text = 'release dates'::text)
                                                  Rows Removed by Filter: 112
                                            ->  Nested Loop  (cost=8.06..6458.90 rows=1 width=41) (actual time=27.156..80.177 rows=158 loops=1)
                                                  Join Filter: (t.id = mi.movie_id)
                                                  ->  Nested Loop  (cost=7.63..6426.96 rows=1 width=33) (actual time=18.167..75.751 rows=62 loops=1)
                                                        Join Filter: (t.id = mc.movie_id)
                                                        ->  Nested Loop  (cost=7.20..6423.50 rows=1 width=25) (actual time=18.156..75.632 rows=7 loops=1)
                                                              ->  Nested Loop  (cost=6.77..6261.07 rows=101 width=4) (actual time=0.895..42.724 rows=9696 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=3 width=4) (actual time=0.014..28.559 rows=3 loops=1)
                                                                          Filter: (keyword = ANY ('{hero,martial-arts,hand-to-hand-combat,computer-animated-movie}'::text[]))
                                                                          Rows Removed by Filter: 134167
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.77..1096.83 rows=301 width=8) (actual time=0.849..4.192 rows=3232 loops=3)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=7446
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.69 rows=301 width=0) (actual time=0.458..0.458 rows=3232 loops=3)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..1.61 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=9696)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: ((production_year > 2010) AND (title ~~ 'Kung Fu Panda%'::text))
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.40 rows=5 width=8) (actual time=0.005..0.012 rows=9 loops=7)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                  ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..31.93 rows=1 width=8) (actual time=0.012..0.070 rows=3 loops=62)
                                                        Index Cond: (movie_id = mk.movie_id)
                                                        Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%201%'::text) OR (info ~~ 'USA:%201%'::text)))
                                                        Rows Removed by Filter: 193
                                      ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.80 rows=1 width=16) (actual time=0.008..0.107 rows=33 loops=158)
                                            Index Cond: (movie_id = mk.movie_id)
                                            Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                            Rows Removed by Filter: 120
                          ->  Index Scan using name_pkey on name n  (cost=0.43..1.85 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=1221)
                                Index Cond: (id = ci.person_id)
                                Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                Rows Removed by Filter: 1
                    ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.74 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=155)
                          Index Cond: (id = ci.person_role_id)
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.48 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=155)
                    Index Cond: (id = mc.company_id)
                    Filter: (((country_code)::text = '[us]'::text) AND (name = 'DreamWorks Animation'::text))
                    Rows Removed by Filter: 1
        ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.004..0.006 rows=5 loops=9)
              Index Cond: (person_id = ci.person_id)
              Heap Fetches: 45
Planning time: 73.633 ms
Execution time: 104.116 ms
