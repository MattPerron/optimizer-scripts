Aggregate  (cost=9742.47..9742.48 rows=1 width=192) (actual time=46.506..46.506 rows=1 loops=1)
  ->  Nested Loop  (cost=603.12..9742.46 rows=1 width=84) (actual time=7.567..46.491 rows=8 loops=1)
        Join Filter: (mi_idx2.info_type_id = it2.id)
        Rows Removed by Join Filter: 807
        ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.017 rows=1 loops=1)
              Filter: ((info)::text = 'rating'::text)
              Rows Removed by Filter: 112
        ->  Nested Loop  (cost=603.12..9738.81 rows=99 width=88) (actual time=2.038..46.367 rows=815 loops=1)
              ->  Nested Loop  (cost=602.70..9694.91 rows=99 width=73) (actual time=2.034..44.331 rows=815 loops=1)
                    Join Filter: (t2.id = mc2.movie_id)
                    ->  Nested Loop  (cost=602.27..9624.10 rows=96 width=81) (actual time=2.030..43.655 rows=96 loops=1)
                          ->  Nested Loop  (cost=601.85..9455.55 rows=378 width=66) (actual time=2.021..42.606 rows=378 loops=1)
                                ->  Nested Loop  (cost=601.42..9397.74 rows=95 width=74) (actual time=2.016..42.108 rows=95 loops=1)
                                      Join Filter: (t2.kind_id = kt2.id)
                                      Rows Removed by Join Filter: 45
                                      ->  Nested Loop  (cost=601.42..9394.55 rows=140 width=78) (actual time=1.574..42.037 rows=140 loops=1)
                                            Join Filter: (kt1.id = t1.kind_id)
                                            Rows Removed by Join Filter: 136
                                            ->  Nested Loop  (cost=601.42..9389.32 rows=276 width=82) (actual time=1.570..41.883 rows=276 loops=1)
                                                  Join Filter: (ml.movie_id = t1.id)
                                                  ->  Nested Loop  (cost=600.99..9226.37 rows=276 width=57) (actual time=1.565..41.097 rows=276 loops=1)
                                                        Join Filter: (ml.linked_movie_id = t2.id)
                                                        ->  Nested Loop  (cost=600.56..7169.26 rows=2786 width=32) (actual time=1.560..32.993 rows=2786 loops=1)
                                                              ->  Nested Loop  (cost=600.14..2916.20 rows=2064 width=18) (actual time=1.551..23.767 rows=2064 loops=1)
                                                                    Join Filter: (it1.id = mi_idx1.info_type_id)
                                                                    Rows Removed by Join Filter: 4128
                                                                    ->  Merge Join  (cost=600.14..2820.91 rows=6192 width=22) (actual time=1.529..21.325 rows=6192 loops=1)
                                                                          Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43810.54 rows=1380035 width=14) (actual time=0.008..11.008 rows=63901 loops=1)
                                                                          ->  Sort  (cost=599.67..605.46 rows=2315 width=8) (actual time=1.492..2.148 rows=6443 loops=1)
                                                                                Sort Key: ml.movie_id
                                                                                Sort Method: quicksort  Memory: 205kB
                                                                                ->  Nested Loop  (cost=38.82..470.30 rows=2315 width=8) (actual time=0.081..1.008 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.003..0.008 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.074..0.314 rows=1158 loops=2)
                                                                                            Recheck Cond: (link_type_id = lt.id)
                                                                                            Heap Blocks: exact=191
                                                                                            ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.059..0.059 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                    ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6192)
                                                                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.003..0.004 rows=1 loops=2064)
                                                                    Index Cond: (movie_id = ml.linked_movie_id)
                                                                    Filter: (info < '3.0'::text)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using title_pkey on title t2  (cost=0.43..0.73 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=2786)
                                                              Index Cond: (id = mi_idx2.movie_id)
                                                              Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=276)
                                                        Index Cond: (id = mi_idx1.movie_id)
                                            ->  Materialize  (cost=0.00..1.09 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=276)
                                                  ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.003..0.005 rows=1 loops=1)
                                                        Filter: ((kind)::text = 'tv series'::text)
                                                        Rows Removed by Filter: 6
                                      ->  Materialize  (cost=0.00..1.09 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=140)
                                            ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'tv series'::text)
                                                  Rows Removed by Filter: 6
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=95)
                                      Index Cond: (movie_id = t1.id)
                          ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=378)
                                Index Cond: (id = mc1.company_id)
                                Filter: ((country_code)::text = '[us]'::text)
                                Rows Removed by Filter: 1
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.002..0.004 rows=8 loops=96)
                          Index Cond: (movie_id = mi_idx2.movie_id)
              ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=815)
                    Index Cond: (id = mc2.company_id)
Planning time: 88.934 ms
Execution time: 46.631 ms
