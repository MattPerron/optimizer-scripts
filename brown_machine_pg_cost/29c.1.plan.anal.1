Aggregate  (cost=4080.53..4080.54 rows=1 width=96) (actual time=153.337..153.337 rows=1 loops=1)
  ->  Nested Loop  (cost=11.18..4080.53 rows=1 width=48) (actual time=3.637..142.628 rows=16308 loops=1)
        Join Filter: (mi.movie_id = t.id)
        ->  Nested Loop  (cost=10.75..4078.38 rows=1 width=51) (actual time=3.629..99.943 rows=16368 loops=1)
              Join Filter: (n.id = an.person_id)
              ->  Nested Loop  (cost=10.33..4072.58 rows=2 width=63) (actual time=3.622..80.662 rows=3882 loops=1)
                    ->  Nested Loop  (cost=9.91..4062.45 rows=5 width=67) (actual time=3.602..34.974 rows=17564 loops=1)
                          Join Filter: (mi.movie_id = mc.movie_id)
                          ->  Nested Loop  (cost=9.48..4057.59 rows=1 width=59) (actual time=3.595..23.648 rows=670 loops=1)
                                Join Filter: (it3.id = pi.info_type_id)
                                Rows Removed by Join Filter: 2104
                                ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.017 rows=1 loops=1)
                                      Filter: ((info)::text = 'trivia'::text)
                                      Rows Removed by Filter: 112
                                ->  Nested Loop  (cost=9.48..4055.17 rows=1 width=63) (actual time=3.525..23.284 rows=2774 loops=1)
                                      Join Filter: (n.id = pi.person_id)
                                      ->  Nested Loop  (cost=9.05..4035.63 rows=1 width=55) (actual time=3.515..21.768 rows=9 loops=1)
                                            Join Filter: (mi.info_type_id = it.id)
                                            ->  Nested Loop  (cost=9.05..4033.21 rows=1 width=59) (actual time=3.509..21.722 rows=9 loops=1)
                                                  Join Filter: (ci.role_id = rt.id)
                                                  ->  Nested Loop  (cost=9.05..4032.05 rows=1 width=63) (actual time=3.505..21.689 rows=9 loops=1)
                                                        Join Filter: (ci.movie_id = mi.movie_id)
                                                        ->  Nested Loop  (cost=8.61..3989.99 rows=1 width=55) (actual time=1.044..20.903 rows=5 loops=1)
                                                              ->  Nested Loop  (cost=8.18..3987.75 rows=1 width=43) (actual time=1.039..20.877 rows=6 loops=1)
                                                                    ->  Nested Loop  (cost=7.75..3980.73 rows=3 width=24) (actual time=0.413..18.209 rows=703 loops=1)
                                                                          ->  Nested Loop  (cost=7.19..3837.88 rows=3 width=8) (actual time=0.399..15.117 rows=23 loops=1)
                                                                                Join Filter: (cct2.id = cc.status_id)
                                                                                Rows Removed by Join Filter: 51
                                                                                ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                                                      Filter: ((kind)::text = 'complete+verified'::text)
                                                                                      Rows Removed by Filter: 3
                                                                                ->  Nested Loop  (cost=7.19..3836.68 rows=12 width=12) (actual time=0.215..15.101 rows=74 loops=1)
                                                                                      Join Filter: (cct1.id = cc.subject_id)
                                                                                      Rows Removed by Join Filter: 16
                                                                                      ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                                            Filter: ((kind)::text = 'cast'::text)
                                                                                            Rows Removed by Filter: 3
                                                                                      ->  Nested Loop  (cost=7.19..3835.04 rows=47 width=16) (actual time=0.213..15.076 rows=90 loops=1)
                                                                                            ->  Nested Loop  (cost=6.77..3739.98 rows=34 width=4) (actual time=0.139..14.037 rows=414 loops=1)
                                                                                                  ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.039..13.454 rows=1 loops=1)
                                                                                                        Filter: (keyword = 'computer-animation'::text)
                                                                                                        Rows Removed by Filter: 134169
                                                                                                  ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.77..1110.84 rows=301 width=8) (actual time=0.098..0.508 rows=414 loops=1)
                                                                                                        Recheck Cond: (keyword_id = k.id)
                                                                                                        Heap Blocks: exact=358
                                                                                                        ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.69 rows=301 width=0) (actual time=0.049..0.049 rows=414 loops=1)
                                                                                                              Index Cond: (keyword_id = k.id)
                                                                                            ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.78 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=414)
                                                                                                  Index Cond: (movie_id = mk.movie_id)
                                                                          ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.60 rows=1 width=16) (actual time=0.016..0.128 rows=31 loops=23)
                                                                                Index Cond: (movie_id = mk.movie_id)
                                                                                Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                Rows Removed by Filter: 116
                                                                    ->  Index Scan using name_pkey on name n  (cost=0.43..2.34 rows=1 width=19) (actual time=0.004..0.004 rows=0 loops=703)
                                                                          Index Cond: (id = ci.person_id)
                                                                          Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                          Rows Removed by Filter: 1
                                                              ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.25 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=6)
                                                                    Index Cond: (id = ci.person_role_id)
                                                        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.04 rows=1 width=8) (actual time=0.044..0.156 rows=2 loops=5)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                              Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%200%'::text) OR (info ~~ 'USA:%200%'::text)))
                                                              Rows Removed by Filter: 398
                                                  ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=9)
                                                        Filter: ((role)::text = 'actress'::text)
                                                        Rows Removed by Filter: 1
                                            ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=9)
                                                  Filter: ((info)::text = 'release dates'::text)
                                                  Rows Removed by Filter: 15
                                      ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.22 rows=25 width=8) (actual time=0.007..0.078 rows=308 loops=9)
                                            Index Cond: (person_id = ci.person_id)
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.79 rows=5 width=8) (actual time=0.003..0.008 rows=26 loops=670)
                                Index Cond: (movie_id = mk.movie_id)
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=17564)
                          Index Cond: (id = mc.company_id)
                          Filter: ((country_code)::text = '[us]'::text)
                          Rows Removed by Filter: 1
              ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.87 rows=2 width=4) (actual time=0.002..0.004 rows=4 loops=3882)
                    Index Cond: (person_id = pi.person_id)
                    Heap Fetches: 16368
        ->  Index Scan using title_pkey on title t  (cost=0.43..2.14 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=16368)
              Index Cond: (id = mk.movie_id)
              Filter: ((production_year >= 2000) AND (production_year <= 2010))
              Rows Removed by Filter: 0
Planning time: 116.147 ms
Execution time: 153.471 ms
