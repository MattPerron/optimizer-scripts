Aggregate  (cost=6742.90..6742.91 rows=1 width=192) (actual time=90.542..90.542 rows=1 loops=1)
  ->  Nested Loop  (cost=603.38..6742.88 rows=1 width=84) (actual time=18.094..90.529 rows=4 loops=1)
        Join Filter: ((ml.linked_movie_id = t2.id) AND (kt2.id = t2.kind_id))
        ->  Nested Loop  (cost=602.95..6742.35 rows=1 width=83) (actual time=18.082..90.489 rows=10 loops=1)
              ->  Nested Loop  (cost=602.80..6741.51 rows=5 width=87) (actual time=1.658..85.982 rows=3049 loops=1)
                    ->  Nested Loop  (cost=602.38..6739.30 rows=5 width=72) (actual time=1.652..77.861 rows=3049 loops=1)
                          Join Filter: (ml.linked_movie_id = mc2.movie_id)
                          ->  Nested Loop  (cost=601.95..6738.56 rows=1 width=64) (actual time=1.634..74.366 rows=519 loops=1)
                                ->  Nested Loop  (cost=601.53..6718.05 rows=46 width=49) (actual time=1.614..55.380 rows=7631 loops=1)
                                      ->  Nested Loop  (cost=601.10..6690.66 rows=45 width=57) (actual time=1.609..47.290 rows=1609 loops=1)
                                            ->  Nested Loop  (cost=600.68..6624.73 rows=32 width=43) (actual time=1.603..41.606 rows=1220 loops=1)
                                                  Join Filter: (mi_idx1.info_type_id = it1.id)
                                                  Rows Removed by Join Filter: 2440
                                                  ->  Nested Loop  (cost=600.68..6567.41 rows=3660 width=47) (actual time=1.565..39.859 rows=3660 loops=1)
                                                        Join Filter: (kt1.id = t1.kind_id)
                                                        Rows Removed by Join Filter: 2532
                                                        ->  Nested Loop  (cost=0.13..13.35 rows=1 width=8) (actual time=0.011..0.014 rows=1 loops=1)
                                                              ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..12.26 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'tv series'::text)
                                                                    Rows Removed by Filter: 6
                                                              ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'tv series'::text)
                                                                    Rows Removed by Filter: 6
                                                        ->  Nested Loop  (cost=600.54..6476.66 rows=6192 width=47) (actual time=1.554..38.632 rows=6192 loops=1)
                                                              Join Filter: (ml.movie_id = t1.id)
                                                              ->  Merge Join  (cost=600.11..2820.89 rows=6192 width=22) (actual time=1.546..21.952 rows=6192 loops=1)
                                                                    Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43810.54 rows=1380035 width=14) (actual time=0.006..11.120 rows=63901 loops=1)
                                                                    ->  Sort  (cost=599.65..605.43 rows=2315 width=8) (actual time=1.511..2.405 rows=6443 loops=1)
                                                                          Sort Key: ml.movie_id
                                                                          Sort Method: quicksort  Memory: 205kB
                                                                          ->  Nested Loop  (cost=38.82..470.28 rows=2315 width=8) (actual time=0.092..1.005 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=4) (actual time=0.003..0.008 rows=2 loops=1)
                                                                                      Filter: ((link)::text ~~ '%follow%'::text)
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.079..0.316 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.064..0.064 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                              ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=6192)
                                                                    Index Cond: (id = mi_idx1.movie_id)
                                                  ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=3660)
                                                        ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=1)
                                                              Filter: ((info)::text = 'rating'::text)
                                                              Rows Removed by Filter: 112
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.003..0.004 rows=1 loops=1220)
                                                  Index Cond: (movie_id = ml.linked_movie_id)
                                                  Filter: (info < '3.0'::text)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.004 rows=5 loops=1609)
                                            Index Cond: (movie_id = t1.id)
                                ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=7631)
                                      Index Cond: (id = mc1.company_id)
                                      Filter: ((country_code)::text = '[nl]'::text)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.003..0.005 rows=6 loops=519)
                                Index Cond: (movie_id = mi_idx2.movie_id)
                    ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=3049)
                          Index Cond: (id = mc2.company_id)
              ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=3049)
                    Index Cond: (id = mi_idx2.info_type_id)
                    Filter: ((info)::text = 'rating'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=10)
              Index Cond: (id = mc2.movie_id)
              Filter: (production_year = 2007)
              Rows Removed by Filter: 1
Planning time: 89.921 ms
Execution time: 90.667 ms
