Aggregate  (cost=4102.66..4102.67 rows=1 width=192) (actual time=56.358..56.358 rows=1 loops=1)
  ->  Nested Loop  (cost=923.69..4102.65 rows=1 width=84) (actual time=7.123..56.180 rows=114 loops=1)
        ->  Nested Loop  (cost=923.56..4102.04 rows=4 width=88) (actual time=7.117..55.971 rows=114 loops=1)
              Join Filter: (ml.movie_id = t1.id)
              ->  Nested Loop  (cost=923.13..4099.92 rows=4 width=79) (actual time=7.112..55.653 rows=114 loops=1)
                    ->  Nested Loop  (cost=922.71..4098.15 rows=4 width=64) (actual time=7.106..55.346 rows=114 loops=1)
                          ->  Nested Loop  (cost=922.29..4095.03 rows=7 width=49) (actual time=7.099..54.920 rows=131 loops=1)
                                Join Filter: (ml.movie_id = mc1.movie_id)
                                ->  Nested Loop  (cost=921.86..4094.37 rows=1 width=41) (actual time=7.092..54.680 rows=44 loops=1)
                                      ->  Nested Loop  (cost=921.72..4093.54 rows=5 width=45) (actual time=1.814..47.415 rows=4314 loops=1)
                                            Join Filter: (t2.id = mi_idx2.movie_id)
                                            ->  Nested Loop  (cost=921.29..4084.52 rows=17 width=47) (actual time=1.808..35.015 rows=3063 loops=1)
                                                  ->  Nested Loop  (cost=920.86..4073.87 rows=16 width=39) (actual time=1.803..31.383 rows=737 loops=1)
                                                        Join Filter: (t2.kind_id = kt2.id)
                                                        Rows Removed by Join Filter: 731
                                                        ->  Nested Loop  (cost=920.86..4071.20 rows=55 width=43) (actual time=1.581..30.830 rows=851 loops=1)
                                                              ->  Nested Loop  (cost=920.43..3484.96 rows=131 width=18) (actual time=1.574..24.079 rows=2064 loops=1)
                                                                    Join Filter: (it1.id = mi_idx1.info_type_id)
                                                                    Rows Removed by Join Filter: 4128
                                                                    ->  Merge Join  (cost=920.43..3260.42 rows=14808 width=22) (actual time=1.549..21.639 rows=6192 loops=1)
                                                                          Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43810.54 rows=1380035 width=14) (actual time=0.009..11.269 rows=63901 loops=1)
                                                                          ->  Sort  (cost=919.92..932.42 rows=5000 width=8) (actual time=1.506..2.148 rows=6443 loops=1)
                                                                                Sort Key: ml.movie_id
                                                                                Sort Method: quicksort  Memory: 205kB
                                                                                ->  Nested Loop  (cost=37.49..612.73 rows=5000 width=8) (actual time=0.085..0.986 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.008..0.013 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Bitmap Heap Scan on movie_link ml  (cost=37.49..185.08 rows=1875 width=12) (actual time=0.073..0.310 rows=1158 loops=2)
                                                                                            Recheck Cond: (link_type_id = lt.id)
                                                                                            Heap Blocks: exact=191
                                                                                            ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..37.02 rows=1875 width=0) (actual time=0.058..0.058 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                    ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6192)
                                                                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                              ->  Index Scan using title_pkey on title t2  (cost=0.43..4.48 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=2064)
                                                                    Index Cond: (id = ml.linked_movie_id)
                                                                    Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                    Rows Removed by Filter: 1
                                                        ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=851)
                                                              ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=1)
                                                                    Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                                    Rows Removed by Filter: 5
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.002..0.004 rows=4 loops=737)
                                                        Index Cond: (movie_id = t2.id)
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.51 rows=2 width=14) (actual time=0.002..0.003 rows=1 loops=3063)
                                                  Index Cond: (movie_id = mc2.movie_id)
                                                  Filter: (info < '3.5'::text)
                                                  Rows Removed by Filter: 2
                                      ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=4314)
                                            Index Cond: (id = mi_idx2.info_type_id)
                                            Filter: ((info)::text = 'rating'::text)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.003..0.004 rows=3 loops=44)
                                      Index Cond: (movie_id = mi_idx1.movie_id)
                          ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=131)
                                Index Cond: (id = mc1.company_id)
                                Filter: ((country_code)::text <> '[us]'::text)
                                Rows Removed by Filter: 0
                    ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=114)
                          Index Cond: (id = mc2.company_id)
              ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=114)
                    Index Cond: (id = mc1.movie_id)
        ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=114)
              Index Cond: (id = t1.kind_id)
              Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
Planning time: 86.899 ms
Execution time: 56.482 ms
