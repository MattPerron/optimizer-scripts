Aggregate  (cost=5442.11..5442.12 rows=1 width=192) (actual time=11.126..11.127 rows=1 loops=1)
  ->  Nested Loop  (cost=42.64..5442.10 rows=1 width=84) (actual time=0.940..11.116 rows=4 loops=1)
        Join Filter: ((ml.movie_id = t1.id) AND (kt1.id = t1.kind_id))
        ->  Nested Loop  (cost=42.21..5441.57 rows=1 width=83) (actual time=0.936..11.103 rows=4 loops=1)
              ->  Nested Loop  (cost=41.79..5438.44 rows=7 width=68) (actual time=0.933..11.060 rows=14 loops=1)
                    Join Filter: (ml.movie_id = mc1.movie_id)
                    ->  Nested Loop  (cost=41.36..5437.79 rows=1 width=60) (actual time=0.925..11.029 rows=6 loops=1)
                          ->  Nested Loop  (cost=41.22..5436.79 rows=6 width=64) (actual time=0.861..10.996 rows=18 loops=1)
                                ->  Nested Loop  (cost=40.80..5434.13 rows=6 width=49) (actual time=0.856..10.940 rows=18 loops=1)
                                      Join Filter: (t2.id = mc2.movie_id)
                                      ->  Nested Loop  (cost=40.37..5429.71 rows=6 width=57) (actual time=0.852..10.907 rows=6 loops=1)
                                            ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..12.26 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'tv series'::text)
                                                  Rows Removed by Filter: 6
                                            ->  Nested Loop  (cost=40.24..5417.39 rows=6 width=53) (actual time=0.844..10.896 rows=6 loops=1)
                                                  ->  Nested Loop  (cost=40.10..5416.47 rows=6 width=57) (actual time=0.841..10.882 rows=6 loops=1)
                                                        Join Filter: (ml.linked_movie_id = t2.id)
                                                        ->  Nested Loop  (cost=39.67..5350.24 rows=90 width=32) (actual time=0.836..10.598 rows=90 loops=1)
                                                              ->  Nested Loop  (cost=39.25..5279.75 rows=34 width=18) (actual time=0.831..10.467 rows=34 loops=1)
                                                                    Join Filter: (it2.id = mi_idx2.info_type_id)
                                                                    Rows Removed by Join Filter: 2910
                                                                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                                    ->  Nested Loop  (cost=39.25..5240.54 rows=2944 width=22) (actual time=0.091..10.111 rows=2944 loops=1)
                                                                          ->  Nested Loop  (cost=38.82..470.28 rows=2315 width=8) (actual time=0.079..1.156 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=4) (actual time=0.002..0.007 rows=2 loops=1)
                                                                                      Filter: ((link)::text ~~ '%follow%'::text)
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.073..0.366 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.059..0.059 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.003..0.003 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.0'::text)
                                                                                Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..2.04 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=34)
                                                                    Index Cond: (movie_id = ml.movie_id)
                                                        ->  Index Scan using title_pkey on title t2  (cost=0.43..0.72 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=90)
                                                              Index Cond: (id = mi_idx2.movie_id)
                                                              Filter: (production_year = 2007)
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=6)
                                                        Index Cond: (id = t2.kind_id)
                                                        Filter: ((kind)::text = 'tv series'::text)
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.003..0.004 rows=3 loops=6)
                                            Index Cond: (movie_id = mi_idx2.movie_id)
                                ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=18)
                                      Index Cond: (id = mc2.company_id)
                          ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=18)
                                Index Cond: (id = mi_idx1.info_type_id)
                                Filter: ((info)::text = 'rating'::text)
                                Rows Removed by Filter: 1
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.003..0.004 rows=2 loops=6)
                          Index Cond: (movie_id = mi_idx1.movie_id)
              ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=14)
                    Index Cond: (id = mc1.company_id)
                    Filter: ((country_code)::text = '[nl]'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=4)
              Index Cond: (id = mc1.movie_id)
Planning time: 89.732 ms
Execution time: 11.246 ms
