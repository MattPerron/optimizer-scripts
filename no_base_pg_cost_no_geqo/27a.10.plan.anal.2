Aggregate  (cost=2651.42..2651.43 rows=1 width=96) (actual time=12.188..12.188 rows=1 loops=1)
  ->  Nested Loop  (cost=377.61..2651.35 rows=9 width=48) (actual time=2.487..12.031 rows=477 loops=1)
        Join Filter: (ml.movie_id = mi.movie_id)
        ->  Nested Loop  (cost=377.17..2555.30 rows=62 width=68) (actual time=2.472..10.482 rows=172 loops=1)
              ->  Nested Loop  (cost=376.75..2373.35 rows=398 width=53) (actual time=1.936..9.705 rows=398 loops=1)
                    Join Filter: (mc.company_type_id = ct.id)
                    Rows Removed by Join Filter: 29
                    ->  Nested Loop  (cost=376.75..2365.89 rows=427 width=57) (actual time=1.932..9.551 rows=427 loops=1)
                          Join Filter: (ml.movie_id = mc.movie_id)
                          ->  Nested Loop  (cost=376.32..2321.39 rows=77 width=45) (actual time=1.922..9.200 rows=77 loops=1)
                                Join Filter: (cc.subject_id = cct1.id)
                                Rows Removed by Join Filter: 20
                                ->  Nested Loop  (cost=376.32..2318.21 rows=77 width=49) (actual time=1.919..9.165 rows=77 loops=1)
                                      ->  Nested Loop  (cost=375.90..1430.79 rows=2011 width=53) (actual time=1.749..5.916 rows=2011 loops=1)
                                            Join Filter: (ml.movie_id = mk.movie_id)
                                            ->  Nested Loop  (cost=375.47..1077.17 rows=179 width=45) (actual time=1.740..4.838 rows=179 loops=1)
                                                  Join Filter: (ml.movie_id = t.id)
                                                  ->  Nested Loop  (cost=375.04..737.50 rows=189 width=24) (actual time=1.732..4.399 rows=189 loops=1)
                                                        Join Filter: (cc.status_id = cct2.id)
                                                        Rows Removed by Join Filter: 68
                                                        ->  Merge Join  (cost=375.04..732.59 rows=257 width=28) (actual time=1.725..4.304 rows=257 loops=1)
                                                              Merge Cond: (cc.movie_id = ml.movie_id)
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6332.07 rows=135086 width=12) (actual time=0.013..1.841 rows=5993 loops=1)
                                                              ->  Sort  (cost=374.60..380.39 rows=2315 width=16) (actual time=1.499..1.658 rows=2341 loops=1)
                                                                    Sort Key: ml.movie_id
                                                                    Sort Method: quicksort  Memory: 205kB
                                                                    ->  Nested Loop  (cost=38.82..245.23 rows=2315 width=16) (actual time=0.069..0.999 rows=2315 loops=1)
                                                                          ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=16) (actual time=0.004..0.008 rows=2 loops=1)
                                                                                Filter: ((link)::text ~~ '%follow%'::text)
                                                                                Rows Removed by Filter: 16
                                                                          ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.057..0.309 rows=1158 loops=2)
                                                                                Recheck Cond: (link_type_id = lt.id)
                                                                                Heap Blocks: exact=191
                                                                                ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.045..0.045 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                        ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=257)
                                                              ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'complete'::text)
                                                                    Rows Removed by Filter: 3
                                                  ->  Index Scan using title_pkey on title t  (cost=0.43..1.78 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=189)
                                                        Index Cond: (id = cc.movie_id)
                                                        Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                                        Rows Removed by Filter: 0
                                            ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.40 rows=46 width=8) (actual time=0.002..0.004 rows=11 loops=179)
                                                  Index Cond: (movie_id = t.id)
                                      ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=2011)
                                            Index Cond: (id = mk.keyword_id)
                                            Filter: (keyword = 'sequel'::text)
                                            Rows Removed by Filter: 1
                                ->  Materialize  (cost=0.00..1.06 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=77)
                                      ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.001..0.002 rows=2 loops=1)
                                            Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.002..0.003 rows=6 loops=77)
                                Index Cond: (movie_id = mk.movie_id)
                                Filter: (note IS NULL)
                                Rows Removed by Filter: 1
                    ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=427)
                          ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                Filter: ((kind)::text = 'production companies'::text)
                                Rows Removed by Filter: 3
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=398)
                    Index Cond: (id = mc.company_id)
                    Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                    Rows Removed by Filter: 1
        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.54 rows=1 width=4) (actual time=0.007..0.008 rows=3 loops=172)
              Index Cond: (movie_id = mk.movie_id)
              Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
              Rows Removed by Filter: 17
Planning time: 53.287 ms
Execution time: 12.305 ms
