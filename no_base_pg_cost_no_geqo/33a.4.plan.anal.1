Aggregate  (cost=4922.66..4922.67 rows=1 width=192) (actual time=30.158..30.158 rows=1 loops=1)
  ->  Nested Loop  (cost=745.66..4922.63 rows=2 width=84) (actual time=5.598..30.138 rows=8 loops=1)
        ->  Nested Loop  (cost=745.24..4921.74 rows=2 width=69) (actual time=5.591..30.112 rows=8 loops=1)
              Join Filter: (t2.id = mc2.movie_id)
              ->  Nested Loop  (cost=744.81..4921.00 rows=1 width=77) (actual time=5.582..30.095 rows=2 loops=1)
                    ->  Nested Loop  (cost=744.39..4920.56 rows=1 width=62) (actual time=5.567..30.041 rows=14 loops=1)
                          ->  Nested Loop  (cost=743.96..4919.95 rows=1 width=70) (actual time=5.554..30.002 rows=5 loops=1)
                                ->  Nested Loop  (cost=743.83..4918.87 rows=7 width=74) (actual time=5.545..29.988 rows=5 loops=1)
                                      Join Filter: (ml.linked_movie_id = t2.id)
                                      ->  Nested Loop  (cost=743.40..4890.03 rows=39 width=49) (actual time=5.539..29.893 rows=28 loops=1)
                                            Join Filter: (mi_idx2.info_type_id = it2.id)
                                            Rows Removed by Join Filter: 1581
                                            ->  Nested Loop  (cost=743.40..4881.35 rows=418 width=53) (actual time=1.578..29.283 rows=1609 loops=1)
                                                  ->  Nested Loop  (cost=742.97..4273.47 rows=295 width=39) (actual time=1.568..25.435 rows=1220 loops=1)
                                                        Join Filter: (t1.kind_id = kt1.id)
                                                        Rows Removed by Join Filter: 844
                                                        ->  Nested Loop  (cost=742.97..4241.42 rows=2064 width=43) (actual time=1.564..24.697 rows=2064 loops=1)
                                                              Join Filter: (ml.movie_id = t1.id)
                                                              ->  Nested Loop  (cost=742.54..3022.83 rows=2064 width=18) (actual time=1.555..20.666 rows=2064 loops=1)
                                                                    Join Filter: (mi_idx1.info_type_id = it1.id)
                                                                    Rows Removed by Join Filter: 4128
                                                                    ->  Merge Join  (cost=742.54..2927.54 rows=6192 width=22) (actual time=1.535..18.518 rows=6192 loops=1)
                                                                          Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43804.18 rows=1380035 width=14) (actual time=0.018..9.501 rows=63901 loops=1)
                                                                          ->  Sort  (cost=742.10..747.89 rows=2315 width=8) (actual time=1.489..1.965 rows=6443 loops=1)
                                                                                Sort Key: ml.movie_id
                                                                                Sort Method: quicksort  Memory: 205kB
                                                                                ->  Nested Loop  (cost=37.49..612.73 rows=2315 width=8) (actual time=0.073..0.992 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.006..0.010 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Bitmap Heap Scan on movie_link ml  (cost=37.49..185.08 rows=1875 width=12) (actual time=0.057..0.306 rows=1158 loops=2)
                                                                                            Recheck Cond: (link_type_id = lt.id)
                                                                                            Heap Blocks: exact=191
                                                                                            ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..37.02 rows=1875 width=0) (actual time=0.045..0.045 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                    ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6192)
                                                                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                              ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=2064)
                                                                    Index Cond: (id = mi_idx1.movie_id)
                                                        ->  Materialize  (cost=0.00..1.09 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=2064)
                                                              ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.002..0.004 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'tv series'::text)
                                                                    Rows Removed by Filter: 6
                                                  ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.002..0.003 rows=1 loops=1220)
                                                        Index Cond: (movie_id = ml.linked_movie_id)
                                                        Filter: (info < '3.0'::text)
                                                        Rows Removed by Filter: 1
                                            ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=1609)
                                                  ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                        Filter: ((info)::text = 'rating'::text)
                                                        Rows Removed by Filter: 112
                                      ->  Index Scan using title_pkey on title t2  (cost=0.43..0.73 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=28)
                                            Index Cond: (id = mi_idx2.movie_id)
                                            Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                            Rows Removed by Filter: 1
                                ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=5)
                                      Index Cond: (id = t2.kind_id)
                                      Filter: ((kind)::text = 'tv series'::text)
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.005..0.006 rows=3 loops=5)
                                Index Cond: (movie_id = t1.id)
                    ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=14)
                          Index Cond: (id = mc1.company_id)
                          Filter: ((country_code)::text = '[us]'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.005..0.007 rows=4 loops=2)
                    Index Cond: (movie_id = mi_idx2.movie_id)
        ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=8)
              Index Cond: (id = mc2.company_id)
Planning time: 252.678 ms
Execution time: 30.373 ms
