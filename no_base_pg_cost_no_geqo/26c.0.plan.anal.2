Aggregate  (cost=11753.33..11753.34 rows=1 width=96) (actual time=4250.314..4250.314 rows=1 loops=1)
  ->  Nested Loop  (cost=5.26..11753.32 rows=1 width=39) (actual time=2.505..4247.211 rows=5400 loops=1)
        ->  Nested Loop  (cost=4.83..11752.87 rows=1 width=43) (actual time=2.496..4227.637 rows=5400 loops=1)
              ->  Nested Loop  (cost=4.41..11729.85 rows=51 width=47) (actual time=1.887..2018.858 rows=1145482 loops=1)
                    ->  Nested Loop  (cost=3.98..11710.01 rows=11 width=59) (actual time=1.879..1609.515 rows=10450 loops=1)
                          ->  Nested Loop  (cost=3.55..11576.80 rows=291 width=47) (actual time=0.119..955.405 rows=385916 loops=1)
                                ->  Nested Loop  (cost=2.98..11530.56 rows=18 width=35) (actual time=0.106..473.025 rows=4028 loops=1)
                                      Join Filter: (t.kind_id = kt.id)
                                      Rows Removed by Join Filter: 8908
                                      ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                            Filter: ((kind)::text = 'movie'::text)
                                            Rows Removed by Filter: 6
                                      ->  Nested Loop  (cost=2.98..11527.94 rows=123 width=39) (actual time=0.096..471.017 rows=12936 loops=1)
                                            Join Filter: (cc.movie_id = t.id)
                                            ->  Nested Loop  (cost=2.55..11395.72 rows=223 width=14) (actual time=0.045..306.242 rows=61559 loops=1)
                                                  Join Filter: (mi_idx.info_type_id = it2.id)
                                                  Rows Removed by Join Filter: 123343
                                                  ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.012 rows=1 loops=1)
                                                        Filter: ((info)::text = 'rating'::text)
                                                        Rows Removed by Filter: 112
                                                  ->  Nested Loop  (cost=2.55..11077.63 rows=25254 width=18) (actual time=0.033..283.826 rows=184902 loops=1)
                                                        ->  Hash Join  (cost=2.12..3841.16 rows=8443 width=4) (actual time=0.020..66.044 rows=85941 loops=1)
                                                              Hash Cond: (cc.status_id = cct2.id)
                                                              ->  Hash Join  (cost=1.06..3488.66 rows=33772 width=8) (actual time=0.009..46.474 rows=85941 loops=1)
                                                                    Hash Cond: (cc.subject_id = cct1.id)
                                                                    ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.004..14.065 rows=135086 loops=1)
                                                                    ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                          ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1)
                                                                                Filter: ((kind)::text = 'cast'::text)
                                                                                Rows Removed by Filter: 3
                                                              ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.006..0.006 rows=2 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.004 rows=2 loops=1)
                                                                          Filter: ((kind)::text ~~ '%complete%'::text)
                                                                          Rows Removed by Filter: 2
                                                        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.83 rows=3 width=14) (actual time=0.002..0.002 rows=2 loops=85941)
                                                              Index Cond: (movie_id = cc.movie_id)
                                            ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=61559)
                                                  Index Cond: (id = mi_idx.movie_id)
                                                  Filter: (production_year > 2000)
                                                  Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..2.21 rows=36 width=12) (actual time=0.006..0.102 rows=96 loops=4028)
                                      Index Cond: (movie_id = t.id)
                          ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.001..0.001 rows=0 loops=385916)
                                Index Cond: (id = ci.person_role_id)
                                Filter: ((name IS NOT NULL) AND ((name ~~ '%man%'::text) OR (name ~~ '%Man%'::text)))
                                Rows Removed by Filter: 0
                    ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=46 width=8) (actual time=0.003..0.021 rows=110 loops=10450)
                          Index Cond: (movie_id = t.id)
              ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=1145482)
                    Index Cond: (id = mk.keyword_id)
                    Filter: (keyword = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                    Rows Removed by Filter: 1
        ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=5400)
              Index Cond: (id = ci.person_id)
              Heap Fetches: 0
Planning time: 33.397 ms
Execution time: 4250.434 ms
