Aggregate  (cost=2634.28..2634.29 rows=1 width=192) (actual time=27.741..27.742 rows=1 loops=1)
  ->  Nested Loop  (cost=384.11..2634.27 rows=1 width=84) (actual time=5.285..27.725 rows=4 loops=1)
        ->  Nested Loop  (cost=383.98..2634.10 rows=1 width=88) (actual time=5.276..27.711 rows=4 loops=1)
              Join Filter: (ml.linked_movie_id = t2.id)
              ->  Nested Loop  (cost=383.55..2633.57 rows=1 width=79) (actual time=5.270..27.681 rows=10 loops=1)
                    ->  Nested Loop  (cost=383.13..2633.12 rows=1 width=64) (actual time=5.268..27.641 rows=10 loops=1)
                          Join Filter: (ml.linked_movie_id = mc2.movie_id)
                          ->  Nested Loop  (cost=382.70..2632.38 rows=1 width=56) (actual time=5.261..27.611 rows=4 loops=1)
                                ->  Nested Loop  (cost=382.28..2631.94 rows=1 width=41) (actual time=5.253..27.398 rows=81 loops=1)
                                      ->  Nested Loop  (cost=381.85..2631.33 rows=1 width=49) (actual time=5.246..27.239 rows=28 loops=1)
                                            Join Filter: (it2.id = mi_idx2.info_type_id)
                                            Rows Removed by Join Filter: 1581
                                            ->  Hash Join  (cost=381.42..2618.95 rows=6 width=43) (actual time=1.582..23.571 rows=1220 loops=1)
                                                  Hash Cond: (t1.kind_id = kt1.id)
                                                  ->  Nested Loop  (cost=380.32..2617.35 rows=44 width=47) (actual time=1.560..23.161 rows=2064 loops=1)
                                                        Join Filter: (ml.movie_id = t1.id)
                                                        ->  Hash Join  (cost=379.89..2591.37 rows=44 width=22) (actual time=1.551..19.229 rows=2064 loops=1)
                                                              Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                              ->  Merge Join  (cost=375.04..2560.04 rows=6900 width=22) (actual time=1.516..18.315 rows=6192 loops=1)
                                                                    Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43804.18 rows=1380035 width=14) (actual time=0.013..9.401 rows=63901 loops=1)
                                                                    ->  Sort  (cost=374.60..380.39 rows=2315 width=8) (actual time=1.475..1.940 rows=6443 loops=1)
                                                                          Sort Key: ml.movie_id
                                                                          Sort Method: quicksort  Memory: 205kB
                                                                          ->  Nested Loop  (cost=38.82..245.23 rows=2315 width=8) (actual time=0.069..0.977 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.004..0.007 rows=2 loops=1)
                                                                                      Filter: ((link)::text ~~ '%follow%'::text)
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=12) (actual time=0.057..0.303 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.045..0.045 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                              ->  Hash  (cost=4.83..4.83 rows=1 width=8) (actual time=0.025..0.025 rows=1 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Nested Loop  (cost=0.00..4.83 rows=1 width=8) (actual time=0.019..0.021 rows=1 loops=1)
                                                                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                                          ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                        ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=2064)
                                                              Index Cond: (id = mi_idx1.movie_id)
                                                  ->  Hash  (cost=1.09..1.09 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'tv series'::text)
                                                              Rows Removed by Filter: 6
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.002..0.003 rows=1 loops=1220)
                                                  Index Cond: (movie_id = ml.linked_movie_id)
                                                  Filter: (info < '3.0'::text)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.003..0.005 rows=3 loops=28)
                                            Index Cond: (movie_id = t1.id)
                                ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=81)
                                      Index Cond: (id = mc1.company_id)
                                      Filter: ((country_code)::text = '[nl]'::text)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.004..0.006 rows=2 loops=4)
                                Index Cond: (movie_id = mi_idx2.movie_id)
                    ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=10)
                          Index Cond: (id = mc2.company_id)
              ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=10)
                    Index Cond: (id = mc2.movie_id)
                    Filter: (production_year = 2007)
                    Rows Removed by Filter: 1
        ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=4)
              Index Cond: (id = t2.kind_id)
              Filter: ((kind)::text = 'tv series'::text)
Planning time: 251.108 ms
Execution time: 27.959 ms
