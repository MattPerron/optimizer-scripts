Aggregate  (cost=13948.13..13948.14 rows=1 width=96) (actual time=241.807..241.807 rows=1 loops=1)
  ->  Nested Loop  (cost=4115.43..13948.12 rows=1 width=42) (actual time=41.531..241.725 rows=148 loops=1)
        ->  Nested Loop  (cost=4115.29..13947.94 rows=1 width=46) (actual time=41.522..241.529 rows=149 loops=1)
              Join Filter: (t.id = mi.movie_id)
              ->  Nested Loop  (cost=4114.85..13946.39 rows=1 width=62) (actual time=41.300..138.075 rows=1387 loops=1)
                    ->  Nested Loop  (cost=4114.43..13945.84 rows=1 width=47) (actual time=41.289..133.985 rows=1422 loops=1)
                          ->  Hash Join  (cost=4114.29..13945.17 rows=4 width=51) (actual time=41.279..131.975 rows=1690 loops=1)
                                Hash Cond: (mc.company_type_id = ct.id)
                                ->  Nested Loop  (cost=4113.20..13933.93 rows=975 width=55) (actual time=41.256..131.481 rows=1690 loops=1)
                                      Join Filter: (t.id = mc.movie_id)
                                      ->  Nested Loop  (cost=4112.77..13897.52 rows=63 width=43) (actual time=41.242..128.675 rows=197 loops=1)
                                            Join Filter: (t.id = mi_idx.movie_id)
                                            ->  Hash Join  (cost=4112.34..13758.19 rows=273 width=29) (actual time=41.216..127.292 rows=273 loops=1)
                                                  Hash Cond: (t.kind_id = kt.id)
                                                  ->  Nested Loop  (cost=4111.23..13753.50 rows=315 width=33) (actual time=41.201..127.186 rows=315 loops=1)
                                                        ->  Hash Join  (cost=4110.80..11876.67 rows=3832 width=8) (actual time=41.182..113.868 rows=3832 loops=1)
                                                              Hash Cond: (cc.status_id = cct2.id)
                                                              ->  Hash Join  (cost=4109.71..11810.90 rows=6216 width=12) (actual time=41.165..112.625 rows=6216 loops=1)
                                                                    Hash Cond: (mk.movie_id = cc.movie_id)
                                                                    ->  Nested Loop  (cost=6.74..7290.41 rows=37091 width=4) (actual time=3.432..64.399 rows=37091 loops=1)
                                                                          ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.823..15.491 rows=3 loops=1)
                                                                                Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                Rows Removed by Filter: 134167
                                                                          ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.74..1079.23 rows=298 width=8) (actual time=2.606..14.385 rows=12364 loops=3)
                                                                                Recheck Cond: (keyword_id = k.id)
                                                                                Heap Blocks: exact=26312
                                                                                ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=298 width=0) (actual time=1.467..1.467 rows=12364 loops=3)
                                                                                      Index Cond: (keyword_id = k.id)
                                                                    ->  Hash  (cost=3488.66..3488.66 rows=49145 width=8) (actual time=37.607..37.607 rows=49145 loops=1)
                                                                          Buckets: 65536  Batches: 1  Memory Usage: 2432kB
                                                                          ->  Hash Join  (cost=1.06..3488.66 rows=49145 width=8) (actual time=14.877..30.098 rows=49145 loops=1)
                                                                                Hash Cond: (cc.subject_id = cct1.id)
                                                                                ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.005..10.662 rows=135086 loops=1)
                                                                                ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                                                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                      ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                                                                            Filter: ((kind)::text = 'crew'::text)
                                                                                            Rows Removed by Filter: 3
                                                              ->  Hash  (cost=1.05..1.05 rows=3 width=4) (actual time=0.007..0.007 rows=3 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.003..0.004 rows=3 loops=1)
                                                                          Filter: ((kind)::text <> 'complete+verified'::text)
                                                                          Rows Removed by Filter: 1
                                                        ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=3832)
                                                              Index Cond: (id = mk.movie_id)
                                                              Filter: (production_year > 2005)
                                                              Rows Removed by Filter: 1
                                                  ->  Hash  (cost=1.09..1.09 rows=2 width=4) (actual time=0.008..0.008 rows=2 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.004..0.005 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                              Rows Removed by Filter: 5
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.004..0.005 rows=1 loops=273)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: (info > '6.5'::text)
                                                  Rows Removed by Filter: 2
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.006..0.012 rows=9 loops=197)
                                            Index Cond: (movie_id = mk.movie_id)
                                            Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                            Rows Removed by Filter: 11
                                ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.012..0.012 rows=4 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                      ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.007..0.008 rows=4 loops=1)
                          ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1690)
                                Index Cond: (id = mi_idx.info_type_id)
                                Filter: ((info)::text = 'rating'::text)
                                Rows Removed by Filter: 0
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=1422)
                          Index Cond: (id = mc.company_id)
                          Filter: ((country_code)::text <> '[us]'::text)
                          Rows Removed by Filter: 0
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.54 rows=1 width=8) (actual time=0.074..0.074 rows=0 loops=1387)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                    Rows Removed by Filter: 336
        ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=149)
              Index Cond: (id = mi.info_type_id)
              Filter: ((info)::text = 'countries'::text)
              Rows Removed by Filter: 0
Planning time: 186.894 ms
Execution time: 242.033 ms
