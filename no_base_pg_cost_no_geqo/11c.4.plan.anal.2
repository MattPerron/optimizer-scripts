Aggregate  (cost=15992.35..15992.36 rows=1 width=96) (actual time=139.365..139.365 rows=1 loops=1)
  ->  Nested Loop  (cost=6656.57..15992.32 rows=5 width=60) (actual time=73.464..135.994 rows=6946 loops=1)
        ->  Nested Loop  (cost=6656.44..15991.54 rows=5 width=64) (actual time=73.458..129.874 rows=6946 loops=1)
              Join Filter: (ml.movie_id = t.id)
              ->  Hash Join  (cost=6656.01..15988.52 rows=6 width=59) (actual time=73.449..117.680 rows=6946 loops=1)
                    Hash Cond: (mc.company_type_id = ct.id)
                    ->  Nested Loop  (cost=6654.92..15971.84 rows=1499 width=63) (actual time=73.437..115.671 rows=6946 loops=1)
                          ->  Nested Loop  (cost=6654.50..8892.61 rows=15510 width=48) (actual time=72.609..88.675 rows=15510 loops=1)
                                Join Filter: (ml.movie_id = mc.movie_id)
                                ->  Hash Join  (cost=6654.07..8048.82 rows=1460 width=12) (actual time=72.594..79.341 rows=1460 loops=1)
                                      Hash Cond: (ml.movie_id = mk.movie_id)
                                      ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=8) (actual time=0.003..2.588 rows=29997 loops=1)
                                      ->  Hash  (cost=6061.53..6061.53 rows=47403 width=4) (actual time=72.488..72.488 rows=47403 loops=1)
                                            Buckets: 65536  Batches: 1  Memory Usage: 2179kB
                                            ->  Nested Loop  (cost=6.74..6061.53 rows=47403 width=4) (actual time=2.115..63.416 rows=47403 loops=1)
                                                  ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.612..14.086 rows=3 loops=1)
                                                        Filter: (keyword = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                                        Rows Removed by Filter: 134167
                                                  ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.74..1086.25 rows=298 width=8) (actual time=2.241..13.897 rows=15801 loops=3)
                                                        Recheck Cond: (keyword_id = k.id)
                                                        Heap Blocks: exact=23953
                                                        ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=298 width=0) (actual time=1.180..1.180 rows=15801 loops=3)
                                                              Index Cond: (keyword_id = k.id)
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=36) (actual time=0.002..0.004 rows=11 loops=1460)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: (note IS NOT NULL)
                                      Rows Removed by Filter: 2
                          ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.001..0.001 rows=0 loops=15510)
                                Index Cond: (id = mc.company_id)
                                Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '20th Century Fox%'::text) OR (name ~~ 'Twentieth Century Fox%'::text)))
                                Rows Removed by Filter: 1
                    ->  Hash  (cost=1.05..1.05 rows=3 width=4) (actual time=0.007..0.007 rows=3 loops=1)
                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                          ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=3 width=4) (actual time=0.004..0.005 rows=3 loops=1)
                                Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                                Rows Removed by Filter: 1
              ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=6946)
                    Index Cond: (id = mk.movie_id)
                    Filter: (production_year > 1950)
        ->  Index Only Scan using link_type_pkey on link_type lt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6946)
              Index Cond: (id = ml.link_type_id)
              Heap Fetches: 0
Planning time: 3.402 ms
Execution time: 139.451 ms
