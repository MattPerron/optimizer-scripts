Aggregate  (cost=5466.58..5466.59 rows=1 width=192) (actual time=8.553..8.554 rows=1 loops=1)
  ->  Nested Loop  (cost=41.31..5466.55 rows=2 width=84) (actual time=0.854..8.534 rows=8 loops=1)
        ->  Nested Loop  (cost=41.17..5466.21 rows=2 width=88) (actual time=0.800..8.488 rows=24 loops=1)
              ->  Nested Loop  (cost=40.75..5465.32 rows=2 width=73) (actual time=0.790..8.325 rows=84 loops=1)
                    ->  Nested Loop  (cost=40.32..5464.71 rows=1 width=81) (actual time=0.782..8.223 rows=30 loops=1)
                          ->  Nested Loop  (cost=40.18..5464.09 rows=4 width=85) (actual time=0.776..8.184 rows=30 loops=1)
                                Join Filter: (ml.movie_id = t1.id)
                                ->  Nested Loop  (cost=39.75..5461.73 rows=4 width=60) (actual time=0.768..8.116 rows=30 loops=1)
                                      ->  Nested Loop  (cost=39.33..5457.58 rows=2 width=46) (actual time=0.760..8.075 rows=11 loops=1)
                                            ->  Nested Loop  (cost=38.91..5452.70 rows=11 width=31) (actual time=0.750..8.034 rows=11 loops=1)
                                                  Join Filter: (t2.id = mc2.movie_id)
                                                  ->  Nested Loop  (cost=38.48..5448.27 rows=6 width=39) (actual time=0.740..7.997 rows=6 loops=1)
                                                        ->  Nested Loop  (cost=38.34..5447.35 rows=6 width=43) (actual time=0.733..7.983 rows=6 loops=1)
                                                              Join Filter: (ml.linked_movie_id = t2.id)
                                                              ->  Nested Loop  (cost=37.91..5422.21 rows=34 width=18) (actual time=0.721..7.856 rows=34 loops=1)
                                                                    Join Filter: (mi_idx2.info_type_id = it2.id)
                                                                    Rows Removed by Join Filter: 2910
                                                                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                                    ->  Nested Loop  (cost=37.91..5382.99 rows=2944 width=22) (actual time=0.089..7.593 rows=2944 loops=1)
                                                                          ->  Nested Loop  (cost=37.49..612.73 rows=2315 width=8) (actual time=0.074..1.038 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.003..0.009 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=37.49..185.08 rows=1875 width=12) (actual time=0.061..0.330 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..37.02 rows=1875 width=0) (actual time=0.048..0.048 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.0'::text)
                                                                                Rows Removed by Filter: 1
                                                              ->  Index Scan using title_pkey on title t2  (cost=0.43..0.73 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=34)
                                                                    Index Cond: (id = mi_idx2.movie_id)
                                                                    Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=6)
                                                              Index Cond: (id = t2.kind_id)
                                                              Filter: ((kind)::text = 'tv series'::text)
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.004..0.005 rows=2 loops=6)
                                                        Index Cond: (movie_id = mi_idx2.movie_id)
                                            ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=11)
                                                  Index Cond: (id = mc2.company_id)
                                      ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..2.04 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=11)
                                            Index Cond: (movie_id = ml.movie_id)
                                ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=30)
                                      Index Cond: (id = mi_idx1.movie_id)
                          ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=30)
                                Index Cond: (id = t1.kind_id)
                                Filter: ((kind)::text = 'tv series'::text)
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=3 loops=30)
                          Index Cond: (movie_id = t1.id)
              ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=84)
                    Index Cond: (id = mc1.company_id)
                    Filter: ((country_code)::text = '[us]'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=24)
              Index Cond: (id = mi_idx1.info_type_id)
              Filter: ((info)::text = 'rating'::text)
              Rows Removed by Filter: 1
Planning time: 252.694 ms
Execution time: 8.753 ms
