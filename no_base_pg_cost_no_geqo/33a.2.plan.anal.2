Aggregate  (cost=3081.56..3081.57 rows=1 width=192) (actual time=27.649..27.649 rows=1 loops=1)
  ->  Nested Loop  (cost=751.61..3081.54 rows=1 width=84) (actual time=5.273..27.628 rows=8 loops=1)
        ->  Nested Loop  (cost=751.47..3081.37 rows=1 width=88) (actual time=5.264..27.611 rows=8 loops=1)
              ->  Nested Loop  (cost=751.05..3080.93 rows=1 width=73) (actual time=5.257..27.588 rows=8 loops=1)
                    ->  Nested Loop  (cost=750.63..3080.48 rows=1 width=58) (actual time=5.235..27.500 rows=28 loops=1)
                          ->  Nested Loop  (cost=750.20..3079.87 rows=1 width=66) (actual time=5.231..27.455 rows=10 loops=1)
                                Join Filter: (ml.linked_movie_id = t2.id)
                                ->  Nested Loop  (cost=749.77..3079.34 rows=1 width=57) (actual time=5.226..27.327 rows=54 loops=1)
                                      Join Filter: (ml.linked_movie_id = mc2.movie_id)
                                      ->  Nested Loop  (cost=749.34..3078.60 rows=1 width=49) (actual time=5.219..27.190 rows=28 loops=1)
                                            Join Filter: (it2.id = mi_idx2.info_type_id)
                                            Rows Removed by Join Filter: 1581
                                            ->  Hash Join  (cost=748.92..3039.40 rows=19 width=43) (actual time=1.610..23.524 rows=1220 loops=1)
                                                  Hash Cond: (t1.kind_id = kt1.id)
                                                  ->  Nested Loop  (cost=747.82..3036.80 rows=132 width=47) (actual time=1.585..23.104 rows=2064 loops=1)
                                                        Join Filter: (ml.movie_id = t1.id)
                                                        ->  Hash Join  (cost=747.39..2958.87 rows=132 width=22) (actual time=1.576..19.089 rows=2064 loops=1)
                                                              Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                              ->  Merge Join  (cost=742.54..2927.54 rows=6900 width=22) (actual time=1.542..18.151 rows=6192 loops=1)
                                                                    Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43804.18 rows=1380035 width=14) (actual time=0.013..9.326 rows=63901 loops=1)
                                                                    ->  Sort  (cost=742.10..747.89 rows=2315 width=8) (actual time=1.499..1.983 rows=6443 loops=1)
                                                                          Sort Key: ml.movie_id
                                                                          Sort Method: quicksort  Memory: 205kB
                                                                          ->  Nested Loop  (cost=37.49..612.73 rows=2315 width=8) (actual time=0.069..1.003 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.005..0.008 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=37.49..185.08 rows=1875 width=12) (actual time=0.058..0.305 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..37.02 rows=1875 width=0) (actual time=0.045..0.045 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                              ->  Hash  (cost=4.83..4.83 rows=1 width=8) (actual time=0.022..0.022 rows=1 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Nested Loop  (cost=0.00..4.83 rows=1 width=8) (actual time=0.017..0.019 rows=1 loops=1)
                                                                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                                          ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                        ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=2064)
                                                              Index Cond: (id = mi_idx1.movie_id)
                                                  ->  Hash  (cost=1.09..1.09 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'tv series'::text)
                                                              Rows Removed by Filter: 6
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.002..0.003 rows=1 loops=1220)
                                                  Index Cond: (movie_id = ml.linked_movie_id)
                                                  Filter: (info < '3.0'::text)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.003..0.004 rows=2 loops=28)
                                            Index Cond: (movie_id = mi_idx2.movie_id)
                                ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=54)
                                      Index Cond: (id = mc2.movie_id)
                                      Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                      Rows Removed by Filter: 1
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=3 loops=10)
                                Index Cond: (movie_id = t1.id)
                    ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=28)
                          Index Cond: (id = mc1.company_id)
                          Filter: ((country_code)::text = '[us]'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=8)
                    Index Cond: (id = mc2.company_id)
        ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=8)
              Index Cond: (id = t2.kind_id)
              Filter: ((kind)::text = 'tv series'::text)
Planning time: 249.785 ms
Execution time: 27.864 ms
