Aggregate  (cost=7489.37..7489.38 rows=1 width=96) (actual time=1167.022..1167.022 rows=1 loops=1)
  ->  Nested Loop  (cost=9.37..7489.36 rows=1 width=41) (actual time=5.409..1158.699 rows=8373 loops=1)
        Join Filter: (it1.id = mi.info_type_id)
        Rows Removed by Join Filter: 1116
        ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.025..0.036 rows=1 loops=1)
              Filter: ((info)::text = 'countries'::text)
              Rows Removed by Filter: 112
        ->  Nested Loop  (cost=9.37..7486.93 rows=1 width=45) (actual time=5.381..1156.330 rows=9489 loops=1)
              Join Filter: (t.id = mi.movie_id)
              ->  Nested Loop  (cost=8.93..7485.06 rows=1 width=61) (actual time=5.342..308.738 rows=8156 loops=1)
                    Join Filter: (ct.id = mc.company_type_id)
                    ->  Nested Loop  (cost=8.93..7483.97 rows=1 width=65) (actual time=5.333..296.196 rows=8156 loops=1)
                          ->  Nested Loop  (cost=8.51..7483.43 rows=1 width=50) (actual time=5.317..258.128 rows=8571 loops=1)
                                Join Filter: (t.id = mc.movie_id)
                                ->  Nested Loop  (cost=8.08..7482.85 rows=1 width=38) (actual time=5.295..237.467 rows=851 loops=1)
                                      Join Filter: (it2.id = mi_idx.info_type_id)
                                      Rows Removed by Join Filter: 1756
                                      ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.022..0.025 rows=1 loops=1)
                                            Filter: ((info)::text = 'rating'::text)
                                            Rows Removed by Filter: 112
                                      ->  Nested Loop  (cost=8.08..7480.42 rows=1 width=42) (actual time=5.267..236.900 rows=2607 loops=1)
                                            Join Filter: (t.id = mi_idx.movie_id)
                                            ->  Nested Loop  (cost=7.65..7479.89 rows=1 width=29) (actual time=5.244..229.194 rows=922 loops=1)
                                                  Join Filter: (kt.id = t.kind_id)
                                                  Rows Removed by Join Filter: 440
                                                  ->  Nested Loop  (cost=7.65..7478.66 rows=5 width=33) (actual time=5.222..228.286 rows=1041 loops=1)
                                                        ->  Nested Loop  (cost=7.22..7472.78 rows=12 width=8) (actual time=4.991..196.661 rows=6704 loops=1)
                                                              Join Filter: (cct1.id = cc.subject_id)
                                                              Rows Removed by Join Filter: 3832
                                                              ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'cast'::text)
                                                                    Rows Removed by Filter: 3
                                                              ->  Nested Loop  (cost=7.22..7471.15 rows=46 width=12) (actual time=4.984..194.693 rows=10536 loops=1)
                                                                    Join Filter: (cct2.id = cc.status_id)
                                                                    Rows Removed by Join Filter: 9488
                                                                    ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.005 rows=1 loops=1)
                                                                          Filter: ((kind)::text = 'complete'::text)
                                                                          Rows Removed by Filter: 3
                                                                    ->  Nested Loop  (cost=7.22..7467.82 rows=183 width=16) (actual time=4.970..191.195 rows=20024 loops=1)
                                                                          ->  Nested Loop  (cost=6.80..7403.56 rows=135 width=4) (actual time=4.606..96.207 rows=37091 loops=1)
                                                                                ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.595..29.804 rows=3 loops=1)
                                                                                      Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                      Rows Removed by Filter: 134167
                                                                                ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.80..1107.44 rows=306 width=8) (actual time=3.318..19.807 rows=12364 loops=3)
                                                                                      Recheck Cond: (keyword_id = k.id)
                                                                                      Heap Blocks: exact=26312
                                                                                      ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.73 rows=306 width=0) (actual time=1.688..1.688 rows=12364 loops=3)
                                                                                            Index Cond: (keyword_id = k.id)
                                                                          ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=37091)
                                                                                Index Cond: (movie_id = mk.movie_id)
                                                        ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=6704)
                                                              Index Cond: (id = mk.movie_id)
                                                              Filter: (production_year > 2005)
                                                              Rows Removed by Filter: 1
                                                  ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=1041)
                                                        ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.012..0.016 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                              Rows Removed by Filter: 5
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.006..0.007 rows=3 loops=922)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: (info < '8.5'::text)
                                                  Rows Removed by Filter: 0
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.009..0.021 rows=10 loops=851)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                      Rows Removed by Filter: 12
                          ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=8571)
                                Index Cond: (id = mc.company_id)
                                Filter: ((country_code)::text <> '[us]'::text)
                                Rows Removed by Filter: 0
                    ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.001..0.001 rows=1 loops=8156)
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.84 rows=2 width=8) (actual time=0.086..0.103 rows=1 loops=8156)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                    Rows Removed by Filter: 206
Planning time: 103.405 ms
Execution time: 1167.304 ms
