Aggregate  (cost=4680.43..4680.44 rows=1 width=192) (actual time=174.213..174.213 rows=1 loops=1)
  ->  Nested Loop  (cost=4.29..4680.41 rows=1 width=82) (actual time=22.959..173.871 rows=114 loops=1)
        Join Filter: (kt1.id = t1.kind_id)
        ->  Nested Loop  (cost=4.29..4679.23 rows=3 width=86) (actual time=22.946..173.748 rows=114 loops=1)
              Join Filter: (ml.movie_id = t1.id)
              ->  Nested Loop  (cost=3.86..4677.64 rows=3 width=77) (actual time=22.935..173.018 rows=114 loops=1)
                    ->  Nested Loop  (cost=3.44..4675.41 rows=5 width=62) (actual time=22.927..172.181 rows=131 loops=1)
                          Join Filter: (ml.movie_id = mc1.movie_id)
                          ->  Nested Loop  (cost=3.01..4674.76 rows=1 width=54) (actual time=22.917..171.697 rows=44 loops=1)
                                Join Filter: ((t2.id = mi_idx2.movie_id) AND (it2.id = mi_idx2.info_type_id))
                                Rows Removed by Join Filter: 4270
                                ->  Nested Loop  (cost=2.58..4665.65 rows=17 width=65) (actual time=0.890..148.555 rows=3063 loops=1)
                                      ->  Nested Loop  (cost=2.16..4658.12 rows=17 width=50) (actual time=0.882..132.539 rows=3063 loops=1)
                                            ->  Nested Loop  (cost=1.73..4647.45 rows=16 width=42) (actual time=0.873..124.616 rows=737 loops=1)
                                                  Join Filter: (kt2.id = t2.kind_id)
                                                  Rows Removed by Join Filter: 731
                                                  ->  Nested Loop  (cost=1.73..4644.76 rows=56 width=46) (actual time=0.227..123.743 rows=851 loops=1)
                                                        ->  Nested Loop  (cost=1.30..4036.13 rows=136 width=21) (actual time=0.203..109.178 rows=2064 loops=1)
                                                              Join Filter: (lt.id = ml.link_type_id)
                                                              Rows Removed by Join Filter: 38685
                                                              ->  Merge Join  (cost=1.30..3999.06 rows=819 width=25) (actual time=0.075..93.782 rows=20890 loops=1)
                                                                    Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                    ->  Nested Loop  (cost=0.43..64666.78 rows=12213 width=13) (actual time=0.061..71.872 rows=21301 loops=1)
                                                                          ->  Nested Loop  (cost=0.43..64511.70 rows=12213 width=9) (actual time=0.048..58.879 rows=21301 loops=1)
                                                                                Join Filter: (mi_idx1.info_type_id = it1.id)
                                                                                Rows Removed by Join Filter: 42602
                                                                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43808.76 rows=1380035 width=13) (actual time=0.017..21.750 rows=63903 loops=1)
                                                                                ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=63903)
                                                                                      ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.022..0.023 rows=1 loops=1)
                                                                                            Filter: ((info)::text = 'rating'::text)
                                                                                            Rows Removed by Filter: 112
                                                                          ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=21301)
                                                                                ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                                                                                      Filter: ((info)::text = 'rating'::text)
                                                                                      Rows Removed by Filter: 112
                                                                    ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=12) (actual time=0.010..9.770 rows=29997 loops=1)
                                                              ->  Materialize  (cost=0.00..1.26 rows=3 width=4) (actual time=0.000..0.000 rows=2 loops=20890)
                                                                    ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.005..0.009 rows=2 loops=1)
                                                                          Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                          Rows Removed by Filter: 16
                                                        ->  Index Scan using title_pkey on title t2  (cost=0.43..4.48 rows=1 width=25) (actual time=0.006..0.006 rows=0 loops=2064)
                                                              Index Cond: (id = ml.linked_movie_id)
                                                              Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                              Rows Removed by Filter: 1
                                                  ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=851)
                                                        ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.004..0.005 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                              Rows Removed by Filter: 5
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.006..0.008 rows=4 loops=737)
                                                  Index Cond: (movie_id = t2.id)
                                      ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=3063)
                                            Index Cond: (id = mc2.company_id)
                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.51 rows=2 width=13) (actual time=0.005..0.007 rows=1 loops=3063)
                                      Index Cond: (movie_id = mc2.movie_id)
                                      Filter: (info < '3.5'::text)
                                      Rows Removed by Filter: 2
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.005..0.008 rows=3 loops=44)
                                Index Cond: (movie_id = mi_idx1.movie_id)
                    ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.005..0.005 rows=1 loops=131)
                          Index Cond: (id = mc1.company_id)
                          Filter: ((country_code)::text <> '[us]'::text)
                          Rows Removed by Filter: 0
              ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.005..0.005 rows=1 loops=114)
                    Index Cond: (id = mc1.movie_id)
        ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=114)
              ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=2 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                    Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                    Rows Removed by Filter: 1
Planning time: 99.499 ms
Execution time: 174.405 ms
