Aggregate  (cost=11372.74..11372.75 rows=1 width=128) (actual time=641.167..641.167 rows=1 loops=1)
  ->  Nested Loop  (cost=9.51..11372.73 rows=1 width=80) (actual time=302.048..641.080 rows=28 loops=1)
        Join Filter: (mi.info_type_id = it1.id)
        ->  Nested Loop  (cost=9.51..11370.30 rows=1 width=84) (actual time=302.039..640.948 rows=28 loops=1)
              Join Filter: (cct1.id = cc.subject_id)
              ->  Nested Loop  (cost=9.51..11369.23 rows=1 width=88) (actual time=302.027..640.859 rows=28 loops=1)
                    Join Filter: (cct2.id = cc.status_id)
                    Rows Removed by Join Filter: 80
                    ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                          Filter: ((kind)::text = 'complete+verified'::text)
                          Rows Removed by Filter: 3
                    ->  Nested Loop  (cost=9.51..11368.17 rows=1 width=92) (actual time=87.212..640.824 rows=108 loops=1)
                          Join Filter: (t.id = cc.movie_id)
                          ->  Nested Loop  (cost=9.09..11367.33 rows=1 width=104) (actual time=87.200..640.381 rows=108 loops=1)
                                ->  Nested Loop  (cost=8.66..11366.23 rows=1 width=93) (actual time=87.175..639.741 rows=108 loops=1)
                                      Join Filter: (it2.id = mi_idx.info_type_id)
                                      Rows Removed by Join Filter: 216
                                      ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.015 rows=1 loops=1)
                                            Filter: ((info)::text = 'votes'::text)
                                            Rows Removed by Filter: 112
                                      ->  Nested Loop  (cost=8.66..11363.81 rows=1 width=97) (actual time=87.160..639.662 rows=324 loops=1)
                                            Join Filter: (t.id = mi_idx.movie_id)
                                            ->  Nested Loop  (cost=8.23..11362.99 rows=1 width=84) (actual time=87.147..639.046 rows=108 loops=1)
                                                  Join Filter: (t.id = ci.movie_id)
                                                  ->  Nested Loop  (cost=7.67..11335.42 rows=1 width=76) (actual time=86.829..632.580 rows=65 loops=1)
                                                        Join Filter: (t.id = mi.movie_id)
                                                        ->  Nested Loop  (cost=7.23..11317.80 rows=1 width=25) (actual time=55.959..627.298 rows=49 loops=1)
                                                              ->  Nested Loop  (cost=6.80..11115.55 rows=236 width=4) (actual time=4.491..253.148 rows=76714 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..3464.69 rows=7 width=4) (actual time=1.169..41.635 rows=7 loops=1)
                                                                          Filter: (keyword = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                          Rows Removed by Filter: 134163
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.80..1089.92 rows=306 width=8) (actual time=2.956..28.087 rows=10959 loops=7)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=53234
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.73 rows=306 width=0) (actual time=1.579..1.579 rows=10959 loops=7)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..0.86 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=76714)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: ((production_year > 2000) AND ((title ~~ '%Freddy%'::text) OR (title ~~ '%Jason%'::text) OR (title ~~ 'Saw%'::text)))
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..17.61 rows=1 width=51) (actual time=0.106..0.106 rows=1 loops=49)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                              Filter: (info = ANY ('{Horror,Thriller}'::text[]))
                                                              Rows Removed by Filter: 230
                                                  ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..27.56 rows=1 width=8) (actual time=0.066..0.098 rows=2 loops=65)
                                                        Index Cond: (movie_id = mk.movie_id)
                                                        Filter: (note = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                                        Rows Removed by Filter: 85
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=13) (actual time=0.003..0.004 rows=3 loops=108)
                                                  Index Cond: (movie_id = mk.movie_id)
                                ->  Index Scan using name_pkey on name n  (cost=0.43..1.10 rows=1 width=19) (actual time=0.005..0.005 rows=1 loops=108)
                                      Index Cond: (id = ci.person_id)
                                      Filter: ((gender)::text = 'm'::text)
                          ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.003..0.003 rows=1 loops=108)
                                Index Cond: (movie_id = mk.movie_id)
              ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.002..0.002 rows=1 loops=28)
                    Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
        ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=28)
              Filter: ((info)::text = 'genres'::text)
              Rows Removed by Filter: 2
Planning time: 70.486 ms
Execution time: 641.297 ms
