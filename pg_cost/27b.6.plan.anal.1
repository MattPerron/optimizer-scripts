Aggregate  (cost=2128.35..2128.36 rows=1 width=96) (actual time=10.833..10.833 rows=1 loops=1)
  ->  Nested Loop  (cost=961.86..2128.34 rows=1 width=48) (actual time=7.696..10.752 rows=247 loops=1)
        Join Filter: (ml.movie_id = mi.movie_id)
        ->  Nested Loop  (cost=961.42..2126.77 rows=1 width=68) (actual time=7.678..10.077 rows=95 loops=1)
              ->  Nested Loop  (cost=961.29..2126.60 rows=1 width=72) (actual time=7.674..9.983 rows=95 loops=1)
                    ->  Nested Loop  (cost=960.87..2125.23 rows=3 width=57) (actual time=7.666..9.609 rows=190 loops=1)
                          Join Filter: (ml.movie_id = mc.movie_id)
                          ->  Nested Loop  (cost=960.44..2124.65 rows=1 width=45) (actual time=7.657..9.458 rows=38 loops=1)
                                ->  Nested Loop  (cost=960.31..2124.48 rows=1 width=49) (actual time=7.653..9.399 rows=57 loops=1)
                                      ->  Hash Join  (cost=959.89..1931.67 rows=437 width=53) (actual time=7.633..8.696 rows=437 loops=1)
                                            Hash Cond: (cc.subject_id = cct1.id)
                                            ->  Nested Loop  (cost=958.82..1926.05 rows=437 width=57) (actual time=7.617..8.594 rows=437 loops=1)
                                                  Join Filter: (ml.movie_id = mk.movie_id)
                                                  ->  Nested Loop  (cost=958.39..1762.23 rows=57 width=49) (actual time=7.610..8.367 rows=57 loops=1)
                                                        Join Filter: (ml.movie_id = t.id)
                                                        ->  Merge Join  (cost=957.96..1316.65 rows=257 width=28) (actual time=5.634..7.842 rows=257 loops=1)
                                                              Merge Cond: (cc.movie_id = ml.movie_id)
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6340.80 rows=135086 width=12) (actual time=0.006..1.682 rows=5993 loops=1)
                                                              ->  Sort  (cost=957.52..963.31 rows=2315 width=16) (actual time=5.443..5.555 rows=2341 loops=1)
                                                                    Sort Key: ml.movie_id
                                                                    Sort Method: quicksort  Memory: 205kB
                                                                    ->  Hash Join  (cost=1.25..828.15 rows=2315 width=16) (actual time=0.021..5.013 rows=2315 loops=1)
                                                                          Hash Cond: (ml.link_type_id = lt.id)
                                                                          ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=8) (actual time=0.005..2.196 rows=29997 loops=1)
                                                                          ->  Hash  (cost=1.23..1.23 rows=2 width=16) (actual time=0.007..0.007 rows=2 loops=1)
                                                                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=16) (actual time=0.003..0.006 rows=2 loops=1)
                                                                                      Filter: ((link)::text ~~ '%follow%'::text)
                                                                                      Rows Removed by Filter: 16
                                                        ->  Index Scan using title_pkey on title t  (cost=0.43..1.72 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=257)
                                                              Index Cond: (id = cc.movie_id)
                                                              Filter: (production_year = 1998)
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..2.31 rows=45 width=8) (actual time=0.002..0.003 rows=8 loops=57)
                                                        Index Cond: (movie_id = cc.movie_id)
                                            ->  Hash  (cost=1.05..1.05 rows=2 width=4) (actual time=0.011..0.011 rows=2 loops=1)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                  ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.008..0.009 rows=2 loops=1)
                                                        Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                                        Rows Removed by Filter: 2
                                      ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=437)
                                            Index Cond: (id = mk.keyword_id)
                                            Filter: (keyword = 'sequel'::text)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=57)
                                      Index Cond: (id = cc.status_id)
                                      Filter: ((kind)::text = 'complete'::text)
                                      Rows Removed by Filter: 0
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.002..0.003 rows=5 loops=38)
                                Index Cond: (movie_id = mk.movie_id)
                                Filter: (note IS NULL)
                                Rows Removed by Filter: 1
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=190)
                          Index Cond: (id = mc.company_id)
                          Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                          Rows Removed by Filter: 0
              ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=95)
                    Index Cond: (id = mc.company_type_id)
                    Filter: ((kind)::text = 'production companies'::text)
        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=4) (actual time=0.005..0.007 rows=3 loops=95)
              Index Cond: (movie_id = mk.movie_id)
              Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
              Rows Removed by Filter: 10
Planning time: 45.343 ms
Execution time: 10.934 ms
