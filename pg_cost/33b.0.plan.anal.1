Aggregate  (cost=6339.11..6339.12 rows=1 width=192) (actual time=39.595..39.595 rows=1 loops=1)
  ->  Nested Loop  (cost=923.53..6339.09 rows=1 width=82) (actual time=9.241..39.584 rows=4 loops=1)
        ->  Nested Loop  (cost=923.40..6338.92 rows=1 width=86) (actual time=9.237..39.577 rows=4 loops=1)
              ->  Nested Loop  (cost=922.98..6338.47 rows=1 width=71) (actual time=9.234..39.545 rows=14 loops=1)
                    ->  Nested Loop  (cost=922.56..6338.03 rows=1 width=56) (actual time=9.224..39.497 rows=14 loops=1)
                          Join Filter: (t2.id = mc2.movie_id)
                          ->  Nested Loop  (cost=922.13..6337.29 rows=1 width=64) (actual time=9.218..39.471 rows=4 loops=1)
                                ->  Nested Loop  (cost=921.70..6336.68 rows=1 width=72) (actual time=9.211..39.456 rows=2 loops=1)
                                      ->  Nested Loop  (cost=921.56..6336.50 rows=1 width=76) (actual time=7.834..39.428 rows=16 loops=1)
                                            ->  Nested Loop  (cost=921.42..6336.02 rows=3 width=80) (actual time=4.906..39.377 rows=41 loops=1)
                                                  Join Filter: (ml.linked_movie_id = t2.id)
                                                  ->  Nested Loop  (cost=920.99..6290.45 rows=63 width=55) (actual time=4.880..33.835 rows=2786 loops=1)
                                                        ->  Hash Join  (cost=920.57..6199.78 rows=44 width=42) (actual time=4.870..28.071 rows=2064 loops=1)
                                                              Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                              ->  Nested Loop  (cost=918.14..6134.76 rows=4989 width=46) (actual time=4.836..27.267 rows=6192 loops=1)
                                                                    Join Filter: (ml.movie_id = t1.id)
                                                                    ->  Merge Join  (cost=917.71..3218.99 rows=4989 width=21) (actual time=4.827..18.361 rows=6192 loops=1)
                                                                          Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43802.43 rows=1380035 width=13) (actual time=0.007..7.938 rows=63901 loops=1)
                                                                          ->  Sort  (cost=917.28..921.45 rows=1666 width=8) (actual time=4.798..5.197 rows=6443 loops=1)
                                                                                Sort Key: ml.movie_id
                                                                                Sort Method: quicksort  Memory: 205kB
                                                                                ->  Hash Join  (cost=1.24..828.13 rows=1666 width=8) (actual time=0.022..4.505 rows=2315 loops=1)
                                                                                      Hash Cond: (ml.link_type_id = lt.id)
                                                                                      ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=12) (actual time=0.005..2.015 rows=29997 loops=1)
                                                                                      ->  Hash  (cost=1.23..1.23 rows=1 width=4) (actual time=0.007..0.007 rows=2 loops=1)
                                                                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                            ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.004..0.006 rows=2 loops=1)
                                                                                                  Filter: ((link)::text ~~ '%follow%'::text)
                                                                                                  Rows Removed by Filter: 16
                                                                    ->  Index Scan using title_pkey on title t1  (cost=0.43..0.57 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=6192)
                                                                          Index Cond: (id = mi_idx1.movie_id)
                                                              ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=13) (actual time=0.002..0.002 rows=1 loops=2064)
                                                              Index Cond: (movie_id = ml.linked_movie_id)
                                                              Filter: (info < '3.0'::text)
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using title_pkey on title t2  (cost=0.43..0.71 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2786)
                                                        Index Cond: (id = mi_idx2.movie_id)
                                                        Filter: (production_year = 2007)
                                                        Rows Removed by Filter: 1
                                            ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=41)
                                                  Index Cond: (id = t2.kind_id)
                                                  Filter: ((kind)::text = 'tv series'::text)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=16)
                                            Index Cond: (id = mi_idx2.info_type_id)
                                            Filter: ((info)::text = 'rating'::text)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.005..0.006 rows=2 loops=2)
                                      Index Cond: (movie_id = t1.id)
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.003..0.005 rows=4 loops=4)
                                Index Cond: (movie_id = mi_idx2.movie_id)
                    ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=14)
                          Index Cond: (id = mc2.company_id)
              ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=14)
                    Index Cond: (id = mc1.company_id)
                    Filter: ((country_code)::text = '[nl]'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=4)
              Index Cond: (id = t1.kind_id)
              Filter: ((kind)::text = 'tv series'::text)
Planning time: 62.892 ms
Execution time: 39.720 ms
