Aggregate  (cost=2219.31..2219.32 rows=1 width=96) (actual time=17.464..17.465 rows=1 loops=1)
  ->  Nested Loop  (cost=9.24..2219.31 rows=1 width=48) (actual time=10.646..17.382 rows=247 loops=1)
        Join Filter: (ml.movie_id = mi.movie_id)
        ->  Nested Loop  (cost=8.81..2217.73 rows=1 width=68) (actual time=10.629..16.769 rows=95 loops=1)
              ->  Nested Loop  (cost=8.39..2217.28 rows=1 width=53) (actual time=10.620..16.413 rows=190 loops=1)
                    ->  Nested Loop  (cost=7.97..2177.55 rows=90 width=57) (actual time=10.591..14.151 rows=1558 loops=1)
                          Join Filter: (ml.movie_id = mk.movie_id)
                          ->  Nested Loop  (cost=7.53..2173.75 rows=2 width=49) (actual time=10.584..13.437 rows=190 loops=1)
                                Join Filter: (ml.movie_id = t.id)
                                ->  Hash Join  (cost=7.10..2114.60 rows=99 width=28) (actual time=0.691..12.363 rows=705 loops=1)
                                      Hash Cond: (mc.company_type_id = ct.id)
                                      ->  Nested Loop  (cost=6.04..2109.43 rows=395 width=32) (actual time=0.677..12.213 rows=794 loops=1)
                                            Join Filter: (ml.movie_id = mc.movie_id)
                                            ->  Hash Join  (cost=5.61..1930.78 rows=135 width=20) (actual time=0.664..11.463 rows=189 loops=1)
                                                  Hash Cond: (ml.link_type_id = lt.id)
                                                  ->  Hash Join  (cost=4.36..1914.83 rows=1212 width=12) (actual time=0.043..11.170 rows=3346 loops=1)
                                                        Hash Cond: (cc.status_id = cct2.id)
                                                        ->  Hash Join  (cost=3.30..1863.30 rows=4849 width=16) (actual time=0.036..10.490 rows=4849 loops=1)
                                                              Hash Cond: (cc.subject_id = cct1.id)
                                                              ->  Merge Join  (cost=2.22..1811.77 rows=4849 width=20) (actual time=0.028..9.656 rows=4849 loops=1)
                                                                    Merge Cond: (ml.movie_id = cc.movie_id)
                                                                    ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.006..4.099 rows=29997 loops=1)
                                                                    ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6340.80 rows=135086 width=12) (actual time=0.005..2.330 rows=9987 loops=1)
                                                              ->  Hash  (cost=1.05..1.05 rows=2 width=4) (actual time=0.004..0.004 rows=2 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.002..0.003 rows=2 loops=1)
                                                                          Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                                                          Rows Removed by Filter: 2
                                                        ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                              ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'complete'::text)
                                                                    Rows Removed by Filter: 3
                                                  ->  Hash  (cost=1.23..1.23 rows=2 width=16) (actual time=0.007..0.007 rows=2 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=16) (actual time=0.003..0.006 rows=2 loops=1)
                                                              Filter: ((link)::text ~~ '%follow%'::text)
                                                              Rows Removed by Filter: 16
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=3 width=12) (actual time=0.002..0.003 rows=4 loops=189)
                                                  Index Cond: (movie_id = cc.movie_id)
                                                  Filter: (note IS NULL)
                                                  Rows Removed by Filter: 3
                                      ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                            ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'production companies'::text)
                                                  Rows Removed by Filter: 3
                                ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.001..0.001 rows=0 loops=705)
                                      Index Cond: (id = mc.movie_id)
                                      Filter: (production_year = 1998)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=45 width=8) (actual time=0.001..0.002 rows=8 loops=190)
                                Index Cond: (movie_id = mc.movie_id)
                    ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=1558)
                          Index Cond: (id = mk.keyword_id)
                          Filter: (keyword = 'sequel'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=190)
                    Index Cond: (id = mc.company_id)
                    Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                    Rows Removed by Filter: 0
        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=4) (actual time=0.005..0.006 rows=3 loops=95)
              Index Cond: (movie_id = mk.movie_id)
              Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
              Rows Removed by Filter: 10
Planning time: 45.797 ms
Execution time: 17.562 ms
