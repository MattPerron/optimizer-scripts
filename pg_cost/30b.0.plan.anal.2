Aggregate  (cost=35709.12..35709.13 rows=1 width=128) (actual time=330.107..330.108 rows=1 loops=1)
  ->  Nested Loop  (cost=3917.16..35709.11 rows=1 width=79) (actual time=181.031..330.081 rows=28 loops=1)
        ->  Nested Loop  (cost=3916.74..35707.68 rows=2 width=83) (actual time=181.013..327.949 rows=1060 loops=1)
              Join Filter: (t.id = mk.movie_id)
              ->  Nested Loop  (cost=3916.31..35705.39 rows=1 width=99) (actual time=181.000..327.606 rows=7 loops=1)
                    ->  Nested Loop  (cost=3916.17..35705.21 rows=1 width=103) (actual time=180.993..327.587 rows=7 loops=1)
                          Join Filter: (t.id = mi.movie_id)
                          ->  Nested Loop  (cost=3915.73..35686.87 rows=1 width=53) (actual time=180.868..327.061 rows=5 loops=1)
                                ->  Nested Loop  (cost=3915.30..35685.85 rows=1 width=42) (actual time=180.858..327.026 rows=5 loops=1)
                                      Join Filter: (t.id = ci.movie_id)
                                      ->  Nested Loop  (cost=3914.74..35657.13 rows=1 width=34) (actual time=180.781..326.758 rows=2 loops=1)
                                            ->  Hash Join  (cost=3914.31..35252.55 rows=448 width=13) (actual time=25.490..275.809 rows=23558 loops=1)
                                                  Hash Cond: (mi_idx.info_type_id = it2.id)
                                                  ->  Hash Join  (cost=3911.88..34614.62 rows=50652 width=17) (actual time=25.464..268.387 rows=71011 loops=1)
                                                        Hash Cond: (cc.subject_id = cct1.id)
                                                        ->  Hash Join  (cost=3910.81..33559.36 rows=101303 width=21) (actual time=25.455..257.142 rows=71011 loops=1)
                                                              Hash Cond: (mi_idx.movie_id = cc.movie_id)
                                                              ->  Seq Scan on movie_info_idx mi_idx  (cost=0.00..21735.35 rows=1380035 width=13) (actual time=0.005..93.517 rows=1380035 loops=1)
                                                              ->  Hash  (cost=3488.66..3488.66 rows=33772 width=8) (actual time=25.297..25.297 rows=24592 loops=1)
                                                                    Buckets: 65536  Batches: 1  Memory Usage: 1473kB
                                                                    ->  Hash Join  (cost=1.06..3488.66 rows=33772 width=8) (actual time=0.012..22.009 rows=24592 loops=1)
                                                                          Hash Cond: (cc.status_id = cct2.id)
                                                                          ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.006..9.031 rows=135086 loops=1)
                                                                          ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                                                      Filter: ((kind)::text = 'complete+verified'::text)
                                                                                      Rows Removed by Filter: 3
                                                        ->  Hash  (cost=1.05..1.05 rows=2 width=4) (actual time=0.005..0.005 rows=2 loops=1)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                              ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=1)
                                                                    Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                                                    Rows Removed by Filter: 2
                                                  ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                                                              Filter: ((info)::text = 'votes'::text)
                                                              Rows Removed by Filter: 112
                                            ->  Index Scan using title_pkey on title t  (cost=0.43..0.90 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=23558)
                                                  Index Cond: (id = mi_idx.movie_id)
                                                  Filter: ((production_year > 2000) AND ((title ~~ '%Freddy%'::text) OR (title ~~ '%Jason%'::text) OR (title ~~ 'Saw%'::text)))
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.71 rows=1 width=8) (actual time=0.060..0.131 rows=2 loops=2)
                                            Index Cond: (movie_id = mi_idx.movie_id)
                                            Filter: (note = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                            Rows Removed by Filter: 95
                                ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.006..0.006 rows=1 loops=5)
                                      Index Cond: (id = ci.person_id)
                                      Filter: ((gender)::text = 'm'::text)
                          ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.32 rows=1 width=50) (actual time=0.103..0.104 rows=1 loops=5)
                                Index Cond: (movie_id = mi_idx.movie_id)
                                Filter: (info = ANY ('{Horror,Thriller}'::text[]))
                                Rows Removed by Filter: 451
                    ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=7)
                          Index Cond: (id = mi.info_type_id)
                          Filter: ((info)::text = 'genres'::text)
              ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.73 rows=45 width=8) (actual time=0.005..0.026 rows=151 loops=7)
                    Index Cond: (movie_id = mi_idx.movie_id)
        ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.68 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=1060)
              Index Cond: (id = mk.keyword_id)
              Filter: (keyword = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
              Rows Removed by Filter: 1
Planning time: 45.408 ms
Execution time: 330.221 ms
