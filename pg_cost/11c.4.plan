Aggregate
  ->  Nested Loop
        ->  Nested Loop
              Join Filter: (ml.movie_id = t.id)
              ->  Hash Join
                    Hash Cond: (mk.keyword_id = k.id)
                    ->  Merge Join
                          Merge Cond: (mk.movie_id = ml.movie_id)
                          ->  Index Scan using movie_id_movie_keyword on movie_keyword mk
                          ->  Sort
                                Sort Key: mc.movie_id
                                ->  Hash Join
                                      Hash Cond: (mc.company_type_id = ct.id)
                                      ->  Hash Join
                                            Hash Cond: (mc.company_id = cn.id)
                                            ->  Merge Join
                                                  Merge Cond: (ml.movie_id = mc.movie_id)
                                                  ->  Index Scan using movie_id_movie_link on movie_link ml
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc
                                                        Filter: (note IS NOT NULL)
                                            ->  Hash
                                                  ->  Seq Scan on company_name cn
                                                        Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '20th Century Fox%'::text) OR (name ~~ 'Twentieth Century Fox%'::text)))
                                      ->  Hash
                                            ->  Seq Scan on company_type ct
                                                  Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                    ->  Hash
                          ->  Seq Scan on keyword k
                                Filter: (keyword = ANY ('{sequel,revenge,based-on-novel}'::text[]))
              ->  Index Scan using title_pkey on title t
                    Index Cond: (id = mk.movie_id)
                    Filter: (production_year > 1950)
        ->  Index Only Scan using link_type_pkey on link_type lt
              Index Cond: (id = ml.link_type_id)
