Aggregate  (cost=46007.63..46007.64 rows=1 width=64) (actual time=136.073..136.073 rows=1 loops=1)
  ->  Nested Loop  (cost=3.66..46007.63 rows=1 width=32) (actual time=2.583..136.059 rows=16 loops=1)
        ->  Nested Loop  (cost=3.52..46007.07 rows=1 width=36) (actual time=2.580..136.020 rows=16 loops=1)
              Join Filter: (n.id = an.person_id)
              ->  Nested Loop  (cost=3.09..46006.58 rows=1 width=48) (actual time=2.576..135.977 rows=8 loops=1)
                    Join Filter: (n.id = pi.person_id)
                    ->  Nested Loop  (cost=2.66..45696.25 rows=327 width=40) (actual time=0.077..130.813 rows=1076 loops=1)
                          ->  Nested Loop  (cost=2.23..30328.72 rows=33415 width=21) (actual time=0.045..46.672 rows=33415 loops=1)
                                ->  Nested Loop  (cost=1.67..22613.87 rows=435 width=25) (actual time=0.040..19.518 rows=435 loops=1)
                                      ->  Hash Join  (cost=1.24..828.13 rows=5186 width=4) (actual time=0.033..4.824 rows=5186 loops=1)
                                            Hash Cond: (ml.link_type_id = lt.id)
                                            ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=8) (actual time=0.007..1.983 rows=29997 loops=1)
                                            ->  Hash  (cost=1.23..1.23 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                  ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                        Filter: ((link)::text = 'features'::text)
                                                        Rows Removed by Filter: 17
                                      ->  Index Scan using title_pkey on title t  (cost=0.43..4.20 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=5186)
                                            Index Cond: (id = ml.linked_movie_id)
                                            Filter: ((production_year >= 1980) AND (production_year <= 1984))
                                            Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..17.38 rows=36 width=8) (actual time=0.005..0.054 rows=77 loops=435)
                                      Index Cond: (movie_id = t.id)
                          ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.002..0.002 rows=0 loops=33415)
                                Index Cond: (id = ci.person_id)
                                Filter: (((name_pcode_cf)::text ~~ 'D%'::text) AND ((gender)::text = 'm'::text))
                                Rows Removed by Filter: 1
                    ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..0.94 rows=1 width=8) (actual time=0.005..0.005 rows=0 loops=1076)
                          Index Cond: (person_id = ci.person_id)
                          Filter: (note = 'Volker Boehm'::text)
                          Rows Removed by Filter: 16
              ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.47 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=8)
                    Index Cond: (person_id = ci.person_id)
                    Filter: (name ~~ '%a%'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.35 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=16)
              Index Cond: (id = pi.info_type_id)
              Filter: ((info)::text = 'mini biography'::text)
Planning time: 3.438 ms
Execution time: 136.137 ms
