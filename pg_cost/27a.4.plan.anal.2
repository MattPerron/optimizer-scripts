Aggregate  (cost=2176.73..2176.74 rows=1 width=96) (actual time=26.160..26.160 rows=1 loops=1)
  ->  Nested Loop  (cost=963.72..2176.73 rows=1 width=48) (actual time=6.225..25.992 rows=477 loops=1)
        ->  Nested Loop  (cost=963.30..2156.85 rows=45 width=52) (actual time=6.214..17.405 rows=6483 loops=1)
              Join Filter: (ml.movie_id = mk.movie_id)
              ->  Nested Loop  (cost=962.87..2154.95 rows=1 width=68) (actual time=6.207..14.776 rows=705 loops=1)
                    Join Filter: (ml.movie_id = t.id)
                    ->  Nested Loop  (cost=962.44..2153.15 rows=3 width=47) (actual time=6.200..13.685 rows=705 loops=1)
                          Join Filter: (ml.movie_id = mi.movie_id)
                          ->  Hash Join  (cost=962.01..2138.95 rows=7 width=43) (actual time=5.842..11.071 rows=273 loops=1)
                                Hash Cond: (cc.subject_id = cct1.id)
                                ->  Hash Join  (cost=960.93..2137.73 rows=14 width=47) (actual time=5.823..10.992 rows=273 loops=1)
                                      Hash Cond: (mc.company_type_id = ct.id)
                                      ->  Hash Join  (cost=959.87..2136.11 rows=54 width=51) (actual time=5.816..10.922 rows=294 loops=1)
                                            Hash Cond: (cc.status_id = cct2.id)
                                            ->  Nested Loop  (cost=958.81..2132.82 rows=214 width=55) (actual time=5.810..10.847 rows=359 loops=1)
                                                  ->  Nested Loop  (cost=958.39..1656.74 rows=1043 width=40) (actual time=5.669..9.030 rows=1043 loops=1)
                                                        Join Filter: (ml.movie_id = mc.movie_id)
                                                        ->  Merge Join  (cost=957.96..1316.65 rows=257 width=28) (actual time=5.653..7.974 rows=257 loops=1)
                                                              Merge Cond: (cc.movie_id = ml.movie_id)
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6340.80 rows=135086 width=12) (actual time=0.006..1.747 rows=5993 loops=1)
                                                              ->  Sort  (cost=957.52..963.31 rows=2315 width=16) (actual time=5.459..5.583 rows=2341 loops=1)
                                                                    Sort Key: ml.movie_id
                                                                    Sort Method: quicksort  Memory: 205kB
                                                                    ->  Hash Join  (cost=1.25..828.15 rows=2315 width=16) (actual time=0.021..5.017 rows=2315 loops=1)
                                                                          Hash Cond: (ml.link_type_id = lt.id)
                                                                          ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=8) (actual time=0.005..2.215 rows=29997 loops=1)
                                                                          ->  Hash  (cost=1.23..1.23 rows=2 width=16) (actual time=0.007..0.007 rows=2 loops=1)
                                                                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=16) (actual time=0.004..0.006 rows=2 loops=1)
                                                                                      Filter: ((link)::text ~~ '%follow%'::text)
                                                                                      Rows Removed by Filter: 16
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=3 width=12) (actual time=0.002..0.003 rows=4 loops=257)
                                                              Index Cond: (movie_id = cc.movie_id)
                                                              Filter: (note IS NULL)
                                                              Rows Removed by Filter: 3
                                                  ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1043)
                                                        Index Cond: (id = mc.company_id)
                                                        Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                                                        Rows Removed by Filter: 1
                                            ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                  ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                        Filter: ((kind)::text = 'complete'::text)
                                                        Rows Removed by Filter: 3
                                      ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                            ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'production companies'::text)
                                                  Rows Removed by Filter: 3
                                ->  Hash  (cost=1.05..1.05 rows=2 width=4) (actual time=0.012..0.012 rows=2 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                      ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.009..0.010 rows=2 loops=1)
                                            Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                            Rows Removed by Filter: 2
                          ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.02 rows=1 width=4) (actual time=0.008..0.009 rows=3 loops=273)
                                Index Cond: (movie_id = mc.movie_id)
                                Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                Rows Removed by Filter: 23
                    ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=705)
                          Index Cond: (id = mc.movie_id)
                          Filter: ((production_year >= 1950) AND (production_year <= 2000))
              ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=45 width=8) (actual time=0.001..0.002 rows=9 loops=705)
                    Index Cond: (movie_id = mc.movie_id)
        ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=6483)
              Index Cond: (id = mk.keyword_id)
              Filter: (keyword = 'sequel'::text)
              Rows Removed by Filter: 1
Planning time: 45.576 ms
Execution time: 26.268 ms
