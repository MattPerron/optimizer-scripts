Aggregate  (cost=2816.00..2816.01 rows=1 width=96) (actual time=33.468..33.468 rows=1 loops=1)
  ->  Nested Loop  (cost=9.24..2815.97 rows=3 width=48) (actual time=2.787..33.250 rows=743 loops=1)
        Join Filter: (ml.movie_id = mi.movie_id)
        ->  Nested Loop  (cost=8.81..2814.11 rows=1 width=68) (actual time=2.773..31.630 rows=172 loops=1)
              ->  Nested Loop  (cost=8.39..2813.66 rows=1 width=53) (actual time=1.707..30.898 rows=399 loops=1)
                    ->  Nested Loop  (cost=7.97..2075.56 rows=1673 width=57) (actual time=0.713..17.533 rows=9471 loops=1)
                          Join Filter: (ml.movie_id = mk.movie_id)
                          ->  Nested Loop  (cost=7.53..2006.74 rows=37 width=49) (actual time=0.706..13.634 rows=763 loops=1)
                                Join Filter: (ml.movie_id = t.id)
                                ->  Hash Join  (cost=7.10..1977.34 rows=49 width=28) (actual time=0.699..12.326 rows=763 loops=1)
                                      Hash Cond: (mc.company_type_id = ct.id)
                                      ->  Nested Loop  (cost=6.04..1974.24 rows=196 width=32) (actual time=0.685..12.148 rows=864 loops=1)
                                            Join Filter: (ml.movie_id = mc.movie_id)
                                            ->  Hash Join  (cost=5.61..1885.58 rows=67 width=20) (actual time=0.673..11.225 rows=228 loops=1)
                                                  Hash Cond: (ml.link_type_id = lt.id)
                                                  ->  Hash Join  (cost=4.36..1876.98 rows=606 width=12) (actual time=0.041..10.943 rows=3564 loops=1)
                                                        Hash Cond: (cc.status_id = cct2.id)
                                                        ->  Hash Join  (cost=3.29..1863.29 rows=1212 width=16) (actual time=0.034..10.331 rows=3564 loops=1)
                                                              Hash Cond: (cc.subject_id = cct1.id)
                                                              ->  Merge Join  (cost=2.22..1811.77 rows=4849 width=20) (actual time=0.029..9.633 rows=4849 loops=1)
                                                                    Merge Cond: (ml.movie_id = cc.movie_id)
                                                                    ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.007..4.079 rows=29997 loops=1)
                                                                    ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6340.80 rows=135086 width=12) (actual time=0.005..2.361 rows=9987 loops=1)
                                                              ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                          Filter: ((kind)::text = 'cast'::text)
                                                                          Rows Removed by Filter: 3
                                                        ->  Hash  (cost=1.05..1.05 rows=2 width=4) (actual time=0.004..0.004 rows=2 loops=1)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                              ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=2 width=4) (actual time=0.003..0.003 rows=2 loops=1)
                                                                    Filter: ((kind)::text ~~ 'complete%'::text)
                                                                    Rows Removed by Filter: 2
                                                  ->  Hash  (cost=1.23..1.23 rows=2 width=16) (actual time=0.007..0.007 rows=2 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=16) (actual time=0.004..0.006 rows=2 loops=1)
                                                              Filter: ((link)::text ~~ '%follow%'::text)
                                                              Rows Removed by Filter: 16
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=3 width=12) (actual time=0.003..0.003 rows=4 loops=228)
                                                  Index Cond: (movie_id = cc.movie_id)
                                                  Filter: (note IS NULL)
                                                  Rows Removed by Filter: 3
                                      ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                            ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'production companies'::text)
                                                  Rows Removed by Filter: 3
                                ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=763)
                                      Index Cond: (id = mc.movie_id)
                                      Filter: ((production_year >= 1950) AND (production_year <= 2010))
                          ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.30 rows=45 width=8) (actual time=0.002..0.003 rows=12 loops=763)
                                Index Cond: (movie_id = t.id)
                    ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=9471)
                          Index Cond: (id = mk.keyword_id)
                          Filter: (keyword = 'sequel'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=399)
                    Index Cond: (id = mc.company_id)
                    Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                    Rows Removed by Filter: 1
        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.82 rows=3 width=4) (actual time=0.007..0.009 rows=4 loops=172)
              Index Cond: (movie_id = mk.movie_id)
              Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
              Rows Removed by Filter: 15
Planning time: 45.606 ms
Execution time: 33.568 ms
