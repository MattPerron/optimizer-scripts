Aggregate  (cost=30105.98..30105.99 rows=1 width=96) (actual time=2232.675..2232.675 rows=1 loops=1)
  ->  Nested Loop  (cost=7.97..30105.97 rows=1 width=41) (actual time=90.916..2230.701 rows=4803 loops=1)
        ->  Nested Loop  (cost=7.55..30105.07 rows=2 width=45) (actual time=22.818..956.465 rows=738406 loops=1)
              ->  Nested Loop  (cost=7.12..30103.30 rows=1 width=61) (actual time=22.366..747.538 rows=8650 loops=1)
                    ->  Nested Loop  (cost=6.98..30102.95 rows=2 width=65) (actual time=22.362..736.949 rows=9355 loops=1)
                          ->  Nested Loop  (cost=6.54..30086.84 rows=7 width=57) (actual time=22.134..312.002 rows=9491 loops=1)
                                ->  Nested Loop  (cost=6.42..30085.82 rows=7 width=61) (actual time=22.128..301.337 rows=9491 loops=1)
                                      ->  Nested Loop  (cost=6.00..30079.47 rows=13 width=46) (actual time=22.097..274.479 rows=9827 loops=1)
                                            ->  Nested Loop  (cost=5.57..30009.81 rows=111 width=34) (actual time=21.903..247.538 rows=5740 loops=1)
                                                  ->  Nested Loop  (cost=5.43..29950.33 rows=390 width=38) (actual time=21.882..240.397 rows=6418 loops=1)
                                                        ->  Hash Join  (cost=5.00..29537.77 rows=714 width=13) (actual time=21.830..162.930 rows=26861 loops=1)
                                                              Hash Cond: (mi_idx.info_type_id = it2.id)
                                                              ->  Nested Loop  (cost=2.58..28523.21 rows=80671 width=17) (actual time=21.804..153.001 rows=79814 loops=1)
                                                                    ->  Hash Join  (cost=2.15..4639.57 rows=27624 width=4) (actual time=21.784..44.694 rows=42432 loops=1)
                                                                          Hash Cond: (cc.subject_id = cct1.id)
                                                                          ->  Hash Join  (cost=1.09..3488.68 rows=110494 width=8) (actual time=0.013..32.696 rows=110494 loops=1)
                                                                                Hash Cond: (cc.status_id = cct2.id)
                                                                                ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.006..10.462 rows=135086 loops=1)
                                                                                ->  Hash  (cost=1.05..1.05 rows=3 width=4) (actual time=0.003..0.003 rows=3 loops=1)
                                                                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                      ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.002..0.002 rows=3 loops=1)
                                                                                            Filter: ((kind)::text <> 'complete+verified'::text)
                                                                                            Rows Removed by Filter: 1
                                                                          ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                                                      Filter: ((kind)::text = 'crew'::text)
                                                                                      Rows Removed by Filter: 3
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.83 rows=3 width=13) (actual time=0.002..0.002 rows=2 loops=42432)
                                                                          Index Cond: (movie_id = cc.movie_id)
                                                                          Filter: (info < '8.5'::text)
                                                                          Rows Removed by Filter: 0
                                                              ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                        ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=26861)
                                                              Index Cond: (id = mi_idx.movie_id)
                                                              Filter: (production_year > 2000)
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6418)
                                                        Index Cond: (id = t.kind_id)
                                                        Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                        Rows Removed by Filter: 0
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.62 rows=1 width=12) (actual time=0.003..0.004 rows=2 loops=5740)
                                                  Index Cond: (movie_id = t.id)
                                                  Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                                  Rows Removed by Filter: 4
                                      ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=9827)
                                            Index Cond: (id = mc.company_id)
                                            Filter: ((country_code)::text <> '[us]'::text)
                                            Rows Removed by Filter: 0
                                ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=9491)
                                      Index Cond: (id = mc.company_type_id)
                                      Heap Fetches: 9491
                          ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.28 rows=2 width=8) (actual time=0.040..0.044 rows=1 loops=9491)
                                Index Cond: (movie_id = t.id)
                                Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                Rows Removed by Filter: 128
                    ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=9355)
                          Index Cond: (id = mi.info_type_id)
                          Filter: ((info)::text = 'countries'::text)
                          Rows Removed by Filter: 0
              ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.33 rows=45 width=8) (actual time=0.003..0.014 rows=85 loops=8650)
                    Index Cond: (movie_id = t.id)
        ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=738406)
              Index Cond: (id = mk.keyword_id)
              Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
              Rows Removed by Filter: 1
Planning time: 55.746 ms
Execution time: 2232.784 ms
