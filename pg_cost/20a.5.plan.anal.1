Aggregate  (cost=142292.30..142292.31 rows=1 width=32) (actual time=2001.758..2001.758 rows=1 loops=1)
  ->  Nested Loop  (cost=7408.03..142292.30 rows=1 width=17) (actual time=585.669..2001.729 rows=33 loops=1)
        ->  Nested Loop  (cost=7407.60..142291.85 rows=1 width=21) (actual time=585.632..2001.595 rows=33 loops=1)
              ->  Nested Loop  (cost=7407.17..141905.47 rows=840 width=25) (actual time=179.421..1248.067 rows=532809 loops=1)
                    Join Filter: (t.id = ci.movie_id)
                    ->  Hash Join  (cost=7406.60..139688.99 rows=1133 width=29) (actual time=179.397..751.190 rows=6016 loops=1)
                          Hash Cond: (cc.status_id = cct2.id)
                          ->  Hash Join  (cost=7405.53..139676.96 rows=1052 width=33) (actual time=179.384..749.853 rows=6016 loops=1)
                                Hash Cond: (t.kind_id = kt.id)
                                ->  Nested Loop  (cost=7404.43..139592.24 rows=7363 width=37) (actual time=63.965..748.233 rows=7363 loops=1)
                                      ->  Hash Join  (cost=7404.00..135315.27 rows=8765 width=12) (actual time=63.941..724.098 rows=8765 loops=1)
                                            Hash Cond: (cc.subject_id = cct1.id)
                                            ->  Hash Join  (cost=7402.94..135180.89 rows=12810 width=16) (actual time=63.935..721.935 rows=12810 loops=1)
                                                  Hash Cond: (mk.movie_id = cc.movie_id)
                                                  ->  Hash Join  (cost=3632.50..130440.11 rows=35548 width=4) (actual time=23.935..671.103 rows=35548 loops=1)
                                                        Hash Cond: (mk.keyword_id = k.id)
                                                        ->  Seq Scan on movie_keyword mk  (cost=0.00..69693.30 rows=4523930 width=8) (actual time=0.010..301.590 rows=4523930 loops=1)
                                                        ->  Hash  (cost=3632.40..3632.40 rows=8 width=4) (actual time=23.806..23.806 rows=8 loops=1)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                              ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=4) (actual time=0.093..23.801 rows=8 loops=1)
                                                                    Filter: (keyword = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                                                    Rows Removed by Filter: 134162
                                                  ->  Hash  (cost=2081.86..2081.86 rows=135086 width=12) (actual time=38.745..38.745 rows=135086 loops=1)
                                                        Buckets: 262144  Batches: 1  Memory Usage: 7853kB
                                                        ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.006..16.611 rows=135086 loops=1)
                                            ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                  ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                        Filter: ((kind)::text = 'cast'::text)
                                                        Rows Removed by Filter: 3
                                      ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=8765)
                                            Index Cond: (id = mk.movie_id)
                                            Filter: (production_year > 1950)
                                            Rows Removed by Filter: 0
                                ->  Hash  (cost=1.09..1.09 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                      ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                            Filter: ((kind)::text = 'movie'::text)
                                            Rows Removed by Filter: 6
                          ->  Hash  (cost=1.05..1.05 rows=2 width=4) (actual time=0.008..0.008 rows=2 loops=1)
                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=2 width=4) (actual time=0.006..0.007 rows=2 loops=1)
                                      Filter: ((kind)::text ~~ '%complete%'::text)
                                      Rows Removed by Filter: 2
                    ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.51 rows=36 width=12) (actual time=0.004..0.068 rows=89 loops=6016)
                          Index Cond: (movie_id = mk.movie_id)
              ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=532809)
                    Index Cond: (id = ci.person_role_id)
                    Filter: ((name !~~ '%Sherlock%'::text) AND ((name ~~ '%Tony%Stark%'::text) OR (name ~~ '%Iron%Man%'::text)))
                    Rows Removed by Filter: 0
        ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=33)
              Index Cond: (id = ci.person_id)
              Heap Fetches: 33
Planning time: 7.444 ms
Execution time: 2001.866 ms
