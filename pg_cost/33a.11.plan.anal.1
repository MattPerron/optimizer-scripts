Aggregate  (cost=10295.36..10295.37 rows=1 width=192) (actual time=32.830..32.830 rows=1 loops=1)
  ->  Nested Loop  (cost=5777.14..10295.35 rows=1 width=82) (actual time=15.032..32.815 rows=8 loops=1)
        ->  Hash Join  (cost=5777.01..10295.18 rows=1 width=86) (actual time=15.026..32.802 rows=8 loops=1)
              Hash Cond: (t1.kind_id = kt1.id)
              ->  Nested Loop  (cost=5775.91..10293.98 rows=8 width=90) (actual time=15.008..32.782 rows=8 loops=1)
                    Join Filter: (ml.movie_id = t1.id)
                    ->  Nested Loop  (cost=5775.48..10289.78 rows=8 width=81) (actual time=15.002..32.763 rows=8 loops=1)
                          ->  Nested Loop  (cost=5775.06..10277.30 rows=28 width=66) (actual time=14.994..32.691 rows=28 loops=1)
                                Join Filter: (ml.movie_id = mc1.movie_id)
                                ->  Nested Loop  (cost=5774.63..10270.75 rows=10 width=58) (actual time=14.989..32.647 rows=10 loops=1)
                                      ->  Nested Loop  (cost=5774.21..10266.32 rows=10 width=43) (actual time=14.980..32.609 rows=10 loops=1)
                                            Join Filter: (t2.id = mc2.movie_id)
                                            ->  Hash Join  (cost=5773.78..10262.63 rows=5 width=51) (actual time=14.972..32.577 rows=5 loops=1)
                                                  Hash Cond: (mi_idx2.info_type_id = it2.id)
                                                  ->  Nested Loop  (cost=5771.35..10256.74 rows=276 width=55) (actual time=12.325..32.538 rows=276 loops=1)
                                                        Join Filter: (ml.linked_movie_id = t2.id)
                                                        ->  Hash Join  (cost=5770.92..8234.45 rows=2786 width=30) (actual time=12.307..26.997 rows=2786 loops=1)
                                                              Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                              ->  Merge Join  (cost=5768.50..8127.16 rows=8358 width=34) (actual time=12.290..26.086 rows=8358 loops=1)
                                                                    Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43802.43 rows=1380035 width=13) (actual time=0.008..7.790 rows=63901 loops=1)
                                                                    ->  Sort  (cost=5768.06..5775.42 rows=2944 width=21) (actual time=12.258..12.715 rows=8516 loops=1)
                                                                          Sort Key: ml.movie_id
                                                                          Sort Method: quicksort  Memory: 327kB
                                                                          ->  Nested Loop  (cost=1.70..5598.43 rows=2944 width=21) (actual time=0.032..11.623 rows=2944 loops=1)
                                                                                ->  Hash Join  (cost=1.27..828.17 rows=2315 width=8) (actual time=0.022..5.134 rows=2315 loops=1)
                                                                                      Hash Cond: (ml.link_type_id = lt.id)
                                                                                      ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=12) (actual time=0.005..2.273 rows=29997 loops=1)
                                                                                      ->  Hash  (cost=1.25..1.25 rows=2 width=4) (actual time=0.007..0.007 rows=2 loops=1)
                                                                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                            ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.004..0.007 rows=2 loops=1)
                                                                                                  Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                                  Rows Removed by Filter: 16
                                                                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=13) (actual time=0.002..0.002 rows=1 loops=2315)
                                                                                      Index Cond: (movie_id = ml.linked_movie_id)
                                                                                      Filter: (info < '3.0'::text)
                                                                                      Rows Removed by Filter: 1
                                                              ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                        ->  Index Scan using title_pkey on title t2  (cost=0.43..0.71 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2786)
                                                              Index Cond: (id = mi_idx2.movie_id)
                                                              Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                                              Rows Removed by Filter: 1
                                                  ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                              Filter: ((info)::text = 'rating'::text)
                                                              Rows Removed by Filter: 112
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.004..0.005 rows=2 loops=5)
                                                  Index Cond: (movie_id = mi_idx2.movie_id)
                                      ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=10)
                                            Index Cond: (id = mc2.company_id)
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.002..0.003 rows=3 loops=10)
                                      Index Cond: (movie_id = mi_idx1.movie_id)
                          ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=28)
                                Index Cond: (id = mc1.company_id)
                                Filter: ((country_code)::text = '[us]'::text)
                                Rows Removed by Filter: 1
                    ->  Index Scan using title_pkey on title t1  (cost=0.43..0.51 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=8)
                          Index Cond: (id = mc1.movie_id)
              ->  Hash  (cost=1.09..1.09 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=1)
                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                    ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                          Filter: ((kind)::text = 'tv series'::text)
                          Rows Removed by Filter: 6
        ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=8)
              Index Cond: (id = t2.kind_id)
              Filter: ((kind)::text = 'tv series'::text)
Planning time: 62.461 ms
Execution time: 32.957 ms
