Aggregate  (cost=9917.62..9917.63 rows=1 width=192) (actual time=187.666..187.666 rows=1 loops=1)
  ->  Nested Loop  (cost=8.08..9917.61 rows=1 width=82) (actual time=24.873..187.651 rows=8 loops=1)
        ->  Nested Loop  (cost=7.95..9917.44 rows=1 width=86) (actual time=24.870..187.641 rows=8 loops=1)
              ->  Nested Loop  (cost=7.53..9916.99 rows=1 width=71) (actual time=24.858..187.579 rows=28 loops=1)
                    ->  Nested Loop  (cost=7.40..9916.82 rows=1 width=75) (actual time=24.852..187.539 rows=28 loops=1)
                          Join Filter: (ml.linked_movie_id = t2.id)
                          ->  Nested Loop  (cost=6.97..9914.16 rows=5 width=66) (actual time=24.842..187.176 rows=179 loops=1)
                                ->  Nested Loop  (cost=6.83..9826.03 rows=542 width=70) (actual time=0.155..127.907 rows=69827 loops=1)
                                      ->  Nested Loop  (cost=6.40..9506.54 rows=525 width=78) (actual time=0.151..90.249 rows=11987 loops=1)
                                            ->  Nested Loop  (cost=5.98..9273.92 rows=525 width=63) (actual time=0.145..68.583 rows=11987 loops=1)
                                                  Join Filter: (ml.linked_movie_id = mc2.movie_id)
                                                  ->  Nested Loop  (cost=5.55..9208.27 rows=89 width=55) (actual time=0.137..57.868 rows=2786 loops=1)
                                                        ->  Hash Join  (cost=5.12..9080.51 rows=62 width=42) (actual time=0.127..51.338 rows=2064 loops=1)
                                                              Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                              ->  Nested Loop  (cost=2.69..8990.73 rows=6963 width=46) (actual time=0.098..50.393 rows=6192 loops=1)
                                                                    Join Filter: (ml.movie_id = t1.id)
                                                                    ->  Hash Join  (cost=2.26..4921.27 rows=6963 width=21) (actual time=0.090..40.177 rows=6192 loops=1)
                                                                          Hash Cond: (ml.link_type_id = lt.id)
                                                                          ->  Merge Join  (cost=0.99..4159.69 rows=62670 width=25) (actual time=0.016..35.135 rows=62670 loops=1)
                                                                                Merge Cond: (ml.movie_id = mi_idx1.movie_id)
                                                                                ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=12) (actual time=0.007..4.316 rows=29997 loops=1)
                                                                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43802.43 rows=1380035 width=13) (actual time=0.006..14.540 rows=114373 loops=1)
                                                                          ->  Hash  (cost=1.25..1.25 rows=2 width=4) (actual time=0.007..0.007 rows=2 loops=1)
                                                                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.004..0.006 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                    ->  Index Scan using title_pkey on title t1  (cost=0.43..0.57 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=6192)
                                                                          Index Cond: (id = mi_idx1.movie_id)
                                                              ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=13) (actual time=0.002..0.003 rows=1 loops=2064)
                                                              Index Cond: (movie_id = ml.linked_movie_id)
                                                              Filter: (info < '3.0'::text)
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.002..0.003 rows=4 loops=2786)
                                                        Index Cond: (movie_id = mi_idx2.movie_id)
                                            ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=11987)
                                                  Index Cond: (id = mc2.company_id)
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.001..0.002 rows=6 loops=11987)
                                            Index Cond: (movie_id = t1.id)
                                ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=69827)
                                      Index Cond: (id = mi_idx2.info_type_id)
                                      Filter: ((info)::text = 'rating'::text)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=179)
                                Index Cond: (id = mc2.movie_id)
                                Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                Rows Removed by Filter: 1
                    ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=28)
                          Index Cond: (id = t2.kind_id)
                          Filter: ((kind)::text = 'tv series'::text)
              ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=28)
                    Index Cond: (id = mc1.company_id)
                    Filter: ((country_code)::text = '[us]'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=8)
              Index Cond: (id = t1.kind_id)
              Filter: ((kind)::text = 'tv series'::text)
Planning time: 62.467 ms
Execution time: 187.787 ms
