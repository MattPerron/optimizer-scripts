Aggregate  (cost=4359.97..4359.98 rows=1 width=96) (actual time=24.662..24.662 rows=1 loops=1)
  ->  Nested Loop  (cost=7.35..4359.97 rows=1 width=48) (actual time=3.087..24.507 rows=477 loops=1)
        Join Filter: (ml.movie_id = mi.movie_id)
        ->  Nested Loop  (cost=6.92..4358.39 rows=1 width=68) (actual time=3.073..23.059 rows=172 loops=1)
              ->  Nested Loop  (cost=6.50..3959.56 rows=904 width=72) (actual time=1.937..18.368 rows=3278 loops=1)
                    Join Filter: (ml.movie_id = mk.movie_id)
                    ->  Nested Loop  (cost=6.06..3921.60 rows=20 width=64) (actual time=1.930..17.052 rows=269 loops=1)
                          ->  Nested Loop  (cost=5.93..3915.45 rows=41 width=68) (actual time=1.928..16.805 rows=269 loops=1)
                                ->  Hash Join  (cost=5.51..3836.03 rows=174 width=53) (actual time=0.970..15.537 rows=691 loops=1)
                                      Hash Cond: (mc.company_type_id = ct.id)
                                      ->  Nested Loop  (cost=4.45..3827.70 rows=698 width=57) (actual time=0.955..15.370 rows=780 loops=1)
                                            Join Filter: (ml.movie_id = mc.movie_id)
                                            ->  Nested Loop  (cost=4.02..3669.17 rows=237 width=45) (actual time=0.944..14.629 rows=179 loops=1)
                                                  Join Filter: (ml.movie_id = t.id)
                                                  ->  Hash Join  (cost=3.59..2528.43 rows=657 width=24) (actual time=0.937..14.196 rows=189 loops=1)
                                                        Hash Cond: (ml.link_type_id = lt.id)
                                                        ->  Merge Join  (cost=2.35..2383.77 rows=11822 width=16) (actual time=0.037..13.915 rows=3346 loops=1)
                                                              Merge Cond: (cc.movie_id = ml.movie_id)
                                                              ->  Nested Loop  (cost=0.55..26953.42 rows=33772 width=8) (actual time=0.011..6.712 rows=5561 loops=1)
                                                                    ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6340.80 rows=135086 width=12) (actual time=0.006..1.818 rows=5993 loops=1)
                                                                    ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=5993)
                                                                          Index Cond: (id = cc.status_id)
                                                                          Filter: ((kind)::text = 'complete'::text)
                                                                          Rows Removed by Filter: 0
                                                              ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.005..4.366 rows=30638 loops=1)
                                                        ->  Hash  (cost=1.23..1.23 rows=1 width=16) (actual time=0.007..0.007 rows=2 loops=1)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                              ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=16) (actual time=0.004..0.006 rows=2 loops=1)
                                                                    Filter: ((link)::text ~~ '%follow%'::text)
                                                                    Rows Removed by Filter: 16
                                                  ->  Index Scan using title_pkey on title t  (cost=0.43..1.72 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=189)
                                                        Index Cond: (id = cc.movie_id)
                                                        Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                                        Rows Removed by Filter: 0
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.63 rows=3 width=12) (actual time=0.002..0.003 rows=4 loops=179)
                                                  Index Cond: (movie_id = t.id)
                                                  Filter: (note IS NULL)
                                                  Rows Removed by Filter: 2
                                      ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                            ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'production companies'::text)
                                                  Rows Removed by Filter: 3
                                ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=691)
                                      Index Cond: (id = mc.company_id)
                                      Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                                      Rows Removed by Filter: 1
                          ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=269)
                                Index Cond: (id = cc.subject_id)
                                Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                    ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=45 width=8) (actual time=0.001..0.003 rows=12 loops=269)
                          Index Cond: (movie_id = mc.movie_id)
              ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=3278)
                    Index Cond: (id = mk.keyword_id)
                    Filter: (keyword = 'sequel'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=4) (actual time=0.006..0.008 rows=3 loops=172)
              Index Cond: (movie_id = mk.movie_id)
              Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
              Rows Removed by Filter: 17
Planning time: 45.423 ms
Execution time: 24.765 ms
