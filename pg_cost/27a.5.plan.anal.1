Aggregate  (cost=3127.92..3127.93 rows=1 width=96) (actual time=22.135..22.135 rows=1 loops=1)
  ->  Nested Loop  (cost=6.43..3127.91 rows=1 width=48) (actual time=2.343..21.988 rows=477 loops=1)
        Join Filter: (ml.movie_id = mi.movie_id)
        ->  Nested Loop  (cost=6.00..3126.34 rows=1 width=68) (actual time=2.330..20.521 rows=172 loops=1)
              ->  Nested Loop  (cost=5.58..3006.76 rows=271 width=72) (actual time=1.535..15.739 rows=3278 loops=1)
                    Join Filter: (ml.movie_id = mk.movie_id)
                    ->  Nested Loop  (cost=5.14..2995.37 rows=6 width=64) (actual time=1.529..14.425 rows=269 loops=1)
                          ->  Nested Loop  (cost=5.01..2993.42 rows=13 width=68) (actual time=1.526..14.187 rows=269 loops=1)
                                ->  Nested Loop  (cost=4.88..2985.33 rows=53 width=72) (actual time=1.524..13.872 rows=333 loops=1)
                                      ->  Nested Loop  (cost=4.75..2953.00 rows=212 width=76) (actual time=1.520..13.539 rows=355 loops=1)
                                            ->  Nested Loop  (cost=4.33..2483.31 rows=1029 width=61) (actual time=0.670..11.650 rows=1029 loops=1)
                                                  Join Filter: (ml.movie_id = mc.movie_id)
                                                  ->  Nested Loop  (cost=3.90..2318.07 rows=247 width=49) (actual time=0.658..10.647 rows=247 loops=1)
                                                        Join Filter: (ml.movie_id = t.id)
                                                        ->  Hash Join  (cost=3.47..1871.85 rows=257 width=28) (actual time=0.650..10.045 rows=257 loops=1)
                                                              Hash Cond: (ml.link_type_id = lt.id)
                                                              ->  Merge Join  (cost=2.22..1811.77 rows=4849 width=20) (actual time=0.029..9.648 rows=4849 loops=1)
                                                                    Merge Cond: (ml.movie_id = cc.movie_id)
                                                                    ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.006..4.108 rows=29997 loops=1)
                                                                    ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6340.80 rows=135086 width=12) (actual time=0.005..2.373 rows=9987 loops=1)
                                                              ->  Hash  (cost=1.23..1.23 rows=2 width=16) (actual time=0.014..0.014 rows=2 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=16) (actual time=0.009..0.011 rows=2 loops=1)
                                                                          Filter: ((link)::text ~~ '%follow%'::text)
                                                                          Rows Removed by Filter: 16
                                                        ->  Index Scan using title_pkey on title t  (cost=0.43..1.72 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=257)
                                                              Index Cond: (id = cc.movie_id)
                                                              Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                                              Rows Removed by Filter: 0
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.63 rows=3 width=12) (actual time=0.002..0.003 rows=4 loops=247)
                                                        Index Cond: (movie_id = t.id)
                                                        Filter: (note IS NULL)
                                                        Rows Removed by Filter: 3
                                            ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1029)
                                                  Index Cond: (id = mc.company_id)
                                                  Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=355)
                                            Index Cond: (id = mc.company_type_id)
                                            Filter: ((kind)::text = 'production companies'::text)
                                            Rows Removed by Filter: 0
                                ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=333)
                                      Index Cond: (id = cc.status_id)
                                      Filter: ((kind)::text = 'complete'::text)
                                      Rows Removed by Filter: 0
                          ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=269)
                                Index Cond: (id = cc.subject_id)
                                Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                    ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=45 width=8) (actual time=0.002..0.003 rows=12 loops=269)
                          Index Cond: (movie_id = mc.movie_id)
              ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=3278)
                    Index Cond: (id = mk.keyword_id)
                    Filter: (keyword = 'sequel'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=4) (actual time=0.006..0.008 rows=3 loops=172)
              Index Cond: (movie_id = mk.movie_id)
              Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
              Rows Removed by Filter: 17
Planning time: 45.353 ms
Execution time: 22.236 ms
