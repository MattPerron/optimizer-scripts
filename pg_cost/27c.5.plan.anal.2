Aggregate  (cost=2443.38..2443.39 rows=1 width=96) (actual time=34.396..34.396 rows=1 loops=1)
  ->  Nested Loop  (cost=963.72..2443.37 rows=1 width=48) (actual time=6.417..34.144 rows=743 loops=1)
        ->  Nested Loop  (cost=963.30..1905.13 rows=1220 width=52) (actual time=5.833..18.810 rows=11620 loops=1)
              Join Filter: (ml.movie_id = mk.movie_id)
              ->  Nested Loop  (cost=962.87..1854.90 rows=27 width=68) (actual time=5.826..14.258 rows=1150 loops=1)
                    Join Filter: (ml.movie_id = mi.movie_id)
                    ->  Nested Loop  (cost=962.44..1833.84 rows=10 width=64) (actual time=5.796..11.127 rows=277 loops=1)
                          ->  Hash Join  (cost=962.02..1812.39 rows=47 width=49) (actual time=5.642..9.742 rows=763 loops=1)
                                Hash Cond: (mc.company_type_id = ct.id)
                                ->  Nested Loop  (cost=960.95..1809.38 rows=187 width=53) (actual time=5.628..9.566 rows=864 loops=1)
                                      Join Filter: (ml.movie_id = mc.movie_id)
                                      ->  Hash Join  (cost=960.52..1770.36 rows=64 width=41) (actual time=5.615..8.639 rows=228 loops=1)
                                            Hash Cond: (cc.subject_id = cct1.id)
                                            ->  Nested Loop  (cost=959.46..1766.62 rows=257 width=45) (actual time=5.608..8.583 rows=257 loops=1)
                                                  Join Filter: (ml.movie_id = t.id)
                                                  ->  Hash Join  (cost=959.03..1320.40 rows=257 width=24) (actual time=5.598..8.012 rows=257 loops=1)
                                                        Hash Cond: (cc.status_id = cct2.id)
                                                        ->  Merge Join  (cost=957.96..1316.65 rows=257 width=28) (actual time=5.591..7.954 rows=257 loops=1)
                                                              Merge Cond: (cc.movie_id = ml.movie_id)
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6340.80 rows=135086 width=12) (actual time=0.006..1.767 rows=5993 loops=1)
                                                              ->  Sort  (cost=957.52..963.31 rows=2315 width=16) (actual time=5.397..5.523 rows=2341 loops=1)
                                                                    Sort Key: ml.movie_id
                                                                    Sort Method: quicksort  Memory: 205kB
                                                                    ->  Hash Join  (cost=1.25..828.15 rows=2315 width=16) (actual time=0.022..5.011 rows=2315 loops=1)
                                                                          Hash Cond: (ml.link_type_id = lt.id)
                                                                          ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=8) (actual time=0.006..2.200 rows=29997 loops=1)
                                                                          ->  Hash  (cost=1.23..1.23 rows=2 width=16) (actual time=0.007..0.007 rows=2 loops=1)
                                                                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=16) (actual time=0.003..0.006 rows=2 loops=1)
                                                                                      Filter: ((link)::text ~~ '%follow%'::text)
                                                                                      Rows Removed by Filter: 16
                                                        ->  Hash  (cost=1.05..1.05 rows=2 width=4) (actual time=0.003..0.003 rows=2 loops=1)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                              ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=2 width=4) (actual time=0.002..0.002 rows=2 loops=1)
                                                                    Filter: ((kind)::text ~~ 'complete%'::text)
                                                                    Rows Removed by Filter: 2
                                                  ->  Index Scan using title_pkey on title t  (cost=0.43..1.72 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=257)
                                                        Index Cond: (id = cc.movie_id)
                                                        Filter: ((production_year >= 1950) AND (production_year <= 2010))
                                            ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                  ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                        Filter: ((kind)::text = 'cast'::text)
                                                        Rows Removed by Filter: 3
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=3 width=12) (actual time=0.003..0.003 rows=4 loops=228)
                                            Index Cond: (movie_id = t.id)
                                            Filter: (note IS NULL)
                                            Rows Removed by Filter: 3
                                ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                      ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                            Filter: ((kind)::text = 'production companies'::text)
                                            Rows Removed by Filter: 3
                          ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=763)
                                Index Cond: (id = mc.company_id)
                                Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                                Rows Removed by Filter: 1
                    ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.07 rows=3 width=4) (actual time=0.009..0.011 rows=4 loops=277)
                          Index Cond: (movie_id = t.id)
                          Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
                          Rows Removed by Filter: 21
              ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.30 rows=45 width=8) (actual time=0.001..0.002 rows=10 loops=1150)
                    Index Cond: (movie_id = t.id)
        ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=11620)
              Index Cond: (id = mk.keyword_id)
              Filter: (keyword = 'sequel'::text)
              Rows Removed by Filter: 1
Planning time: 45.361 ms
Execution time: 34.496 ms
