Aggregate  (cost=7977.05..7977.06 rows=1 width=192) (actual time=19.244..19.245 rows=1 loops=1)
  ->  Nested Loop  (cost=5.24..7977.03 rows=1 width=82) (actual time=2.789..19.233 rows=8 loops=1)
        ->  Nested Loop  (cost=4.82..7976.59 rows=1 width=67) (actual time=2.787..19.216 rows=8 loops=1)
              Join Filter: (t2.id = mc2.movie_id)
              ->  Nested Loop  (cost=4.39..7975.85 rows=1 width=75) (actual time=2.782..19.204 rows=2 loops=1)
                    ->  Nested Loop  (cost=4.25..7975.67 rows=1 width=79) (actual time=2.748..19.196 rows=6 loops=1)
                          ->  Nested Loop  (cost=3.82..7975.22 rows=1 width=64) (actual time=2.735..19.086 rows=42 loops=1)
                                ->  Nested Loop  (cost=3.39..7974.62 rows=1 width=72) (actual time=2.728..19.026 rows=15 loops=1)
                                      ->  Nested Loop  (cost=3.25..7971.51 rows=19 width=76) (actual time=0.213..18.753 rows=285 loops=1)
                                            ->  Nested Loop  (cost=3.12..7951.19 rows=132 width=80) (actual time=0.212..18.498 rows=285 loops=1)
                                                  Join Filter: (ml.movie_id = t1.id)
                                                  ->  Nested Loop  (cost=2.69..7874.04 rows=132 width=55) (actual time=0.209..17.991 rows=285 loops=1)
                                                        ->  Nested Loop  (cost=2.26..7782.83 rows=44 width=42) (actual time=0.206..17.707 rows=117 loops=1)
                                                              ->  Nested Loop  (cost=2.13..7735.41 rows=308 width=46) (actual time=0.068..17.425 rows=308 loops=1)
                                                                    Join Filter: (ml.linked_movie_id = t2.id)
                                                                    ->  Nested Loop  (cost=1.70..5598.43 rows=2944 width=21) (actual time=0.042..11.243 rows=2944 loops=1)
                                                                          ->  Hash Join  (cost=1.27..828.17 rows=2315 width=8) (actual time=0.031..4.818 rows=2315 loops=1)
                                                                                Hash Cond: (ml.link_type_id = lt.id)
                                                                                ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=12) (actual time=0.009..2.165 rows=29997 loops=1)
                                                                                ->  Hash  (cost=1.25..1.25 rows=2 width=4) (actual time=0.010..0.010 rows=2 loops=1)
                                                                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.005..0.008 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=13) (actual time=0.002..0.002 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.0'::text)
                                                                                Rows Removed by Filter: 1
                                                                    ->  Index Scan using title_pkey on title t2  (cost=0.43..0.71 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2944)
                                                                          Index Cond: (id = mi_idx2.movie_id)
                                                                          Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                                                          Rows Removed by Filter: 1
                                                              ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=308)
                                                                    Index Cond: (id = t2.kind_id)
                                                                    Filter: ((kind)::text = 'tv series'::text)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..2.04 rows=3 width=13) (actual time=0.001..0.002 rows=2 loops=117)
                                                              Index Cond: (movie_id = ml.movie_id)
                                                  ->  Index Scan using title_pkey on title t1  (cost=0.43..0.57 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=285)
                                                        Index Cond: (id = mi_idx1.movie_id)
                                            ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=285)
                                                  Index Cond: (id = t1.kind_id)
                                                  Filter: ((kind)::text = 'tv series'::text)
                                      ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=285)
                                            Index Cond: (id = mi_idx2.info_type_id)
                                            Filter: ((info)::text = 'rating'::text)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=3 loops=15)
                                      Index Cond: (movie_id = t1.id)
                          ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=42)
                                Index Cond: (id = mc1.company_id)
                                Filter: ((country_code)::text = '[us]'::text)
                                Rows Removed by Filter: 1
                    ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=6)
                          Index Cond: (id = mi_idx1.info_type_id)
                          Filter: ((info)::text = 'rating'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=2)
                    Index Cond: (movie_id = mi_idx2.movie_id)
        ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=8)
              Index Cond: (id = mc2.company_id)
Planning time: 62.368 ms
Execution time: 19.359 ms
