Aggregate  (cost=97927.56..97927.57 rows=1 width=96) (actual time=1268.590..1268.591 rows=1 loops=1)
  ->  Nested Loop  (cost=4876.31..97927.55 rows=1 width=41) (actual time=101.942..1266.732 rows=4803 loops=1)
        ->  Nested Loop  (cost=4876.17..97927.37 rows=1 width=45) (actual time=101.935..1261.180 rows=5295 loops=1)
              Join Filter: (t.id = mi.movie_id)
              ->  Nested Loop  (cost=4875.74..97925.47 rows=1 width=61) (actual time=62.536..912.776 rows=4410 loops=1)
                    ->  Nested Loop  (cost=4875.60..97925.31 rows=1 width=65) (actual time=62.529..907.777 rows=4558 loops=1)
                          ->  Nested Loop  (cost=4875.18..97924.82 rows=1 width=50) (actual time=62.521..894.976 rows=4703 loops=1)
                                ->  Nested Loop  (cost=4875.05..97924.66 rows=1 width=54) (actual time=62.515..889.796 rows=4703 loops=1)
                                      Join Filter: (t.id = mc.movie_id)
                                      ->  Nested Loop  (cost=4874.62..97924.08 rows=1 width=42) (actual time=62.503..883.136 rows=525 loops=1)
                                            ->  Nested Loop  (cost=4874.20..97788.31 rows=306 width=46) (actual time=44.789..717.334 rows=79423 loops=1)
                                                  ->  Hash Join  (cost=4873.77..97484.49 rows=171 width=38) (actual time=44.748..675.351 rows=6418 loops=1)
                                                        Hash Cond: (mi_idx.info_type_id = it2.id)
                                                        ->  Nested Loop  (cost=4871.35..97239.35 rows=19345 width=42) (actual time=44.713..672.952 rows=19345 loops=1)
                                                              ->  Hash Join  (cost=4870.92..88999.17 rows=14943 width=29) (actual time=44.645..634.623 rows=14943 loops=1)
                                                                    Hash Cond: (cc.subject_id = cct1.id)
                                                                    ->  Hash Join  (cost=4869.86..88616.83 rows=36639 width=33) (actual time=44.578..630.066 rows=36639 loops=1)
                                                                          Hash Cond: (t.id = cc.movie_id)
                                                                          ->  Seq Scan on title t  (cost=0.00..67601.90 rows=1381453 width=25) (actual time=0.005..327.533 rows=1381453 loops=1)
                                                                                Filter: (production_year > 2000)
                                                                                Rows Removed by Filter: 1146859
                                                                          ->  Hash  (cost=3488.68..3488.68 rows=110494 width=8) (actual time=44.441..44.441 rows=110494 loops=1)
                                                                                Buckets: 131072  Batches: 1  Memory Usage: 5341kB
                                                                                ->  Hash Join  (cost=1.09..3488.68 rows=110494 width=8) (actual time=0.012..31.156 rows=110494 loops=1)
                                                                                      Hash Cond: (cc.status_id = cct2.id)
                                                                                      ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.005..9.216 rows=135086 loops=1)
                                                                                      ->  Hash  (cost=1.05..1.05 rows=3 width=4) (actual time=0.003..0.003 rows=3 loops=1)
                                                                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                            ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.001..0.002 rows=3 loops=1)
                                                                                                  Filter: ((kind)::text <> 'complete+verified'::text)
                                                                                                  Rows Removed by Filter: 1
                                                                    ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                          ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                                                Filter: ((kind)::text = 'crew'::text)
                                                                                Rows Removed by Filter: 3
                                                              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.52 rows=3 width=13) (actual time=0.002..0.002 rows=1 loops=14943)
                                                                    Index Cond: (movie_id = t.id)
                                                                    Filter: (info < '8.5'::text)
                                                                    Rows Removed by Filter: 0
                                                        ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=1)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                              ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=1)
                                                                    Filter: ((info)::text = 'rating'::text)
                                                                    Rows Removed by Filter: 112
                                                  ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.33 rows=45 width=8) (actual time=0.003..0.005 rows=12 loops=6418)
                                                        Index Cond: (movie_id = t.id)
                                            ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=79423)
                                                  Index Cond: (id = mk.keyword_id)
                                                  Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.005..0.011 rows=9 loops=525)
                                            Index Cond: (movie_id = mk.movie_id)
                                            Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                            Rows Removed by Filter: 9
                                ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=4703)
                                      Index Cond: (id = mc.company_type_id)
                                      Heap Fetches: 4703
                          ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=4703)
                                Index Cond: (id = mc.company_id)
                                Filter: ((country_code)::text <> '[us]'::text)
                                Rows Removed by Filter: 0
                    ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=4558)
                          Index Cond: (id = t.kind_id)
                          Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                          Rows Removed by Filter: 0
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.069..0.079 rows=1 loops=4410)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                    Rows Removed by Filter: 247
        ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=5295)
              Index Cond: (id = mi.info_type_id)
              Filter: ((info)::text = 'countries'::text)
              Rows Removed by Filter: 0
Planning time: 55.402 ms
Execution time: 1268.710 ms
