Aggregate  (cost=67182.11..67182.12 rows=1 width=96) (actual time=363.647..363.647 rows=1 loops=1)
  ->  Nested Loop  (cost=2633.11..67182.11 rows=1 width=48) (actual time=71.179..359.482 rows=16308 loops=1)
        Join Filter: (n.id = an.person_id)
        ->  Nested Loop  (cost=2632.68..67179.21 rows=1 width=60) (actual time=71.169..348.046 rows=3822 loops=1)
              ->  Nested Loop  (cost=2632.54..67179.03 rows=1 width=64) (actual time=49.083..334.064 rows=15343 loops=1)
                    ->  Nested Loop  (cost=2632.12..67177.00 rows=1 width=68) (actual time=49.056..222.802 rows=71726 loops=1)
                          Join Filter: (t.id = mc.movie_id)
                          ->  Nested Loop  (cost=2631.69..67172.15 rows=1 width=84) (actual time=49.046..196.866 rows=2747 loops=1)
                                ->  Nested Loop  (cost=2631.56..67171.98 rows=1 width=88) (actual time=49.040..194.076 rows=2747 loops=1)
                                      ->  Nested Loop  (cost=2631.41..67171.79 rows=1 width=92) (actual time=49.033..191.209 rows=2747 loops=1)
                                            Join Filter: (t.id = mi.movie_id)
                                            ->  Nested Loop  (cost=2630.98..67085.77 rows=2 width=84) (actual time=49.011..130.172 rows=970 loops=1)
                                                  Join Filter: (n.id = pi.person_id)
                                                  ->  Nested Loop  (cost=2630.55..67026.61 rows=3 width=76) (actual time=48.998..129.737 rows=3 loops=1)
                                                        ->  Nested Loop  (cost=2630.12..66421.79 rows=263 width=57) (actual time=19.366..127.893 rows=429 loops=1)
                                                              ->  Nested Loop  (cost=2629.69..65222.38 rows=541 width=45) (actual time=19.354..126.084 rows=541 loops=1)
                                                                    Join Filter: (t.id = ci.movie_id)
                                                                    ->  Hash Join  (cost=2629.12..64387.48 rows=18 width=29) (actual time=19.329..122.666 rows=18 loops=1)
                                                                          Hash Cond: (mk.keyword_id = k.id)
                                                                          ->  Nested Loop  (cost=2.99..60058.30 rows=134895 width=33) (actual time=0.063..104.537 rows=134895 loops=1)
                                                                                ->  Nested Loop  (cost=2.56..53145.81 rows=1996 width=25) (actual time=0.052..67.375 rows=1996 loops=1)
                                                                                      ->  Hash Join  (cost=2.12..3745.63 rows=17879 width=4) (actual time=0.029..25.676 rows=17879 loops=1)
                                                                                            Hash Cond: (cc.subject_id = cct1.id)
                                                                                            ->  Hash Join  (cost=1.06..3488.66 rows=24592 width=8) (actual time=0.012..22.393 rows=24592 loops=1)
                                                                                                  Hash Cond: (cc.status_id = cct2.id)
                                                                                                  ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.006..9.271 rows=135086 loops=1)
                                                                                                  ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                                        ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                                                                              Filter: ((kind)::text = 'complete+verified'::text)
                                                                                                              Rows Removed by Filter: 3
                                                                                            ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=1)
                                                                                                  Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                                  ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                                                                        Filter: ((kind)::text = 'cast'::text)
                                                                                                        Rows Removed by Filter: 3
                                                                                      ->  Index Scan using title_pkey on title t  (cost=0.43..2.76 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=17879)
                                                                                            Index Cond: (id = cc.movie_id)
                                                                                            Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                                            Rows Removed by Filter: 1
                                                                                ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..3.01 rows=45 width=8) (actual time=0.003..0.011 rows=68 loops=1996)
                                                                                      Index Cond: (movie_id = t.id)
                                                                          ->  Hash  (cost=2626.12..2626.12 rows=1 width=4) (actual time=9.484..9.484 rows=1 loops=1)
                                                                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.032..9.483 rows=1 loops=1)
                                                                                      Filter: (keyword = 'computer-animation'::text)
                                                                                      Rows Removed by Filter: 134169
                                                                    ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..46.37 rows=1 width=16) (actual time=0.026..0.184 rows=30 loops=18)
                                                                          Index Cond: (movie_id = mk.movie_id)
                                                                          Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                          Rows Removed by Filter: 124
                                                              ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.22 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=541)
                                                                    Index Cond: (id = ci.person_role_id)
                                                        ->  Index Scan using name_pkey on name n  (cost=0.43..2.30 rows=1 width=19) (actual time=0.004..0.004 rows=0 loops=429)
                                                              Index Cond: (id = ci.person_id)
                                                              Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.41 rows=25 width=8) (actual time=0.009..0.069 rows=323 loops=3)
                                                        Index Cond: (person_id = ci.person_id)
                                            ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..43.00 rows=1 width=8) (actual time=0.009..0.062 rows=3 loops=970)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%200%'::text) OR (info ~~ 'USA:%200%'::text)))
                                                  Rows Removed by Filter: 310
                                      ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=2747)
                                            Index Cond: (id = mi.info_type_id)
                                            Filter: ((info)::text = 'release dates'::text)
                                ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=2747)
                                      Index Cond: (id = ci.role_id)
                                      Filter: ((role)::text = 'actress'::text)
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.79 rows=5 width=8) (actual time=0.002..0.005 rows=26 loops=2747)
                                Index Cond: (movie_id = mk.movie_id)
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=71726)
                          Index Cond: (id = mc.company_id)
                          Filter: ((country_code)::text = '[us]'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using info_type_pkey on info_type it3  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=15343)
                    Index Cond: (id = pi.info_type_id)
                    Filter: ((info)::text = 'trivia'::text)
                    Rows Removed by Filter: 1
        ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.87 rows=2 width=4) (actual time=0.001..0.002 rows=4 loops=3822)
              Index Cond: (person_id = pi.person_id)
              Heap Fetches: 16308
Planning time: 75.718 ms
Execution time: 363.795 ms
