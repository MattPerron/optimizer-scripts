Aggregate  (cost=12396.60..12396.61 rows=1 width=192) (actual time=186.837..186.837 rows=1 loops=1)
  ->  Nested Loop  (cost=8.06..12396.58 rows=1 width=82) (actual time=24.783..186.824 rows=4 loops=1)
        ->  Nested Loop  (cost=7.93..12396.41 rows=1 width=86) (actual time=24.780..186.817 rows=4 loops=1)
              ->  Nested Loop  (cost=7.51..12395.96 rows=1 width=71) (actual time=24.775..186.784 rows=14 loops=1)
                    ->  Nested Loop  (cost=7.38..12395.79 rows=1 width=75) (actual time=24.769..186.759 rows=14 loops=1)
                          Join Filter: (ml.linked_movie_id = t2.id)
                          ->  Nested Loop  (cost=6.95..12392.09 rows=7 width=66) (actual time=24.759..186.398 rows=179 loops=1)
                                ->  Nested Loop  (cost=6.80..12267.37 rows=767 width=70) (actual time=0.152..127.436 rows=69827 loops=1)
                                      ->  Nested Loop  (cost=6.37..11815.22 rows=743 width=78) (actual time=0.148..89.846 rows=11987 loops=1)
                                            ->  Nested Loop  (cost=5.95..11486.01 rows=743 width=63) (actual time=0.142..68.203 rows=11987 loops=1)
                                                  Join Filter: (ml.linked_movie_id = mc2.movie_id)
                                                  ->  Nested Loop  (cost=5.52..11393.06 rows=126 width=55) (actual time=0.134..57.567 rows=2786 loops=1)
                                                        ->  Hash Join  (cost=5.10..11211.73 rows=88 width=42) (actual time=0.126..51.048 rows=2064 loops=1)
                                                              Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                              ->  Nested Loop  (cost=2.67..11084.08 rows=9981 width=46) (actual time=0.098..50.141 rows=6192 loops=1)
                                                                    Join Filter: (ml.movie_id = t1.id)
                                                                    ->  Hash Join  (cost=2.24..5250.78 rows=9981 width=21) (actual time=0.090..39.987 rows=6192 loops=1)
                                                                          Hash Cond: (ml.link_type_id = lt.id)
                                                                          ->  Merge Join  (cost=0.99..4159.69 rows=89832 width=25) (actual time=0.016..34.942 rows=62670 loops=1)
                                                                                Merge Cond: (ml.movie_id = mi_idx1.movie_id)
                                                                                ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=12) (actual time=0.008..4.320 rows=29997 loops=1)
                                                                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43802.43 rows=1380035 width=13) (actual time=0.006..14.420 rows=114373 loops=1)
                                                                          ->  Hash  (cost=1.23..1.23 rows=2 width=4) (actual time=0.007..0.007 rows=2 loops=1)
                                                                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=4) (actual time=0.004..0.006 rows=2 loops=1)
                                                                                      Filter: ((link)::text ~~ '%follow%'::text)
                                                                                      Rows Removed by Filter: 16
                                                                    ->  Index Scan using title_pkey on title t1  (cost=0.43..0.57 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=6192)
                                                                          Index Cond: (id = mi_idx1.movie_id)
                                                              ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.018..0.018 rows=1 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=13) (actual time=0.002..0.003 rows=1 loops=2064)
                                                              Index Cond: (movie_id = ml.linked_movie_id)
                                                              Filter: (info < '3.0'::text)
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.002..0.003 rows=4 loops=2786)
                                                        Index Cond: (movie_id = mi_idx2.movie_id)
                                            ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=11987)
                                                  Index Cond: (id = mc2.company_id)
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.001..0.002 rows=6 loops=11987)
                                            Index Cond: (movie_id = t1.id)
                                ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=69827)
                                      Index Cond: (id = mi_idx2.info_type_id)
                                      Filter: ((info)::text = 'rating'::text)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=179)
                                Index Cond: (id = mc2.movie_id)
                                Filter: (production_year = 2007)
                                Rows Removed by Filter: 1
                    ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=14)
                          Index Cond: (id = t2.kind_id)
                          Filter: ((kind)::text = 'tv series'::text)
              ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=14)
                    Index Cond: (id = mc1.company_id)
                    Filter: ((country_code)::text = '[nl]'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=4)
              Index Cond: (id = t1.kind_id)
              Filter: ((kind)::text = 'tv series'::text)
Planning time: 62.801 ms
Execution time: 186.959 ms
