Aggregate  (cost=53842.79..53842.80 rows=1 width=96) (actual time=73.829..73.829 rows=1 loops=1)
  ->  Nested Loop  (cost=7.39..53842.79 rows=1 width=48) (actual time=38.638..73.466 rows=1620 loops=1)
        Join Filter: (n.id = an.person_id)
        ->  Nested Loop  (cost=6.97..53839.89 rows=1 width=60) (actual time=38.628..72.120 rows=540 loops=1)
              ->  Nested Loop  (cost=6.55..53833.82 rows=3 width=64) (actual time=38.619..68.361 rows=2376 loops=1)
                    Join Filter: (t.id = mc.movie_id)
                    ->  Nested Loop  (cost=6.12..53819.26 rows=3 width=80) (actual time=38.609..67.446 rows=108 loops=1)
                          ->  Nested Loop  (cost=5.97..53766.26 rows=326 width=84) (actual time=38.599..67.140 rows=326 loops=1)
                                Join Filter: (n.id = pi.person_id)
                                ->  Nested Loop  (cost=5.54..53726.80 rows=2 width=76) (actual time=38.589..67.005 rows=2 loops=1)
                                      ->  Nested Loop  (cost=5.12..53722.19 rows=2 width=57) (actual time=38.579..66.991 rows=2 loops=1)
                                            ->  Nested Loop  (cost=4.98..53721.86 rows=2 width=61) (actual time=38.571..66.981 rows=2 loops=1)
                                                  ->  Nested Loop  (cost=4.55..53551.08 rows=76 width=49) (actual time=38.426..66.727 rows=76 loops=1)
                                                        Join Filter: (t.id = ci.movie_id)
                                                        ->  Nested Loop  (cost=3.99..53458.41 rows=2 width=33) (actual time=38.412..66.301 rows=2 loops=1)
                                                              ->  Nested Loop  (cost=3.84..53458.06 rows=2 width=37) (actual time=38.405..66.292 rows=2 loops=1)
                                                                    Join Filter: (t.id = mi.movie_id)
                                                                    ->  Nested Loop  (cost=3.41..53415.05 rows=1 width=29) (actual time=38.373..66.136 rows=1 loops=1)
                                                                          ->  Nested Loop  (cost=2.99..53195.74 rows=108 width=33) (actual time=38.299..65.818 rows=108 loops=1)
                                                                                Join Filter: (t.id = mk.movie_id)
                                                                                ->  Nested Loop  (cost=2.56..53191.67 rows=1 width=25) (actual time=38.285..65.767 rows=1 loops=1)
                                                                                      ->  Hash Join  (cost=2.12..3745.63 rows=17879 width=4) (actual time=0.030..25.695 rows=17879 loops=1)
                                                                                            Hash Cond: (cc.subject_id = cct1.id)
                                                                                            ->  Hash Join  (cost=1.06..3488.66 rows=24592 width=8) (actual time=0.012..22.566 rows=24592 loops=1)
                                                                                                  Hash Cond: (cc.status_id = cct2.id)
                                                                                                  ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.006..9.225 rows=135086 loops=1)
                                                                                                  ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                                        ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                                                                              Filter: ((kind)::text = 'complete+verified'::text)
                                                                                                              Rows Removed by Filter: 3
                                                                                            ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=1)
                                                                                                  Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                                  ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                                                        Filter: ((kind)::text = 'cast'::text)
                                                                                                        Rows Removed by Filter: 3
                                                                                      ->  Index Scan using title_pkey on title t  (cost=0.43..2.77 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=17879)
                                                                                            Index Cond: (id = cc.movie_id)
                                                                                            Filter: ((production_year >= 2000) AND (production_year <= 2010) AND (title = 'Shrek 2'::text))
                                                                                            Rows Removed by Filter: 1
                                                                                ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..3.50 rows=45 width=8) (actual time=0.011..0.031 rows=108 loops=1)
                                                                                      Index Cond: (movie_id = cc.movie_id)
                                                                          ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..2.02 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=108)
                                                                                Index Cond: (id = mk.keyword_id)
                                                                                Filter: (keyword = 'computer-animation'::text)
                                                                                Rows Removed by Filter: 1
                                                                    ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..43.00 rows=1 width=8) (actual time=0.030..0.153 rows=2 loops=1)
                                                                          Index Cond: (movie_id = mk.movie_id)
                                                                          Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%200%'::text) OR (info ~~ 'USA:%200%'::text)))
                                                                          Rows Removed by Filter: 455
                                                              ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=2)
                                                                    Index Cond: (id = mi.info_type_id)
                                                                    Filter: ((info)::text = 'release dates'::text)
                                                        ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..46.33 rows=1 width=16) (actual time=0.008..0.206 rows=38 loops=2)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                              Filter: (note = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                              Rows Removed by Filter: 191
                                                  ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.22 rows=1 width=20) (actual time=0.003..0.003 rows=0 loops=76)
                                                        Index Cond: (id = ci.person_role_id)
                                                        Filter: (name = 'Queen'::text)
                                                        Rows Removed by Filter: 1
                                            ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=2)
                                                  Index Cond: (id = ci.role_id)
                                                  Filter: ((role)::text = 'actress'::text)
                                      ->  Index Scan using name_pkey on name n  (cost=0.43..2.31 rows=1 width=19) (actual time=0.006..0.006 rows=1 loops=2)
                                            Index Cond: (id = ci.person_id)
                                            Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.41 rows=25 width=8) (actual time=0.005..0.037 rows=163 loops=2)
                                      Index Cond: (person_id = ci.person_id)
                          ->  Index Scan using info_type_pkey on info_type it3  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=326)
                                Index Cond: (id = pi.info_type_id)
                                Filter: ((info)::text = 'trivia'::text)
                                Rows Removed by Filter: 1
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.79 rows=5 width=8) (actual time=0.002..0.005 rows=22 loops=108)
                          Index Cond: (movie_id = mk.movie_id)
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=2376)
                    Index Cond: (id = mc.company_id)
                    Filter: ((country_code)::text = '[us]'::text)
                    Rows Removed by Filter: 1
        ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.87 rows=2 width=4) (actual time=0.001..0.002 rows=3 loops=540)
              Index Cond: (person_id = pi.person_id)
              Heap Fetches: 1620
Planning time: 75.864 ms
Execution time: 73.980 ms
