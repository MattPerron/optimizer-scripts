Aggregate
  ->  Nested Loop
        ->  Nested Loop
              Join Filter: (t.id = mc.movie_id)
              ->  Nested Loop
                    ->  Nested Loop
                          Join Filter: (t.id = mi.movie_id)
                          ->  Nested Loop
                                ->  Nested Loop
                                      Join Filter: (n.id = pi.person_id)
                                      ->  Nested Loop
                                            ->  Nested Loop
                                                  ->  Nested Loop
                                                        ->  Nested Loop
                                                              ->  Nested Loop
                                                                    Join Filter: (t.id = ci.movie_id)
                                                                    ->  Hash Join
                                                                          Hash Cond: (mk.keyword_id = k.id)
                                                                          ->  Nested Loop
                                                                                ->  Nested Loop
                                                                                      ->  Nested Loop
                                                                                            ->  Hash Join
                                                                                                  Hash Cond: (cc.status_id = cct2.id)
                                                                                                  ->  Seq Scan on complete_cast cc
                                                                                                  ->  Hash
                                                                                                        ->  Seq Scan on comp_cast_type cct2
                                                                                                              Filter: ((kind)::text = 'complete+verified'::text)
                                                                                            ->  Index Scan using title_pkey on title t
                                                                                                  Index Cond: (id = cc.movie_id)
                                                                                                  Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                                      ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1
                                                                                            Index Cond: (id = cc.subject_id)
                                                                                            Filter: ((kind)::text = 'cast'::text)
                                                                                ->  Index Scan using movie_id_movie_keyword on movie_keyword mk
                                                                                      Index Cond: (movie_id = t.id)
                                                                          ->  Hash
                                                                                ->  Seq Scan on keyword k
                                                                                      Filter: (keyword = 'computer-animation'::text)
                                                                    ->  Index Scan using movie_id_cast_info on cast_info ci
                                                                          Index Cond: (movie_id = mk.movie_id)
                                                                          Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                              ->  Index Scan using char_name_pkey on char_name chn
                                                                    Index Cond: (id = ci.person_role_id)
                                                        ->  Index Only Scan using person_id_aka_name on aka_name an
                                                              Index Cond: (person_id = ci.person_id)
                                                  ->  Index Scan using role_type_pkey on role_type rt
                                                        Index Cond: (id = ci.role_id)
                                                        Filter: ((role)::text = 'actress'::text)
                                            ->  Index Scan using name_pkey on name n
                                                  Index Cond: (id = ci.person_id)
                                                  Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                      ->  Index Scan using person_id_person_info on person_info pi
                                            Index Cond: (person_id = an.person_id)
                                ->  Index Scan using info_type_pkey on info_type it3
                                      Index Cond: (id = pi.info_type_id)
                                      Filter: ((info)::text = 'trivia'::text)
                          ->  Index Scan using movie_id_movie_info on movie_info mi
                                Index Cond: (movie_id = mk.movie_id)
                                Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%200%'::text) OR (info ~~ 'USA:%200%'::text)))
                    ->  Index Scan using info_type_pkey on info_type it
                          Index Cond: (id = mi.info_type_id)
                          Filter: ((info)::text = 'release dates'::text)
              ->  Index Scan using movie_id_movie_companies on movie_companies mc
                    Index Cond: (movie_id = mk.movie_id)
        ->  Index Scan using company_name_pkey on company_name cn
              Index Cond: (id = mc.company_id)
              Filter: ((country_code)::text = '[us]'::text)
