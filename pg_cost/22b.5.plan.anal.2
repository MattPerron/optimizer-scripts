Aggregate  (cost=134731.07..134731.08 rows=1 width=96) (actual time=1000.222..1000.222 rows=1 loops=1)
  ->  Nested Loop  (cost=79689.12..134731.07 rows=1 width=41) (actual time=666.803..1000.189 rows=31 loops=1)
        ->  Nested Loop  (cost=79688.99..134730.91 rows=1 width=45) (actual time=666.789..1000.124 rows=31 loops=1)
              ->  Nested Loop  (cost=79688.57..133938.95 rows=1785 width=49) (actual time=660.663..994.384 rows=2606 loops=1)
                    Join Filter: (t.id = mk.movie_id)
                    ->  Hash Join  (cost=79688.14..133675.62 rows=138 width=61) (actual time=660.648..993.106 rows=91 loops=1)
                          Hash Cond: (mi.info_type_id = it1.id)
                          ->  Nested Loop  (cost=79685.72..133608.89 rows=5125 width=65) (actual time=660.608..993.023 rows=124 loops=1)
                                Join Filter: (t.id = mi.movie_id)
                                ->  Nested Loop  (cost=79685.28..133346.86 rows=125 width=57) (actual time=508.849..986.925 rows=347 loops=1)
                                      ->  Nested Loop  (cost=79684.86..133108.69 rows=488 width=42) (actual time=508.832..985.264 rows=488 loops=1)
                                            Join Filter: (t.id = mc.movie_id)
                                            ->  Hash Join  (cost=79684.43..113088.32 rows=31112 width=30) (actual time=490.015..893.944 rows=31112 loops=1)
                                                  Hash Cond: (mi_idx.info_type_id = it2.id)
                                                  ->  Hash Join  (cost=79682.01..111500.14 rows=126391 width=34) (actual time=489.993..881.779 rows=126391 loops=1)
                                                        Hash Cond: (mi_idx.movie_id = t.id)
                                                        ->  Seq Scan on movie_info_idx mi_idx  (cost=0.00..25185.44 rows=1172832 width=13) (actual time=0.006..244.365 rows=1172832 loops=1)
                                                              Filter: (info < '7.0'::text)
                                                              Rows Removed by Filter: 207203
                                                        ->  Hash  (cost=73660.56..73660.56 rows=481716 width=21) (actual time=488.512..488.512 rows=481716 loops=1)
                                                              Buckets: 524288  Batches: 1  Memory Usage: 29879kB
                                                              ->  Hash Join  (cost=1.11..73660.56 rows=481716 width=21) (actual time=0.024..393.524 rows=481716 loops=1)
                                                                    Hash Cond: (t.kind_id = kt.id)
                                                                    ->  Seq Scan on title t  (cost=0.00..67601.90 rows=533369 width=25) (actual time=0.005..305.515 rows=533369 loops=1)
                                                                          Filter: (production_year > 2009)
                                                                          Rows Removed by Filter: 1994943
                                                                    ->  Hash  (cost=1.09..1.09 rows=2 width=4) (actual time=0.007..0.007 rows=2 loops=1)
                                                                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                          ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=1)
                                                                                Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                                Rows Removed by Filter: 5
                                                  ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                              Filter: ((info)::text = 'rating'::text)
                                                              Rows Removed by Filter: 112
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.63 rows=1 width=12) (actual time=0.003..0.003 rows=0 loops=31112)
                                                  Index Cond: (movie_id = mi_idx.movie_id)
                                                  Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                                  Rows Removed by Filter: 3
                                      ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=488)
                                            Index Cond: (id = mc.company_id)
                                            Filter: ((country_code)::text <> '[us]'::text)
                                            Rows Removed by Filter: 0
                                ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.07 rows=2 width=8) (actual time=0.016..0.017 rows=0 loops=347)
                                      Index Cond: (movie_id = mi_idx.movie_id)
                                      Filter: (info = ANY ('{Germany,German,USA,American}'::text[]))
                                      Rows Removed by Filter: 28
                          ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.020..0.020 rows=1 loops=1)
                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.014 rows=1 loops=1)
                                      Filter: ((info)::text = 'countries'::text)
                                      Rows Removed by Filter: 112
                    ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.35 rows=45 width=8) (actual time=0.004..0.009 rows=29 loops=91)
                          Index Cond: (movie_id = mi_idx.movie_id)
              ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=2606)
                    Index Cond: (id = mk.keyword_id)
                    Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                    Rows Removed by Filter: 1
        ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=31)
              Index Cond: (id = mc.company_type_id)
              Heap Fetches: 31
Planning time: 20.235 ms
Execution time: 1000.483 ms
