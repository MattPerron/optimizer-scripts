Aggregate  (cost=150492.78..150492.79 rows=1 width=64) (actual time=933.253..933.253 rows=1 loops=1)
  ->  Hash Join  (cost=2968.84..150492.77 rows=1 width=22) (actual time=15.969..932.209 rows=4115 loops=1)
        Hash Cond: (mi.info_type_id = it1.id)
        ->  Nested Loop  (cost=2966.42..150490.06 rows=23 width=26) (actual time=15.953..931.329 rows=4709 loops=1)
              Join Filter: (t.id = mi.movie_id)
              ->  Hash Join  (cost=2965.98..150469.17 rows=11 width=34) (actual time=15.939..760.273 rows=5949 loops=1)
                    Hash Cond: (mi_idx.info_type_id = it2.id)
                    ->  Nested Loop  (cost=2963.56..150311.19 rows=12398 width=38) (actual time=15.927..758.149 rows=17892 loops=1)
                          Join Filter: (t.id = mi_idx.movie_id)
                          ->  Hash Join  (cost=2963.13..148038.03 rows=4246 width=25) (actual time=15.921..734.954 rows=8073 loops=1)
                                Hash Cond: (t.kind_id = kt.id)
                                ->  Nested Loop  (cost=2962.02..147868.16 rows=14860 width=29) (actual time=15.115..733.323 rows=9739 loops=1)
                                      ->  Hash Join  (cost=2961.59..129769.20 rows=37091 width=4) (actual time=15.106..658.656 rows=37091 loops=1)
                                            Hash Cond: (mk.keyword_id = k.id)
                                            ->  Seq Scan on movie_keyword mk  (cost=0.00..69693.30 rows=4523930 width=8) (actual time=0.003..299.132 rows=4523930 loops=1)
                                            ->  Hash  (cost=2961.55..2961.55 rows=3 width=4) (actual time=15.081..15.081 rows=3 loops=1)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                  ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=3 width=4) (actual time=0.723..15.080 rows=3 loops=1)
                                                        Filter: ((keyword IS NOT NULL) AND (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[])))
                                                        Rows Removed by Filter: 134167
                                      ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=37091)
                                            Index Cond: (id = mk.movie_id)
                                            Filter: (production_year > 2005)
                                            Rows Removed by Filter: 1
                                ->  Hash  (cost=1.09..1.09 rows=2 width=4) (actual time=0.004..0.004 rows=2 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                      ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.002..0.003 rows=2 loops=1)
                                            Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                            Rows Removed by Filter: 5
                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.002..0.002 rows=2 loops=8073)
                                Index Cond: (movie_id = mk.movie_id)
                                Filter: (info < '8.5'::text)
                                Rows Removed by Filter: 0
                    ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                          ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                Filter: ((info)::text = 'rating'::text)
                                Rows Removed by Filter: 112
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.024..0.028 rows=1 loops=5949)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                    Rows Removed by Filter: 71
        ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=1)
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.006..0.011 rows=1 loops=1)
                    Filter: ((info)::text = 'countries'::text)
                    Rows Removed by Filter: 112
Planning time: 2.745 ms
Execution time: 933.307 ms
