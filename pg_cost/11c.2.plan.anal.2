Aggregate  (cost=19989.20..19989.21 rows=1 width=96) (actual time=453.927..453.928 rows=1 loops=1)
  ->  Nested Loop  (cost=9905.45..19989.19 rows=1 width=60) (actual time=52.644..450.877 rows=6946 loops=1)
        Join Filter: (ml.movie_id = t.id)
        ->  Nested Loop  (cost=9905.02..19988.69 rows=1 width=55) (actual time=52.635..438.829 rows=6946 loops=1)
              ->  Hash Join  (cost=9904.88..19988.53 rows=1 width=59) (actual time=52.629..431.499 rows=6946 loops=1)
                    Hash Cond: (mk.keyword_id = k.id)
                    ->  Nested Loop  (cost=7111.00..16833.89 rows=28576 width=63) (actual time=36.776..358.493 rows=780776 loops=1)
                          Join Filter: (ml.movie_id = mk.movie_id)
                          ->  Hash Join  (cost=7110.57..15471.09 rows=720 width=55) (actual time=36.763..122.108 rows=8393 loops=1)
                                Hash Cond: (mc.company_type_id = ct.id)
                                ->  Hash Join  (cost=7109.48..15460.02 rows=960 width=59) (actual time=36.744..120.279 rows=8402 loops=1)
                                      Hash Cond: (mc.company_id = cn.id)
                                      ->  Merge Join  (cost=0.92..7024.71 rows=105089 width=44) (actual time=0.023..77.596 rows=105089 loops=1)
                                            Merge Cond: (ml.movie_id = mc.movie_id)
                                            ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.011..4.185 rows=29997 loops=1)
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..131253.73 rows=1337140 width=36) (actual time=0.010..54.233 rows=148092 loops=1)
                                                  Filter: (note IS NOT NULL)
                                                  Rows Removed by Filter: 116440
                                      ->  Hash  (cost=7107.45..7107.45 rows=89 width=23) (actual time=33.662..33.662 rows=89 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 14kB
                                            ->  Seq Scan on company_name cn  (cost=0.00..7107.45 rows=89 width=23) (actual time=0.168..33.642 rows=89 loops=1)
                                                  Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '20th Century Fox%'::text) OR (name ~~ 'Twentieth Century Fox%'::text)))
                                                  Rows Removed by Filter: 234908
                                ->  Hash  (cost=1.05..1.05 rows=3 width=4) (actual time=0.009..0.009 rows=3 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                      ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=3 width=4) (actual time=0.007..0.008 rows=3 loops=1)
                                            Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                                            Rows Removed by Filter: 1
                          ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.33 rows=45 width=8) (actual time=0.003..0.014 rows=93 loops=8393)
                                Index Cond: (movie_id = mc.movie_id)
                    ->  Hash  (cost=2793.84..2793.84 rows=3 width=4) (actual time=14.778..14.778 rows=3 loops=1)
                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                          ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.642..14.776 rows=3 loops=1)
                                Filter: (keyword = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                Rows Removed by Filter: 134167
              ->  Index Only Scan using link_type_pkey on link_type lt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6946)
                    Index Cond: (id = ml.link_type_id)
                    Heap Fetches: 6946
        ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=6946)
              Index Cond: (id = mk.movie_id)
              Filter: (production_year > 1950)
Planning time: 3.348 ms
Execution time: 454.009 ms
