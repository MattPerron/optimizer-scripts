Aggregate  (cost=6839.13..6839.14 rows=1 width=96) (actual time=37.415..37.415 rows=1 loops=1)
  ->  Nested Loop  (cost=920.48..6839.12 rows=1 width=48) (actual time=27.172..37.401 rows=14 loops=1)
        ->  Nested Loop  (cost=920.06..6838.66 rows=1 width=52) (actual time=27.143..37.294 rows=56 loops=1)
              Join Filter: (ml.movie_id = mk.movie_id)
              ->  Nested Loop  (cost=919.63..6836.76 rows=1 width=60) (actual time=27.135..37.248 rows=14 loops=1)
                    Join Filter: (ml.movie_id = t.id)
                    ->  Nested Loop  (cost=919.20..6663.55 rows=289 width=39) (actual time=5.694..36.416 rows=450 loops=1)
                          ->  Hash Join  (cost=918.78..6104.00 rows=1226 width=24) (actual time=5.258..33.087 rows=1793 loops=1)
                                Hash Cond: (mc.company_type_id = ct.id)
                                ->  Merge Join  (cost=917.71..6051.92 rows=4903 width=28) (actual time=5.246..32.710 rows=2077 loops=1)
                                      Merge Cond: (mc.movie_id = ml.movie_id)
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..131253.73 rows=1278212 width=12) (actual time=0.009..24.201 rows=49142 loops=1)
                                            Filter: (note IS NULL)
                                            Rows Removed by Filter: 50735
                                      ->  Sort  (cost=917.28..921.45 rows=1666 width=16) (actual time=5.178..5.311 rows=2242 loops=1)
                                            Sort Key: ml.movie_id
                                            Sort Method: quicksort  Memory: 103kB
                                            ->  Hash Join  (cost=1.24..828.13 rows=1666 width=16) (actual time=0.026..4.965 rows=1158 loops=1)
                                                  Hash Cond: (ml.link_type_id = lt.id)
                                                  ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=8) (actual time=0.005..2.199 rows=29997 loops=1)
                                                  ->  Hash  (cost=1.23..1.23 rows=1 width=16) (actual time=0.006..0.006 rows=1 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=16) (actual time=0.003..0.006 rows=1 loops=1)
                                                              Filter: ((link)::text ~~ '%follows%'::text)
                                                              Rows Removed by Filter: 17
                                ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                      ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                            Filter: ((kind)::text = 'production companies'::text)
                                            Rows Removed by Filter: 3
                          ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1793)
                                Index Cond: (id = mc.company_id)
                                Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                                Rows Removed by Filter: 1
                    ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=450)
                          Index Cond: (id = mc.movie_id)
                          Filter: ((title ~~ '%Money%'::text) AND (production_year = 1998))
                          Rows Removed by Filter: 1
              ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=45 width=8) (actual time=0.002..0.002 rows=4 loops=14)
                    Index Cond: (movie_id = mc.movie_id)
        ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=56)
              Index Cond: (id = mk.keyword_id)
              Filter: (keyword = 'sequel'::text)
              Rows Removed by Filter: 1
Planning time: 3.430 ms
Execution time: 37.491 ms
