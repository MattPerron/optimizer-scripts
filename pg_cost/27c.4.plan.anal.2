Aggregate  (cost=2849.87..2849.88 rows=1 width=96) (actual time=38.791..38.791 rows=1 loops=1)
  ->  Nested Loop  (cost=8.31..2849.86 rows=1 width=48) (actual time=2.706..38.558 rows=743 loops=1)
        ->  Nested Loop  (cost=7.89..2848.49 rows=3 width=33) (actual time=1.632..35.717 rows=1808 loops=1)
              Join Filter: (ml.movie_id = mi.movie_id)
              ->  Nested Loop  (cost=7.45..2846.63 rows=1 width=53) (actual time=1.615..31.540 rows=399 loops=1)
                    ->  Nested Loop  (cost=7.03..2367.95 rows=1085 width=57) (actual time=0.699..17.785 rows=9471 loops=1)
                          Join Filter: (ml.movie_id = mk.movie_id)
                          ->  Nested Loop  (cost=6.60..2323.30 rows=24 width=49) (actual time=0.693..13.852 rows=763 loops=1)
                                ->  Nested Loop  (cost=6.47..2308.36 rows=98 width=53) (actual time=0.691..13.065 rows=864 loops=1)
                                      Join Filter: (ml.movie_id = t.id)
                                      ->  Hash Join  (cost=6.04..2230.36 rows=130 width=32) (actual time=0.683..11.532 rows=864 loops=1)
                                            Hash Cond: (cc.subject_id = cct1.id)
                                            ->  Hash Join  (cost=4.98..2223.86 rows=522 width=36) (actual time=0.669..11.316 rows=1043 loops=1)
                                                  Hash Cond: (cc.status_id = cct2.id)
                                                  ->  Nested Loop  (cost=3.90..2211.94 rows=1043 width=40) (actual time=0.663..11.095 rows=1043 loops=1)
                                                        Join Filter: (ml.movie_id = mc.movie_id)
                                                        ->  Hash Join  (cost=3.47..1871.85 rows=257 width=28) (actual time=0.651..9.998 rows=257 loops=1)
                                                              Hash Cond: (ml.link_type_id = lt.id)
                                                              ->  Merge Join  (cost=2.22..1811.77 rows=4849 width=20) (actual time=0.029..9.603 rows=4849 loops=1)
                                                                    Merge Cond: (ml.movie_id = cc.movie_id)
                                                                    ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.006..4.034 rows=29997 loops=1)
                                                                    ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6340.80 rows=135086 width=12) (actual time=0.005..2.382 rows=9987 loops=1)
                                                              ->  Hash  (cost=1.23..1.23 rows=2 width=16) (actual time=0.007..0.007 rows=2 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=16) (actual time=0.003..0.006 rows=2 loops=1)
                                                                          Filter: ((link)::text ~~ '%follow%'::text)
                                                                          Rows Removed by Filter: 16
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=3 width=12) (actual time=0.003..0.003 rows=4 loops=257)
                                                              Index Cond: (movie_id = cc.movie_id)
                                                              Filter: (note IS NULL)
                                                              Rows Removed by Filter: 3
                                                  ->  Hash  (cost=1.05..1.05 rows=2 width=4) (actual time=0.003..0.003 rows=2 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=2 width=4) (actual time=0.002..0.002 rows=2 loops=1)
                                                              Filter: ((kind)::text ~~ 'complete%'::text)
                                                              Rows Removed by Filter: 2
                                            ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                  ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                        Filter: ((kind)::text = 'cast'::text)
                                                        Rows Removed by Filter: 3
                                      ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=864)
                                            Index Cond: (id = mc.movie_id)
                                            Filter: ((production_year >= 1950) AND (production_year <= 2010))
                                ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=864)
                                      Index Cond: (id = mc.company_type_id)
                                      Filter: ((kind)::text = 'production companies'::text)
                                      Rows Removed by Filter: 0
                          ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.30 rows=45 width=8) (actual time=0.002..0.003 rows=12 loops=763)
                                Index Cond: (movie_id = t.id)
                    ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=9471)
                          Index Cond: (id = mk.keyword_id)
                          Filter: (keyword = 'sequel'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.82 rows=3 width=4) (actual time=0.008..0.010 rows=5 loops=399)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
                    Rows Removed by Filter: 17
        ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.001..0.001 rows=0 loops=1808)
              Index Cond: (id = mc.company_id)
              Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
              Rows Removed by Filter: 1
Planning time: 45.543 ms
Execution time: 38.890 ms
