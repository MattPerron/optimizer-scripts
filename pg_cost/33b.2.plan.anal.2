Aggregate  (cost=9062.26..9062.27 rows=1 width=192) (actual time=18.556..18.557 rows=1 loops=1)
  ->  Nested Loop  (cost=5.21..9062.24 rows=1 width=82) (actual time=2.975..18.547 rows=4 loops=1)
        ->  Nested Loop  (cost=5.07..9062.06 rows=1 width=86) (actual time=2.914..18.535 rows=12 loops=1)
              ->  Nested Loop  (cost=4.94..9061.88 rows=1 width=90) (actual time=2.912..18.523 rows=12 loops=1)
                    ->  Nested Loop  (cost=4.52..9061.44 rows=1 width=75) (actual time=2.909..18.499 rows=12 loops=1)
                          Join Filter: (t2.id = mc2.movie_id)
                          ->  Nested Loop  (cost=4.09..9060.70 rows=1 width=83) (actual time=2.904..18.470 rows=3 loops=1)
                                ->  Nested Loop  (cost=3.95..9060.03 rows=4 width=87) (actual time=0.104..18.426 rows=36 loops=1)
                                      ->  Nested Loop  (cost=3.81..9055.88 rows=27 width=91) (actual time=0.101..18.385 rows=36 loops=1)
                                            Join Filter: (ml.movie_id = t1.id)
                                            ->  Nested Loop  (cost=3.38..9041.68 rows=27 width=82) (actual time=0.096..18.312 rows=36 loops=1)
                                                  Join Filter: (ml.movie_id = mi_idx1.movie_id)
                                                  ->  Nested Loop  (cost=2.96..9036.86 rows=9 width=69) (actual time=0.092..18.269 rows=12 loops=1)
                                                        ->  Nested Loop  (cost=2.54..8616.67 rows=943 width=54) (actual time=0.070..17.694 rows=284 loops=1)
                                                              ->  Nested Loop  (cost=2.11..7993.50 rows=157 width=46) (actual time=0.065..17.431 rows=50 loops=1)
                                                                    Join Filter: (ml.linked_movie_id = t2.id)
                                                                    ->  Nested Loop  (cost=1.68..5598.41 rows=3311 width=21) (actual time=0.041..11.278 rows=2944 loops=1)
                                                                          ->  Hash Join  (cost=1.25..828.15 rows=2315 width=8) (actual time=0.030..4.919 rows=2315 loops=1)
                                                                                Hash Cond: (ml.link_type_id = lt.id)
                                                                                ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=12) (actual time=0.009..2.140 rows=29997 loops=1)
                                                                                ->  Hash  (cost=1.23..1.23 rows=2 width=4) (actual time=0.008..0.008 rows=2 loops=1)
                                                                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=4) (actual time=0.004..0.007 rows=2 loops=1)
                                                                                            Filter: ((link)::text ~~ '%follow%'::text)
                                                                                            Rows Removed by Filter: 16
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=13) (actual time=0.002..0.002 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.0'::text)
                                                                                Rows Removed by Filter: 1
                                                                    ->  Index Scan using title_pkey on title t2  (cost=0.43..0.71 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2944)
                                                                          Index Cond: (id = mi_idx2.movie_id)
                                                                          Filter: (production_year = 2007)
                                                                          Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..3.92 rows=5 width=8) (actual time=0.003..0.004 rows=6 loops=50)
                                                                    Index Cond: (movie_id = ml.movie_id)
                                                        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=284)
                                                              Index Cond: (id = mc1.company_id)
                                                              Filter: ((country_code)::text = '[nl]'::text)
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..0.50 rows=3 width=13) (actual time=0.002..0.003 rows=3 loops=12)
                                                        Index Cond: (movie_id = mc1.movie_id)
                                            ->  Index Scan using title_pkey on title t1  (cost=0.43..0.51 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=36)
                                                  Index Cond: (id = mc1.movie_id)
                                      ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=36)
                                            Index Cond: (id = t1.kind_id)
                                            Filter: ((kind)::text = 'tv series'::text)
                                ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=36)
                                      Index Cond: (id = mi_idx2.info_type_id)
                                      Filter: ((info)::text = 'rating'::text)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.002..0.003 rows=4 loops=3)
                                Index Cond: (movie_id = mi_idx2.movie_id)
                    ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=12)
                          Index Cond: (id = mc2.company_id)
              ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=12)
                    Index Cond: (id = t2.kind_id)
                    Filter: ((kind)::text = 'tv series'::text)
        ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=12)
              Index Cond: (id = mi_idx1.info_type_id)
              Filter: ((info)::text = 'rating'::text)
              Rows Removed by Filter: 1
Planning time: 62.701 ms
Execution time: 18.673 ms
