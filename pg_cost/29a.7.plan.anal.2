Aggregate  (cost=71931.39..71931.40 rows=1 width=96) (actual time=110.092..110.092 rows=1 loops=1)
  ->  Nested Loop  (cost=6.46..71931.38 rows=1 width=48) (actual time=36.264..109.716 rows=1620 loops=1)
        ->  Nested Loop  (cost=6.04..71929.36 rows=1 width=52) (actual time=36.256..98.423 rows=7128 loops=1)
              Join Filter: (t.id = mc.movie_id)
              ->  Nested Loop  (cost=5.61..71924.51 rows=1 width=68) (actual time=36.247..95.797 rows=324 loops=1)
                    ->  Nested Loop  (cost=5.47..71924.32 rows=1 width=72) (actual time=36.244..95.455 rows=324 loops=1)
                          Join Filter: (t.id = mi.movie_id)
                          ->  Nested Loop  (cost=5.03..71881.31 rows=1 width=64) (actual time=36.219..80.324 rows=162 loops=1)
                                ->  Nested Loop  (cost=4.89..71881.13 rows=1 width=68) (actual time=36.206..79.878 rows=489 loops=1)
                                      Join Filter: (n.id = pi.person_id)
                                      ->  Nested Loop  (cost=4.46..71861.41 rows=1 width=76) (actual time=36.185..79.684 rows=3 loops=1)
                                            ->  Nested Loop  (cost=4.03..71859.11 rows=1 width=57) (actual time=36.174..79.666 rows=3 loops=1)
                                                  ->  Nested Loop  (cost=3.90..71858.78 rows=2 width=61) (actual time=36.167..79.656 rows=3 loops=1)
                                                        ->  Nested Loop  (cost=3.47..71855.86 rows=1 width=57) (actual time=36.155..79.640 rows=1 loops=1)
                                                              ->  Nested Loop  (cost=3.04..71769.57 rows=38 width=45) (actual time=36.006..79.470 rows=38 loops=1)
                                                                    Join Filter: (t.id = ci.movie_id)
                                                                    ->  Nested Loop  (cost=2.48..71723.24 rows=1 width=29) (actual time=35.992..79.164 rows=1 loops=1)
                                                                          ->  Nested Loop  (cost=2.06..71503.92 rows=108 width=33) (actual time=35.920..78.850 rows=108 loops=1)
                                                                                Join Filter: (t.id = mk.movie_id)
                                                                                ->  Nested Loop  (cost=1.62..71499.86 rows=1 width=25) (actual time=35.909..78.800 rows=1 loops=1)
                                                                                      ->  Nested Loop  (cost=1.49..71499.69 rows=1 width=29) (actual time=35.902..78.793 rows=1 loops=1)
                                                                                            ->  Hash Join  (cost=1.06..3488.66 rows=24592 width=8) (actual time=0.025..22.092 rows=24592 loops=1)
                                                                                                  Hash Cond: (cc.status_id = cct2.id)
                                                                                                  ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.012..9.120 rows=135086 loops=1)
                                                                                                  ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                                        ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                                                              Filter: ((kind)::text = 'complete+verified'::text)
                                                                                                              Rows Removed by Filter: 3
                                                                                            ->  Index Scan using title_pkey on title t  (cost=0.43..2.77 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=24592)
                                                                                                  Index Cond: (id = cc.movie_id)
                                                                                                  Filter: ((production_year >= 2000) AND (production_year <= 2010) AND (title = 'Shrek 2'::text))
                                                                                                  Rows Removed by Filter: 1
                                                                                      ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                                                                            Index Cond: (id = cc.subject_id)
                                                                                            Filter: ((kind)::text = 'cast'::text)
                                                                                ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..3.50 rows=45 width=8) (actual time=0.009..0.029 rows=108 loops=1)
                                                                                      Index Cond: (movie_id = cc.movie_id)
                                                                          ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..2.02 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=108)
                                                                                Index Cond: (id = mk.keyword_id)
                                                                                Filter: (keyword = 'computer-animation'::text)
                                                                                Rows Removed by Filter: 1
                                                                    ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..46.33 rows=1 width=16) (actual time=0.013..0.298 rows=38 loops=1)
                                                                          Index Cond: (movie_id = mk.movie_id)
                                                                          Filter: (note = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                          Rows Removed by Filter: 191
                                                              ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.22 rows=1 width=20) (actual time=0.004..0.004 rows=0 loops=38)
                                                                    Index Cond: (id = ci.person_role_id)
                                                                    Filter: (name = 'Queen'::text)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.90 rows=2 width=4) (actual time=0.009..0.013 rows=3 loops=1)
                                                              Index Cond: (person_id = ci.person_id)
                                                              Heap Fetches: 3
                                                  ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=3)
                                                        Index Cond: (id = ci.role_id)
                                                        Filter: ((role)::text = 'actress'::text)
                                            ->  Index Scan using name_pkey on name n  (cost=0.43..2.31 rows=1 width=19) (actual time=0.005..0.005 rows=1 loops=3)
                                                  Index Cond: (id = ci.person_id)
                                                  Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                      ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.40 rows=25 width=8) (actual time=0.008..0.036 rows=163 loops=3)
                                            Index Cond: (person_id = an.person_id)
                                ->  Index Scan using info_type_pkey on info_type it3  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=489)
                                      Index Cond: (id = pi.info_type_id)
                                      Filter: ((info)::text = 'trivia'::text)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..43.00 rows=1 width=8) (actual time=0.009..0.093 rows=2 loops=162)
                                Index Cond: (movie_id = mk.movie_id)
                                Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%200%'::text) OR (info ~~ 'USA:%200%'::text)))
                                Rows Removed by Filter: 455
                    ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=324)
                          Index Cond: (id = mi.info_type_id)
                          Filter: ((info)::text = 'release dates'::text)
              ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.79 rows=5 width=8) (actual time=0.002..0.005 rows=22 loops=324)
                    Index Cond: (movie_id = mk.movie_id)
        ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=7128)
              Index Cond: (id = mc.company_id)
              Filter: ((country_code)::text = '[us]'::text)
              Rows Removed by Filter: 1
Planning time: 76.666 ms
Execution time: 110.256 ms
