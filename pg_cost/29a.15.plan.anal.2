Aggregate  (cost=81128.23..81128.24 rows=1 width=96) (actual time=105.553..105.553 rows=1 loops=1)
  ->  Nested Loop  (cost=2636.74..81128.22 rows=1 width=48) (actual time=47.442..105.175 rows=1620 loops=1)
        Join Filter: (ci.person_id = n.id)
        ->  Hash Join  (cost=2636.31..81033.63 rows=43 width=45) (actual time=47.430..102.596 rows=1620 loops=1)
              Hash Cond: (pi.info_type_id = it3.id)
              ->  Nested Loop  (cost=2633.89..80969.85 rows=4890 width=49) (actual time=47.394..102.016 rows=4890 loops=1)
                    ->  Hash Join  (cost=2633.46..80379.96 rows=30 width=41) (actual time=47.383..100.585 rows=30 loops=1)
                          Hash Cond: (mi.info_type_id = it.id)
                          ->  Nested Loop  (cost=2631.03..80377.15 rows=30 width=45) (actual time=47.369..100.563 rows=30 loops=1)
                                ->  Hash Join  (cost=2630.60..80019.60 rows=160 width=33) (actual time=47.347..100.241 rows=160 loops=1)
                                      Hash Cond: (mk.keyword_id = k.id)
                                      ->  Nested Loop  (cost=4.46..77175.30 rows=17280 width=37) (actual time=38.164..89.862 rows=17280 loops=1)
                                            Join Filter: (t.id = mk.movie_id)
                                            ->  Nested Loop  (cost=4.03..76610.15 rows=160 width=53) (actual time=38.140..84.929 rows=160 loops=1)
                                                  ->  Nested Loop  (cost=3.90..76507.29 rows=660 width=57) (actual time=36.375..84.281 rows=660 loops=1)
                                                        ->  Nested Loop  (cost=3.47..75399.16 rows=380 width=53) (actual time=36.230..83.315 rows=380 loops=1)
                                                              ->  Nested Loop  (cost=3.05..72013.18 rows=1672 width=57) (actual time=36.221..80.436 rows=1672 loops=1)
                                                                    Join Filter: (t.id = mc.movie_id)
                                                                    ->  Nested Loop  (cost=2.62..71640.46 rows=76 width=49) (actual time=36.211..79.731 rows=76 loops=1)
                                                                          Join Filter: (t.id = ci.movie_id)
                                                                          ->  Nested Loop  (cost=2.06..71545.69 rows=2 width=33) (actual time=36.196..79.235 rows=2 loops=1)
                                                                                ->  Nested Loop  (cost=1.93..71545.37 rows=2 width=37) (actual time=36.190..79.223 rows=2 loops=1)
                                                                                      Join Filter: (t.id = mi.movie_id)
                                                                                      ->  Nested Loop  (cost=1.49..71499.69 rows=1 width=29) (actual time=36.166..79.065 rows=1 loops=1)
                                                                                            ->  Hash Join  (cost=1.06..3488.66 rows=24592 width=8) (actual time=0.014..22.198 rows=24592 loops=1)
                                                                                                  Hash Cond: (cc.status_id = cct2.id)
                                                                                                  ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.006..9.173 rows=135086 loops=1)
                                                                                                  ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                                                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                                        ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                                                                              Filter: ((kind)::text = 'complete+verified'::text)
                                                                                                              Rows Removed by Filter: 3
                                                                                            ->  Index Scan using title_pkey on title t  (cost=0.43..2.77 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=24592)
                                                                                                  Index Cond: (id = cc.movie_id)
                                                                                                  Filter: ((production_year >= 2000) AND (production_year <= 2010) AND (title = 'Shrek 2'::text))
                                                                                                  Rows Removed by Filter: 1
                                                                                      ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..45.67 rows=1 width=8) (actual time=0.022..0.153 rows=2 loops=1)
                                                                                            Index Cond: (movie_id = cc.movie_id)
                                                                                            Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%200%'::text) OR (info ~~ 'USA:%200%'::text)))
                                                                                            Rows Removed by Filter: 455
                                                                                ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=2)
                                                                                      Index Cond: (id = cc.subject_id)
                                                                                      Filter: ((kind)::text = 'cast'::text)
                                                                          ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.37 rows=1 width=16) (actual time=0.010..0.239 rows=38 loops=2)
                                                                                Index Cond: (movie_id = mi.movie_id)
                                                                                Filter: (note = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                Rows Removed by Filter: 191
                                                                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.84 rows=5 width=8) (actual time=0.002..0.005 rows=22 loops=76)
                                                                          Index Cond: (movie_id = ci.movie_id)
                                                              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=1672)
                                                                    Index Cond: (id = mc.company_id)
                                                                    Filter: ((country_code)::text = '[us]'::text)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.90 rows=2 width=4) (actual time=0.002..0.002 rows=2 loops=380)
                                                              Index Cond: (person_id = ci.person_id)
                                                              Heap Fetches: 660
                                                  ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=660)
                                                        Index Cond: (id = ci.role_id)
                                                        Filter: ((role)::text = 'actress'::text)
                                                        Rows Removed by Filter: 1
                                            ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..2.97 rows=45 width=8) (actual time=0.003..0.015 rows=108 loops=160)
                                                  Index Cond: (movie_id = mc.movie_id)
                                      ->  Hash  (cost=2626.12..2626.12 rows=1 width=4) (actual time=9.161..9.161 rows=1 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                            ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.036..9.160 rows=1 loops=1)
                                                  Filter: (keyword = 'computer-animation'::text)
                                                  Rows Removed by Filter: 134169
                                ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.22 rows=1 width=20) (actual time=0.002..0.002 rows=0 loops=160)
                                      Index Cond: (id = ci.person_role_id)
                                      Filter: (name = 'Queen'::text)
                                      Rows Removed by Filter: 1
                          ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.004..0.009 rows=1 loops=1)
                                      Filter: ((info)::text = 'release dates'::text)
                                      Rows Removed by Filter: 112
                    ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.41 rows=25 width=8) (actual time=0.002..0.027 rows=163 loops=30)
                          Index Cond: (person_id = ci.person_id)
              ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.021..0.021 rows=1 loops=1)
                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                    ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.019 rows=1 loops=1)
                          Filter: ((info)::text = 'trivia'::text)
                          Rows Removed by Filter: 112
        ->  Index Scan using name_pkey on name n  (cost=0.43..2.19 rows=1 width=19) (actual time=0.001..0.001 rows=1 loops=1620)
              Index Cond: (id = pi.person_id)
              Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
Planning time: 75.796 ms
Execution time: 105.708 ms
