Aggregate  (cost=134677.14..134677.15 rows=1 width=96) (actual time=1007.951..1007.951 rows=1 loops=1)
  ->  Nested Loop  (cost=79687.80..134677.14 rows=1 width=41) (actual time=670.478..1007.918 rows=31 loops=1)
        ->  Nested Loop  (cost=79687.66..134676.95 rows=1 width=45) (actual time=670.466..1007.850 rows=34 loops=1)
              Join Filter: (t.id = mi.movie_id)
              ->  Hash Join  (cost=79687.22..134665.86 rows=7 width=57) (actual time=662.770..1006.605 rows=50 loops=1)
                    Hash Cond: (mc.company_type_id = ct.id)
                    ->  Nested Loop  (cost=79686.13..134634.60 rows=2900 width=61) (actual time=662.755..1006.566 rows=50 loops=1)
                          ->  Nested Loop  (cost=79685.71..134009.01 rows=1410 width=65) (actual time=509.898..997.092 rows=4583 loops=1)
                                Join Filter: (t.id = mk.movie_id)
                                ->  Nested Loop  (cost=79685.28..133346.86 rows=347 width=57) (actual time=509.883..994.405 rows=347 loops=1)
                                      ->  Nested Loop  (cost=79684.86..133108.69 rows=488 width=42) (actual time=509.866..992.771 rows=488 loops=1)
                                            Join Filter: (t.id = mc.movie_id)
                                            ->  Hash Join  (cost=79684.43..113088.32 rows=31112 width=30) (actual time=491.123..901.851 rows=31112 loops=1)
                                                  Hash Cond: (mi_idx.info_type_id = it2.id)
                                                  ->  Hash Join  (cost=79682.01..111500.14 rows=126391 width=34) (actual time=491.104..889.156 rows=126391 loops=1)
                                                        Hash Cond: (mi_idx.movie_id = t.id)
                                                        ->  Seq Scan on movie_info_idx mi_idx  (cost=0.00..25185.44 rows=1172832 width=13) (actual time=0.005..245.238 rows=1172832 loops=1)
                                                              Filter: (info < '7.0'::text)
                                                              Rows Removed by Filter: 207203
                                                        ->  Hash  (cost=73660.56..73660.56 rows=481716 width=21) (actual time=489.746..489.746 rows=481716 loops=1)
                                                              Buckets: 524288  Batches: 1  Memory Usage: 29879kB
                                                              ->  Hash Join  (cost=1.11..73660.56 rows=481716 width=21) (actual time=0.023..394.387 rows=481716 loops=1)
                                                                    Hash Cond: (t.kind_id = kt.id)
                                                                    ->  Seq Scan on title t  (cost=0.00..67601.90 rows=533369 width=25) (actual time=0.005..306.150 rows=533369 loops=1)
                                                                          Filter: (production_year > 2009)
                                                                          Rows Removed by Filter: 1994943
                                                                    ->  Hash  (cost=1.09..1.09 rows=2 width=4) (actual time=0.007..0.007 rows=2 loops=1)
                                                                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                          ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=1)
                                                                                Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                                Rows Removed by Filter: 5
                                                  ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                              Filter: ((info)::text = 'rating'::text)
                                                              Rows Removed by Filter: 112
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.63 rows=1 width=12) (actual time=0.003..0.003 rows=0 loops=31112)
                                                  Index Cond: (movie_id = mi_idx.movie_id)
                                                  Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                                  Rows Removed by Filter: 3
                                      ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=488)
                                            Index Cond: (id = mc.company_id)
                                            Filter: ((country_code)::text <> '[us]'::text)
                                            Rows Removed by Filter: 0
                                ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.35 rows=45 width=8) (actual time=0.003..0.005 rows=13 loops=347)
                                      Index Cond: (movie_id = mi_idx.movie_id)
                          ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=4583)
                                Index Cond: (id = mk.keyword_id)
                                Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                Rows Removed by Filter: 1
                    ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.009..0.009 rows=4 loops=1)
                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                          ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.004..0.005 rows=4 loops=1)
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=2 width=8) (actual time=0.023..0.024 rows=1 loops=50)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (info = ANY ('{Germany,German,USA,American}'::text[]))
                    Rows Removed by Filter: 53
        ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=34)
              Index Cond: (id = mi.info_type_id)
              Filter: ((info)::text = 'countries'::text)
              Rows Removed by Filter: 0
Planning time: 19.459 ms
Execution time: 1008.133 ms
