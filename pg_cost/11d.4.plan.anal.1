Aggregate  (cost=32439.15..32439.16 rows=1 width=96) (actual time=163.823..163.823 rows=1 loops=1)
  ->  Hash Join  (cost=2798.64..32438.00 rows=154 width=60) (actual time=14.953..158.491 rows=14899 loops=1)
        Hash Cond: (mc.company_type_id = ct.id)
        ->  Nested Loop  (cost=2797.56..31968.93 rows=44970 width=64) (actual time=14.940..155.809 rows=15493 loops=1)
              ->  Nested Loop  (cost=2797.14..25642.39 rows=14031 width=49) (actual time=14.933..134.072 rows=15510 loops=1)
                    Join Filter: (ml.movie_id = mc.movie_id)
                    ->  Nested Loop  (cost=2796.71..24878.93 rows=1321 width=29) (actual time=14.925..126.514 rows=1460 loops=1)
                          Join Filter: (ml.movie_id = t.id)
                          ->  Hash Join  (cost=2796.28..24148.25 rows=1460 width=8) (actual time=14.913..123.881 rows=1460 loops=1)
                                Hash Cond: (ml.link_type_id = lt.id)
                                ->  Hash Join  (cost=2794.87..24129.13 rows=1460 width=12) (actual time=14.902..123.561 rows=1460 loops=1)
                                      Hash Cond: (mk.keyword_id = k.id)
                                      ->  Merge Join  (cost=1.00..17696.85 rows=288192 width=16) (actual time=0.015..90.812 rows=288192 loops=1)
                                            Merge Cond: (ml.movie_id = mk.movie_id)
                                            ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.007..3.950 rows=29997 loops=1)
                                            ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..141990.43 rows=4523930 width=8) (actual time=0.006..41.968 rows=360976 loops=1)
                                      ->  Hash  (cost=2793.84..2793.84 rows=3 width=4) (actual time=14.127..14.127 rows=3 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                            ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.615..14.126 rows=3 loops=1)
                                                  Filter: (keyword = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                                  Rows Removed by Filter: 134167
                                ->  Hash  (cost=1.18..1.18 rows=18 width=4) (actual time=0.007..0.007 rows=18 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                      ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=4) (actual time=0.002..0.004 rows=18 loops=1)
                          ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=1460)
                                Index Cond: (id = mk.movie_id)
                                Filter: (production_year > 1950)
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=36) (actual time=0.002..0.004 rows=11 loops=1460)
                          Index Cond: (movie_id = mk.movie_id)
                          Filter: (note IS NOT NULL)
                          Rows Removed by Filter: 2
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=15510)
                    Index Cond: (id = mc.company_id)
                    Filter: ((country_code)::text <> '[pl]'::text)
                    Rows Removed by Filter: 0
        ->  Hash  (cost=1.05..1.05 rows=3 width=4) (actual time=0.008..0.008 rows=3 loops=1)
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=3 width=4) (actual time=0.005..0.006 rows=3 loops=1)
                    Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                    Rows Removed by Filter: 1
Planning time: 3.214 ms
Execution time: 163.892 ms
