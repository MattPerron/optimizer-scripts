Aggregate  (cost=162748.33..162749.33 rows=1 width=96) (actual time=126.075..126.075 rows=1 loops=1)
  ->  Nested Loop  (cost=157919.00..162748.33 rows=1 width=38) (actual time=46.070..126.030 rows=93 loops=1)
        ->  Nested Loop  (cost=157919.00..162745.00 rows=1 width=42) (actual time=46.067..125.941 rows=93 loops=1)
              ->  Nested Loop  (cost=157919.00..162741.00 rows=1 width=46) (actual time=46.065..125.764 rows=180 loops=1)
                    ->  Nested Loop  (cost=157919.00..162735.00 rows=1 width=54) (actual time=46.061..125.389 rows=191 loops=1)
                          ->  Hash Join  (cost=157919.00..162733.00 rows=1 width=42) (actual time=45.800..116.193 rows=7981 loops=1)
                                Hash Cond: (mi_idx.info_type_id = it2.id)
                                ->  Nested Loop  (cost=157805.00..162491.00 rows=129 width=46) (actual time=45.210..113.810 rows=17348 loops=1)
                                      ->  Nested Loop  (cost=157805.00..162233.00 rows=129 width=50) (actual time=45.204..65.581 rows=17348 loops=1)
                                            ->  Nested Loop  (cost=157805.00..161261.00 rows=9 width=38) (actual time=45.198..50.337 rows=115 loops=1)
                                                  ->  Merge Join  (cost=157805.00..158237.00 rows=432 width=25) (actual time=45.178..45.589 rows=1441 loops=1)
                                                        Merge Cond: (t.kind_id = kt.id)
                                                        ->  Sort  (cost=157798.00..157798.00 rows=3024 width=29) (actual time=45.168..45.303 rows=1442 loops=1)
                                                              Sort Key: t.kind_id
                                                              Sort Method: quicksort  Memory: 344kB
                                                              ->  Nested Loop  (cost=0.00..157798.00 rows=3024 width=29) (actual time=0.088..44.512 rows=3024 loops=1)
                                                                    ->  Nested Loop  (cost=0.00..137830.00 rows=9984 width=4) (actual time=0.078..22.525 rows=9984 loops=1)
                                                                          ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=4 width=4) (actual time=0.066..16.028 rows=4 loops=1)
                                                                                Filter: (keyword = ANY ('{superhero,marvel-comics,based-on-comic,fight}'::text[]))
                                                                                Rows Removed by Filter: 134166
                                                                          ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.007..1.333 rows=2496 loops=4)
                                                                                Index Cond: (keyword_id = k.id)
                                                                    ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=9984)
                                                                          Index Cond: (id = mk.movie_id)
                                                                          Filter: (production_year > 2005)
                                                                          Rows Removed by Filter: 1
                                                        ->  Sort  (cost=7.00..7.00 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                              Sort Key: kt.id
                                                              Sort Method: quicksort  Memory: 25kB
                                                              ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'movie'::text)
                                                                    Rows Removed by Filter: 6
                                                  ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..6.00 rows=1 width=13) (actual time=0.003..0.003 rows=0 loops=1441)
                                                        Index Cond: (movie_id = t.id)
                                                        Filter: (info > '8.0'::text)
                                                        Rows Removed by Filter: 2
                                            ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.00..72.00 rows=36 width=12) (actual time=0.006..0.108 rows=151 loops=115)
                                                  Index Cond: (movie_id = t.id)
                                      ->  Index Only Scan using name_pkey on name n  (cost=0.00..2.00 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=17348)
                                            Index Cond: (id = ci.person_id)
                                            Heap Fetches: 17348
                                ->  Hash  (cost=113.00..113.00 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                      ->  Seq Scan on info_type it2  (cost=0.00..113.00 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                            Filter: ((info)::text = 'rating'::text)
                                            Rows Removed by Filter: 112
                          ->  Index Scan using char_name_pkey on char_name chn  (cost=0.00..2.00 rows=1 width=20) (actual time=0.001..0.001 rows=0 loops=7981)
                                Index Cond: (id = ci.person_role_id)
                                Filter: ((name IS NOT NULL) AND ((name ~~ '%man%'::text) OR (name ~~ '%Man%'::text)))
                                Rows Removed by Filter: 0
                    ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..4.00 rows=2 width=12) (actual time=0.001..0.002 rows=1 loops=191)
                          Index Cond: (movie_id = t.id)
              ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=180)
                    Index Cond: (id = cc.subject_id)
                    Filter: ((kind)::text = 'cast'::text)
                    Rows Removed by Filter: 0
        ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=93)
              Index Cond: (id = cc.status_id)
              Filter: ((kind)::text ~~ '%complete%'::text)
Planning time: 42.328 ms
Execution time: 126.147 ms
