Aggregate  (cost=154474.00..154475.00 rows=1 width=96) (actual time=26.818..26.818 rows=1 loops=1)
  ->  Hash Join  (cost=146358.00..154474.00 rows=1 width=48) (actual time=18.838..26.228 rows=1874 loops=1)
        Hash Cond: (mc.company_type_id = ct.id)
        ->  Nested Loop  (cost=146353.00..154422.00 rows=63 width=52) (actual time=18.825..25.880 rows=1970 loops=1)
              ->  Nested Loop  (cost=146353.00..151116.00 rows=38 width=68) (actual time=18.814..21.771 rows=422 loops=1)
                    ->  Nested Loop  (cost=146353.00..149582.00 rows=767 width=53) (actual time=18.590..20.060 rows=1021 loops=1)
                          ->  Nested Loop  (cost=146353.00..146995.00 rows=199 width=41) (actual time=18.582..19.292 rows=199 loops=1)
                                ->  Merge Join  (cost=146353.00..146597.00 rows=199 width=20) (actual time=18.574..18.890 rows=199 loops=1)
                                      Merge Cond: (mk.movie_id = ml.movie_id)
                                      ->  Sort  (cost=135085.00..135085.00 rows=10544 width=4) (actual time=17.375..17.379 rows=47 loops=1)
                                            Sort Key: mk.movie_id
                                            Sort Method: quicksort  Memory: 879kB
                                            ->  Nested Loop  (cost=0.00..135085.00 rows=10544 width=4) (actual time=0.528..15.766 rows=10544 loops=1)
                                                  ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=1 width=4) (actual time=0.516..8.312 rows=1 loops=1)
                                                        Filter: (keyword = 'sequel'::text)
                                                        Rows Removed by Filter: 134169
                                                  ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.011..6.268 rows=10544 loops=1)
                                                        Index Cond: (keyword_id = k.id)
                                      ->  Sort  (cost=11268.00..11268.00 rows=2315 width=16) (actual time=1.193..1.309 rows=2316 loops=1)
                                            Sort Key: ml.movie_id
                                            Sort Method: quicksort  Memory: 205kB
                                            ->  Nested Loop  (cost=0.00..11268.00 rows=2315 width=16) (actual time=0.018..0.751 rows=2315 loops=1)
                                                  ->  Seq Scan on link_type lt  (cost=0.00..18.00 rows=2 width=16) (actual time=0.005..0.008 rows=2 loops=1)
                                                        Filter: ((link)::text ~~ '%follow%'::text)
                                                        Rows Removed by Filter: 16
                                                  ->  Index Scan using link_type_id_movie_link on movie_link ml  (cost=0.00..3750.00 rows=1875 width=8) (actual time=0.009..0.245 rows=1158 loops=2)
                                                        Index Cond: (link_type_id = lt.id)
                                ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=199)
                                      Index Cond: (id = ml.movie_id)
                                      Filter: ((production_year >= 1950) AND (production_year <= 2010))
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=3 width=12) (actual time=0.002..0.003 rows=5 loops=199)
                                Index Cond: (movie_id = ml.movie_id)
                                Filter: (note IS NULL)
                                Rows Removed by Filter: 2
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=23) (actual time=0.001..0.001 rows=0 loops=1021)
                          Index Cond: (id = mc.company_id)
                          Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                          Rows Removed by Filter: 1
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=3 width=4) (actual time=0.007..0.009 rows=5 loops=422)
                    Index Cond: (movie_id = ml.movie_id)
                    Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
                    Rows Removed by Filter: 17
        ->  Hash  (cost=4.00..4.00 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              ->  Seq Scan on company_type ct  (cost=0.00..4.00 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                    Filter: ((kind)::text = 'production companies'::text)
                    Rows Removed by Filter: 3
Planning time: 7.320 ms
Execution time: 26.886 ms
