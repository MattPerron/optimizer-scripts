Aggregate  (cost=56209.00..56210.00 rows=1 width=192) (actual time=22.131..22.131 rows=1 loops=1)
  ->  Nested Loop  (cost=54607.00..56209.00 rows=1 width=82) (actual time=18.920..22.066 rows=114 loops=1)
        ->  Nested Loop  (cost=54607.00..56207.00 rows=1 width=67) (actual time=18.917..21.854 rows=131 loops=1)
              ->  Nested Loop  (cost=54607.00..56192.00 rows=1 width=75) (actual time=18.913..21.737 rows=44 loops=1)
                    ->  Nested Loop  (cost=54607.00..56190.00 rows=1 width=60) (actual time=18.910..21.660 rows=44 loops=1)
                          ->  Nested Loop  (cost=54607.00..56175.00 rows=1 width=68) (actual time=18.906..21.606 rows=19 loops=1)
                                ->  Hash Join  (cost=54607.00..55972.00 rows=101 width=72) (actual time=18.685..20.711 rows=1064 loops=1)
                                      Hash Cond: (t1.kind_id = kt1.id)
                                      ->  Nested Loop  (cost=54598.00..55660.00 rows=354 width=76) (actual time=18.675..20.491 rows=1064 loops=1)
                                            ->  Merge Join  (cost=54598.00..54952.00 rows=354 width=51) (actual time=18.671..18.939 rows=1064 loops=1)
                                                  Merge Cond: (kt2.id = t2.kind_id)
                                                  ->  Sort  (cost=7.00..7.00 rows=2 width=4) (actual time=0.005..0.005 rows=2 loops=1)
                                                        Sort Key: kt2.id
                                                        Sort Method: quicksort  Memory: 25kB
                                                        ->  Seq Scan on kind_type kt2  (cost=0.00..7.00 rows=2 width=4) (actual time=0.002..0.002 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                              Rows Removed by Filter: 5
                                                  ->  Sort  (cost=54591.00..54591.00 rows=1238 width=55) (actual time=18.659..18.724 rows=1238 loops=1)
                                                        Sort Key: t2.kind_id
                                                        Sort Method: quicksort  Memory: 220kB
                                                        ->  Nested Loop  (cost=32216.00..54591.00 rows=1238 width=55) (actual time=7.054..18.284 rows=1238 loops=1)
                                                              ->  Nested Loop  (cost=32216.00..48783.00 rows=2904 width=30) (actual time=7.050..12.857 rows=2904 loops=1)
                                                                    ->  Merge Join  (cost=32216.00..32271.00 rows=2064 width=17) (actual time=7.046..7.546 rows=2064 loops=1)
                                                                          Merge Cond: (it1.id = mi_idx1.info_type_id)
                                                                          ->  Sort  (cost=113.00..113.00 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                                                                Sort Key: it1.id
                                                                                Sort Method: quicksort  Memory: 25kB
                                                                                ->  Seq Scan on info_type it1  (cost=0.00..113.00 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                                      Filter: ((info)::text = 'rating'::text)
                                                                                      Rows Removed by Filter: 112
                                                                          ->  Sort  (cost=32103.00..32103.00 rows=6192 width=21) (actual time=6.521..6.870 rows=6192 loops=1)
                                                                                Sort Key: mi_idx1.info_type_id
                                                                                Sort Method: quicksort  Memory: 676kB
                                                                                ->  Nested Loop  (cost=0.00..32103.00 rows=6192 width=21) (actual time=0.015..5.481 rows=6192 loops=1)
                                                                                      ->  Nested Loop  (cost=0.00..11268.00 rows=2315 width=8) (actual time=0.012..0.712 rows=2315 loops=1)
                                                                                            ->  Seq Scan on link_type lt  (cost=0.00..18.00 rows=2 width=4) (actual time=0.002..0.005 rows=2 loops=1)
                                                                                                  Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                                  Rows Removed by Filter: 16
                                                                                            ->  Index Scan using link_type_id_movie_link on movie_link ml  (cost=0.00..3750.00 rows=1875 width=12) (actual time=0.007..0.209 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                                      ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.00..6.00 rows=3 width=13) (actual time=0.001..0.002 rows=3 loops=2315)
                                                                                            Index Cond: (movie_id = ml.movie_id)
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.00..6.00 rows=2 width=13) (actual time=0.002..0.002 rows=1 loops=2064)
                                                                          Index Cond: (movie_id = ml.linked_movie_id)
                                                                          Filter: (info < '3.5'::text)
                                                                          Rows Removed by Filter: 1
                                                              ->  Index Scan using title_pkey on title t2  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2904)
                                                                    Index Cond: (id = ml.linked_movie_id)
                                                                    Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                    Rows Removed by Filter: 1
                                            ->  Index Scan using title_pkey on title t1  (cost=0.00..2.00 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=1064)
                                                  Index Cond: (id = ml.movie_id)
                                      ->  Hash  (cost=7.00..7.00 rows=2 width=4) (actual time=0.007..0.007 rows=2 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                            ->  Seq Scan on kind_type kt1  (cost=0.00..7.00 rows=2 width=4) (actual time=0.005..0.006 rows=2 loops=1)
                                                  Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                  Rows Removed by Filter: 5
                                ->  Index Scan using info_type_pkey on info_type it2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=1064)
                                      Index Cond: (id = mi_idx2.info_type_id)
                                      Filter: ((info)::text = 'rating'::text)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.00..10.00 rows=5 width=8) (actual time=0.002..0.002 rows=2 loops=19)
                                Index Cond: (movie_id = t2.id)
                    ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.00..2.00 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=44)
                          Index Cond: (id = mc2.company_id)
              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.00..10.00 rows=5 width=8) (actual time=0.001..0.002 rows=3 loops=44)
                    Index Cond: (movie_id = t1.id)
        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.00..2.00 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=131)
              Index Cond: (id = mc1.company_id)
              Filter: ((country_code)::text <> '[us]'::text)
              Rows Removed by Filter: 0
Planning time: 57.842 ms
Execution time: 22.214 ms
