Aggregate  (cost=330781.00..330782.00 rows=1 width=64) (actual time=182.346..182.346 rows=1 loops=1)
  ->  Hash Join  (cost=231239.00..330781.00 rows=761 width=22) (actual time=141.334..182.137 rows=761 loops=1)
        Hash Cond: (mi.info_type_id = it1.id)
        ->  Nested Loop  (cost=231125.00..329797.00 rows=878 width=26) (actual time=141.313..181.950 rows=878 loops=1)
              ->  Merge Join  (cost=231125.00..231155.00 rows=1147 width=34) (actual time=141.290..141.721 rows=1147 loops=1)
                    Merge Cond: (mi_idx.info_type_id = it2.id)
                    ->  Sort  (cost=231012.00..231012.00 rows=3403 width=38) (actual time=140.898..141.221 rows=3395 loops=1)
                          Sort Key: mi_idx.info_type_id
                          Sort Method: quicksort  Memory: 390kB
                          ->  Nested Loop  (cost=8.00..231012.00 rows=3403 width=38) (actual time=3.014..140.072 rows=3403 loops=1)
                                ->  Hash Join  (cost=8.00..213318.00 rows=1966 width=25) (actual time=3.005..132.886 rows=1966 loops=1)
                                      Hash Cond: (t.kind_id = kt.id)
                                      ->  Nested Loop  (cost=0.00..211097.00 rows=2582 width=29) (actual time=0.878..132.380 rows=2582 loops=1)
                                            ->  Nested Loop  (cost=0.00..136915.00 rows=37091 width=4) (actual time=0.824..44.421 rows=37091 loops=1)
                                                  ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=3 width=4) (actual time=0.814..15.524 rows=3 loops=1)
                                                        Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                        Rows Removed by Filter: 134167
                                                  ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.008..8.187 rows=12364 loops=3)
                                                        Index Cond: (keyword_id = k.id)
                                            ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=37091)
                                                  Index Cond: (id = mk.movie_id)
                                                  Filter: (production_year > 2010)
                                                  Rows Removed by Filter: 1
                                      ->  Hash  (cost=7.00..7.00 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                            ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'movie'::text)
                                                  Rows Removed by Filter: 6
                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..6.00 rows=3 width=13) (actual time=0.003..0.003 rows=2 loops=1966)
                                      Index Cond: (movie_id = t.id)
                                      Filter: (info < '8.5'::text)
                                      Rows Removed by Filter: 0
                    ->  Sort  (cost=113.00..113.00 rows=1 width=4) (actual time=0.032..0.032 rows=1 loops=1)
                          Sort Key: it2.id
                          Sort Method: quicksort  Memory: 25kB
                          ->  Seq Scan on info_type it2  (cost=0.00..113.00 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                                Filter: ((info)::text = 'rating'::text)
                                Rows Removed by Filter: 112
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=2 width=8) (actual time=0.029..0.035 rows=1 loops=1147)
                    Index Cond: (movie_id = t.id)
                    Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                    Rows Removed by Filter: 69
        ->  Hash  (cost=113.00..113.00 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=1)
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              ->  Seq Scan on info_type it1  (cost=0.00..113.00 rows=1 width=4) (actual time=0.008..0.014 rows=1 loops=1)
                    Filter: ((info)::text = 'countries'::text)
                    Rows Removed by Filter: 112
Planning time: 3.076 ms
Execution time: 182.423 ms
