Aggregate  (cost=18693.00..18694.00 rows=1 width=192) (actual time=6.171..6.171 rows=1 loops=1)
  ->  Nested Loop  (cost=8.00..18693.00 rows=1 width=82) (actual time=0.563..6.165 rows=4 loops=1)
        ->  Nested Loop  (cost=8.00..18691.00 rows=1 width=67) (actual time=0.561..6.137 rows=14 loops=1)
              ->  Nested Loop  (cost=8.00..18676.00 rows=1 width=75) (actual time=0.558..6.119 rows=6 loops=1)
                    ->  Nested Loop  (cost=8.00..18672.00 rows=1 width=79) (actual time=0.374..6.073 rows=46 loops=1)
                          ->  Nested Loop  (cost=8.00..18668.00 rows=1 width=83) (actual time=0.369..5.929 rows=138 loops=1)
                                ->  Nested Loop  (cost=8.00..18659.00 rows=1 width=70) (actual time=0.366..5.784 rows=60 loops=1)
                                      ->  Nested Loop  (cost=8.00..18657.00 rows=1 width=55) (actual time=0.363..5.657 rows=60 loops=1)
                                            ->  Nested Loop  (cost=8.00..18644.00 rows=6 width=59) (actual time=0.361..5.460 rows=199 loops=1)
                                                  ->  Nested Loop  (cost=8.00..18554.00 rows=6 width=67) (actual time=0.358..5.236 rows=50 loops=1)
                                                        ->  Hash Join  (cost=8.00..18393.00 rows=23 width=54) (actual time=0.077..5.119 rows=37 loops=1)
                                                              Hash Cond: (t1.kind_id = kt1.id)
                                                              ->  Nested Loop  (cost=0.00..18250.00 rows=158 width=58) (actual time=0.069..5.102 rows=37 loops=1)
                                                                    ->  Nested Loop  (cost=0.00..17934.00 rows=158 width=33) (actual time=0.066..5.019 rows=37 loops=1)
                                                                          ->  Nested Loop  (cost=0.00..11268.00 rows=3333 width=8) (actual time=0.015..0.722 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..18.00 rows=2 width=4) (actual time=0.005..0.009 rows=2 loops=1)
                                                                                      Filter: ((link)::text ~~ '%follow%'::text)
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Index Scan using link_type_id_movie_link on movie_link ml  (cost=0.00..3750.00 rows=1875 width=12) (actual time=0.007..0.217 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using title_pkey on title t2  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2315)
                                                                                Index Cond: (id = ml.linked_movie_id)
                                                                                Filter: (production_year = 2007)
                                                                                Rows Removed by Filter: 1
                                                                    ->  Index Scan using title_pkey on title t1  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=37)
                                                                          Index Cond: (id = ml.movie_id)
                                                              ->  Hash  (cost=7.00..7.00 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on kind_type kt1  (cost=0.00..7.00 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                                          Filter: ((kind)::text = 'tv series'::text)
                                                                          Rows Removed by Filter: 6
                                                        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.00..6.00 rows=1 width=13) (actual time=0.002..0.003 rows=1 loops=37)
                                                              Index Cond: (movie_id = t2.id)
                                                              Filter: (info < '3.0'::text)
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.00..10.00 rows=5 width=8) (actual time=0.002..0.004 rows=4 loops=50)
                                                        Index Cond: (movie_id = t2.id)
                                            ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=199)
                                                  Index Cond: (id = t2.kind_id)
                                                  Filter: ((kind)::text = 'tv series'::text)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=60)
                                            Index Cond: (id = mc2.company_id)
                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.00..6.00 rows=3 width=13) (actual time=0.002..0.002 rows=2 loops=60)
                                      Index Cond: (movie_id = t1.id)
                          ->  Index Scan using info_type_pkey on info_type it1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=138)
                                Index Cond: (id = mi_idx1.info_type_id)
                                Filter: ((info)::text = 'rating'::text)
                                Rows Removed by Filter: 1
                    ->  Index Scan using info_type_pkey on info_type it2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=46)
                          Index Cond: (id = mi_idx2.info_type_id)
                          Filter: ((info)::text = 'rating'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.00..10.00 rows=5 width=8) (actual time=0.002..0.002 rows=2 loops=6)
                    Index Cond: (movie_id = t1.id)
        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=14)
              Index Cond: (id = mc1.company_id)
              Filter: ((country_code)::text = '[nl]'::text)
              Rows Removed by Filter: 1
Planning time: 60.777 ms
Execution time: 6.248 ms
