Aggregate  (cost=169078.00..169079.00 rows=1 width=96) (actual time=36.668..36.668 rows=1 loops=1)
  ->  Nested Loop  (cost=165319.00..169078.00 rows=1 width=48) (actual time=25.004..36.315 rows=1620 loops=1)
        ->  Nested Loop  (cost=165319.00..169075.00 rows=1 width=51) (actual time=25.000..34.004 rows=1620 loops=1)
              ->  Nested Loop  (cost=165319.00..169071.00 rows=1 width=55) (actual time=24.998..32.686 rows=1620 loops=1)
                    ->  Nested Loop  (cost=165319.00..169067.00 rows=1 width=59) (actual time=24.991..28.623 rows=4890 loops=1)
                          ->  Nested Loop  (cost=165319.00..168917.00 rows=2 width=67) (actual time=24.986..27.335 rows=30 loops=1)
                                ->  Nested Loop  (cost=165319.00..168907.00 rows=5 width=71) (actual time=24.982..27.121 rows=132 loops=1)
                                      ->  Nested Loop  (cost=165319.00..168892.00 rows=1 width=63) (actual time=24.975..27.070 rows=6 loops=1)
                                            ->  Nested Loop  (cost=165319.00..168890.00 rows=1 width=44) (actual time=24.971..27.055 rows=6 loops=1)
                                                  ->  Nested Loop  (cost=165319.00..168886.00 rows=1 width=48) (actual time=24.969..27.037 rows=18 loops=1)
                                                        ->  Nested Loop  (cost=165319.00..168868.00 rows=8 width=52) (actual time=24.966..27.017 rows=18 loops=1)
                                                              ->  Nested Loop  (cost=165319.00..168748.00 rows=20 width=40) (actual time=24.962..26.978 rows=18 loops=1)
                                                                    ->  Nested Loop  (cost=165319.00..168700.00 rows=8 width=36) (actual time=24.957..26.947 rows=8 loops=1)
                                                                          ->  Nested Loop  (cost=165319.00..168275.00 rows=5 width=28) (actual time=23.565..26.536 rows=5 loops=1)
                                                                                ->  Merge Join  (cost=165319.00..165683.00 rows=1295 width=16) (actual time=23.275..23.564 rows=1295 loops=1)
                                                                                      Merge Cond: (rt.id = ci.role_id)
                                                                                      ->  Sort  (cost=12.00..12.00 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                                                                            Sort Key: rt.id
                                                                                            Sort Method: quicksort  Memory: 25kB
                                                                                            ->  Seq Scan on role_type rt  (cost=0.00..12.00 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                                                  Filter: ((role)::text = 'actress'::text)
                                                                                                  Rows Removed by Filter: 11
                                                                                      ->  Sort  (cost=165307.00..165307.00 rows=4371 width=20) (actual time=22.923..23.142 rows=4368 loops=1)
                                                                                            Sort Key: ci.role_id
                                                                                            Sort Method: quicksort  Memory: 516kB
                                                                                            ->  Nested Loop  (cost=0.00..165307.00 rows=4371 width=20) (actual time=0.043..22.242 rows=4371 loops=1)
                                                                                                  ->  Nested Loop  (cost=0.00..135085.00 rows=414 width=4) (actual time=0.036..8.246 rows=414 loops=1)
                                                                                                        ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=1 width=4) (actual time=0.027..7.925 rows=1 loops=1)
                                                                                                              Filter: (keyword = 'computer-animation'::text)
                                                                                                              Rows Removed by Filter: 134169
                                                                                                        ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.009..0.254 rows=414 loops=1)
                                                                                                              Index Cond: (keyword_id = k.id)
                                                                                                  ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.00..72.00 rows=1 width=16) (actual time=0.009..0.032 rows=11 loops=414)
                                                                                                        Index Cond: (movie_id = mk.movie_id)
                                                                                                        Filter: (note = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                                        Rows Removed by Filter: 33
                                                                                ->  Index Scan using char_name_pkey on char_name chn  (cost=0.00..2.00 rows=1 width=20) (actual time=0.002..0.002 rows=0 loops=1295)
                                                                                      Index Cond: (id = ci.person_role_id)
                                                                                      Filter: (name = 'Queen'::text)
                                                                                      Rows Removed by Filter: 1
                                                                          ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=1 width=8) (actual time=0.040..0.082 rows=2 loops=5)
                                                                                Index Cond: (movie_id = ci.movie_id)
                                                                                Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%200%'::text) OR (info ~~ 'USA:%200%'::text)))
                                                                                Rows Removed by Filter: 311
                                                                    ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.00..4.00 rows=2 width=4) (actual time=0.002..0.003 rows=2 loops=8)
                                                                          Index Cond: (person_id = ci.person_id)
                                                                          Heap Fetches: 18
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..4.00 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=18)
                                                                    Index Cond: (movie_id = mi.movie_id)
                                                        ->  Index Scan using info_type_pkey on info_type it  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=18)
                                                              Index Cond: (id = mi.info_type_id)
                                                              Filter: ((info)::text = 'release dates'::text)
                                                  ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=18)
                                                        Index Cond: (id = cc.status_id)
                                                        Filter: ((kind)::text = 'complete+verified'::text)
                                                        Rows Removed by Filter: 1
                                            ->  Index Scan using name_pkey on name n  (cost=0.00..2.00 rows=1 width=19) (actual time=0.002..0.002 rows=1 loops=6)
                                                  Index Cond: (id = ci.person_id)
                                                  Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=5 width=8) (actual time=0.002..0.005 rows=22 loops=6)
                                            Index Cond: (movie_id = mi.movie_id)
                                ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=132)
                                      Index Cond: (id = mc.company_id)
                                      Filter: ((country_code)::text = '[us]'::text)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using person_id_person_info on person_info pi  (cost=0.00..50.00 rows=25 width=8) (actual time=0.001..0.023 rows=163 loops=30)
                                Index Cond: (person_id = n.id)
                    ->  Index Scan using info_type_pkey on info_type it3  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=4890)
                          Index Cond: (id = pi.info_type_id)
                          Filter: ((info)::text = 'trivia'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1620)
                    Index Cond: (id = cc.subject_id)
                    Filter: ((kind)::text = 'cast'::text)
        ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=1620)
              Index Cond: (id = mi.movie_id)
              Filter: ((production_year >= 2000) AND (production_year <= 2010) AND (title = 'Shrek 2'::text))
Planning time: 74.264 ms
Execution time: 36.761 ms
