Aggregate  (cost=702344.00..702345.00 rows=1 width=64) (actual time=853.669..853.669 rows=1 loops=1)
  ->  Hash Join  (cost=648150.00..702344.00 rows=2400 width=22) (actual time=767.387..852.748 rows=4115 loops=1)
        Hash Cond: (mi_idx.info_type_id = it2.id)
        ->  Nested Loop  (cost=648036.00..697841.00 rows=4428 width=26) (actual time=767.366..851.324 rows=12401 loops=1)
              ->  Merge Join  (cost=648036.00..649997.00 rows=5316 width=29) (actual time=767.349..836.921 rows=5316 loops=1)
                    Merge Cond: (mi.movie_id = t.id)
                    ->  Sort  (cost=434149.00..434149.00 rows=614251 width=4) (actual time=625.950..655.947 rows=614200 loops=1)
                          Sort Key: mi.movie_id
                          Sort Method: quicksort  Memory: 53370kB
                          ->  Nested Loop  (cost=0.00..434149.00 rows=614251 width=4) (actual time=0.058..504.524 rows=614251 loops=1)
                                ->  Seq Scan on info_type it1  (cost=0.00..113.00 rows=1 width=4) (actual time=0.003..0.013 rows=1 loops=1)
                                      Filter: ((info)::text = 'countries'::text)
                                      Rows Removed by Filter: 112
                                ->  Index Scan using info_type_id_movie_info on movie_info mi  (cost=0.00..423878.00 rows=10158 width=8) (actual time=0.054..449.386 rows=614251 loops=1)
                                      Index Cond: (info_type_id = it1.id)
                                      Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                      Rows Removed by Filter: 711110
                    ->  Sort  (cost=213887.00..213887.00 rows=8073 width=25) (actual time=141.217..141.708 rows=8466 loops=1)
                          Sort Key: mk.movie_id
                          Sort Method: quicksort  Memory: 793kB
                          ->  Merge Join  (cost=211104.00..213887.00 rows=8073 width=25) (actual time=137.481..139.515 rows=8073 loops=1)
                                Merge Cond: (t.kind_id = kt.id)
                                ->  Sort  (cost=211097.00..211097.00 rows=9739 width=29) (actual time=137.460..138.010 rows=9739 loops=1)
                                      Sort Key: t.kind_id
                                      Sort Method: quicksort  Memory: 1168kB
                                      ->  Nested Loop  (cost=0.00..211097.00 rows=9739 width=29) (actual time=0.825..135.352 rows=9739 loops=1)
                                            ->  Nested Loop  (cost=0.00..136915.00 rows=37091 width=4) (actual time=0.814..45.827 rows=37091 loops=1)
                                                  ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=3 width=4) (actual time=0.797..16.331 rows=3 loops=1)
                                                        Filter: ((keyword IS NOT NULL) AND (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[])))
                                                        Rows Removed by Filter: 134167
                                                  ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.010..8.349 rows=12364 loops=3)
                                                        Index Cond: (keyword_id = k.id)
                                            ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=37091)
                                                  Index Cond: (id = mk.movie_id)
                                                  Filter: (production_year > 2005)
                                                  Rows Removed by Filter: 1
                                ->  Sort  (cost=7.00..7.00 rows=2 width=4) (actual time=0.018..0.018 rows=2 loops=1)
                                      Sort Key: kt.id
                                      Sort Method: quicksort  Memory: 25kB
                                      ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=2 width=4) (actual time=0.008..0.009 rows=2 loops=1)
                                            Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                            Rows Removed by Filter: 5
              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..6.00 rows=3 width=13) (actual time=0.002..0.002 rows=2 loops=5316)
                    Index Cond: (movie_id = t.id)
                    Filter: (info < '8.5'::text)
                    Rows Removed by Filter: 0
        ->  Hash  (cost=113.00..113.00 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=1)
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              ->  Seq Scan on info_type it2  (cost=0.00..113.00 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                    Filter: ((info)::text = 'rating'::text)
                    Rows Removed by Filter: 112
Planning time: 2.962 ms
Execution time: 854.675 ms
