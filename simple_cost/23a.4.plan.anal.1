Aggregate  (cost=307807.20..307808.20 rows=1 width=64) (actual time=174.348..174.348 rows=1 loops=1)
  ->  Nested Loop  (cost=135098.00..307807.20 rows=3 width=27) (actual time=55.507..174.176 rows=618 loops=1)
        ->  Nested Loop  (cost=135098.00..307802.00 rows=3 width=31) (actual time=55.501..173.576 rows=618 loops=1)
              ->  Nested Loop  (cost=135098.00..307800.00 rows=1 width=35) (actual time=55.493..172.568 rows=618 loops=1)
                    ->  Nested Loop  (cost=135098.00..307798.00 rows=1 width=39) (actual time=55.483..171.068 rows=618 loops=1)
                          ->  Nested Loop  (cost=135098.00..307663.00 rows=1 width=51) (actual time=55.472..170.844 rows=6 loops=1)
                                ->  Nested Loop  (cost=135098.00..307659.00 rows=1 width=55) (actual time=55.466..170.823 rows=6 loops=1)
                                      ->  Nested Loop  (cost=135098.00..307644.00 rows=1 width=43) (actual time=55.457..170.791 rows=5 loops=1)
                                            ->  Hash Join  (cost=135098.00..219839.00 rows=1033 width=35) (actual time=37.873..110.492 rows=1033 loops=1)
                                                  Hash Cond: (t.kind_id = kt.id)
                                                  ->  Nested Loop  (cost=135090.00..218046.00 rows=2083 width=29) (actual time=37.856..110.124 rows=2083 loops=1)
                                                        ->  Merge Join  (cost=135090.00..168862.00 rows=24592 width=4) (actual time=37.822..45.020 rows=24592 loops=1)
                                                              Merge Cond: (cc.status_id = cct1.id)
                                                              ->  Sort  (cost=135086.00..135086.00 rows=135086 width=8) (actual time=26.327..34.338 rows=135086 loops=1)
                                                                    Sort Key: cc.status_id
                                                                    Sort Method: quicksort  Memory: 12477kB
                                                                    ->  Seq Scan on complete_cast cc  (cost=0.00..135086.00 rows=135086 width=8) (actual time=0.005..13.194 rows=135086 loops=1)
                                                              ->  Sort  (cost=4.00..4.00 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=1)
                                                                    Sort Key: cct1.id
                                                                    Sort Method: quicksort  Memory: 25kB
                                                                    ->  Seq Scan on comp_cast_type cct1  (cost=0.00..4.00 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                                          Filter: ((kind)::text = 'complete+verified'::text)
                                                                          Rows Removed by Filter: 3
                                                        ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=24592)
                                                              Index Cond: (id = cc.movie_id)
                                                              Filter: (production_year > 2000)
                                                              Rows Removed by Filter: 1
                                                  ->  Hash  (cost=7.00..7.00 rows=1 width=14) (actual time=0.009..0.009 rows=1 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=1 width=14) (actual time=0.007..0.008 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'movie'::text)
                                                              Rows Removed by Filter: 6
                                            ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=1 width=8) (actual time=0.058..0.058 rows=0 loops=1033)
                                                  Index Cond: (movie_id = t.id)
                                                  Filter: ((note ~~ '%internet%'::text) AND (info IS NOT NULL) AND ((info ~~ 'USA:% 199%'::text) OR (info ~~ 'USA:% 200%'::text)))
                                                  Rows Removed by Filter: 211
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=5 width=12) (actual time=0.005..0.005 rows=1 loops=5)
                                            Index Cond: (movie_id = t.id)
                                ->  Index Scan using info_type_pkey on info_type it1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=6)
                                      Index Cond: (id = mi.info_type_id)
                                      Filter: ((info)::text = 'release dates'::text)
                          ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.00..90.00 rows=45 width=8) (actual time=0.005..0.023 rows=103 loops=6)
                                Index Cond: (movie_id = t.id)
                    ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.00..2.00 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=618)
                          Index Cond: (id = mk.keyword_id)
                          Heap Fetches: 618
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=618)
                    Index Cond: (id = mc.company_id)
                    Filter: ((country_code)::text = '[us]'::text)
        ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=618)
              Index Cond: (id = mc.company_type_id)
              Heap Fetches: 618
Planning time: 18.204 ms
Execution time: 174.440 ms
