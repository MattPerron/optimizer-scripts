Aggregate  (cost=411573.30..411574.30 rows=1 width=96) (actual time=297.713..297.713 rows=1 loops=1)
  ->  Nested Loop  (cost=405352.50..411573.30 rows=1 width=41) (actual time=187.972..297.649 rows=148 loops=1)
        ->  Nested Loop  (cost=405352.50..411570.50 rows=1 width=45) (actual time=187.969..297.495 rows=148 loops=1)
              ->  Nested Loop  (cost=405352.50..411566.50 rows=1 width=49) (actual time=187.966..297.340 rows=149 loops=1)
                    ->  Nested Loop  (cost=405352.50..411481.50 rows=1 width=65) (actual time=187.279..194.305 rows=1387 loops=1)
                          ->  Nested Loop  (cost=405352.50..411304.50 rows=88 width=69) (actual time=187.275..192.133 rows=1652 loops=1)
                                ->  Merge Join  (cost=405352.50..406096.50 rows=744 width=56) (actual time=187.265..187.726 rows=1685 loops=1)
                                      Merge Cond: (cc.subject_id = cct1.id)
                                      ->  Sort  (cost=405348.50..405348.50 rows=2974 width=60) (actual time=186.253..186.758 rows=9971 loops=1)
                                            Sort Key: cc.subject_id
                                            Sort Method: quicksort  Memory: 1700kB
                                            ->  Merge Join  (cost=402374.50..405348.50 rows=2974 width=60) (actual time=181.690..184.198 rows=9971 loops=1)
                                                  Merge Cond: (t.kind_id = kt.id)
                                                  ->  Sort  (cost=402367.50..402367.50 rows=10409 width=64) (actual time=181.679..182.204 rows=10409 loops=1)
                                                        Sort Key: t.kind_id
                                                        Sort Method: quicksort  Memory: 1809kB
                                                        ->  Nested Loop  (cost=272001.00..402367.50 rows=10409 width=64) (actual time=82.038..179.083 rows=10409 loops=1)
                                                              ->  Nested Loop  (cost=272001.00..380441.50 rows=10963 width=49) (actual time=82.033..159.530 rows=10963 loops=1)
                                                                    ->  Nested Loop  (cost=272001.00..365525.50 rows=1356 width=37) (actual time=82.007..146.140 rows=1356 loops=1)
                                                                          ->  Nested Loop  (cost=272001.00..362295.00 rows=1723 width=41) (actual time=81.996..144.502 rows=1723 loops=1)
                                                                                ->  Merge Join  (cost=272001.00..322247.00 rows=20024 width=16) (actual time=81.187..107.018 rows=20024 loops=1)
                                                                                      Merge Cond: (mk.movie_id = cc.movie_id)
                                                                                      ->  Sort  (cost=136915.00..136915.00 rows=37091 width=4) (actual time=43.653..46.002 rows=37091 loops=1)
                                                                                            Sort Key: mk.movie_id
                                                                                            Sort Method: quicksort  Memory: 3275kB
                                                                                            ->  Nested Loop  (cost=0.00..136915.00 rows=37091 width=4) (actual time=0.791..37.251 rows=37091 loops=1)
                                                                                                  ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=3 width=4) (actual time=0.784..15.057 rows=3 loops=1)
                                                                                                        Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                                        Rows Removed by Filter: 134167
                                                                                                  ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.007..6.055 rows=12364 loops=3)
                                                                                                        Index Cond: (keyword_id = k.id)
                                                                                      ->  Sort  (cost=135086.00..135086.00 rows=135086 width=12) (actual time=37.477..45.402 rows=138007 loops=1)
                                                                                            Sort Key: cc.movie_id
                                                                                            Sort Method: quicksort  Memory: 12477kB
                                                                                            ->  Seq Scan on complete_cast cc  (cost=0.00..135086.00 rows=135086 width=12) (actual time=0.006..12.961 rows=135086 loops=1)
                                                                                ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=20024)
                                                                                      Index Cond: (id = mk.movie_id)
                                                                                      Filter: (production_year > 2005)
                                                                                      Rows Removed by Filter: 1
                                                                          ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1723)
                                                                                Index Cond: (id = cc.status_id)
                                                                                Filter: ((kind)::text <> 'complete+verified'::text)
                                                                                Rows Removed by Filter: 0
                                                                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=1 width=12) (actual time=0.004..0.009 rows=8 loops=1356)
                                                                          Index Cond: (movie_id = t.id)
                                                                          Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                                                          Rows Removed by Filter: 10
                                                              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=10963)
                                                                    Index Cond: (id = mc.company_id)
                                                                    Filter: ((country_code)::text <> '[us]'::text)
                                                                    Rows Removed by Filter: 0
                                                  ->  Sort  (cost=7.00..7.00 rows=2 width=4) (actual time=0.011..0.011 rows=2 loops=1)
                                                        Sort Key: kt.id
                                                        Sort Method: quicksort  Memory: 25kB
                                                        ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=2 width=4) (actual time=0.005..0.006 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                              Rows Removed by Filter: 5
                                      ->  Sort  (cost=4.00..4.00 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                            Sort Key: cct1.id
                                            Sort Method: quicksort  Memory: 25kB
                                            ->  Seq Scan on comp_cast_type cct1  (cost=0.00..4.00 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'crew'::text)
                                                  Rows Removed by Filter: 3
                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..6.00 rows=1 width=13) (actual time=0.002..0.002 rows=1 loops=1685)
                                      Index Cond: (movie_id = t.id)
                                      Filter: (info > '6.5'::text)
                                      Rows Removed by Filter: 2
                          ->  Index Scan using info_type_pkey on info_type it2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1652)
                                Index Cond: (id = mi_idx.info_type_id)
                                Filter: ((info)::text = 'rating'::text)
                                Rows Removed by Filter: 0
                    ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=1 width=8) (actual time=0.074..0.074 rows=0 loops=1387)
                          Index Cond: (movie_id = t.id)
                          Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                          Rows Removed by Filter: 336
              ->  Index Scan using info_type_pkey on info_type it1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=149)
                    Index Cond: (id = mi.info_type_id)
                    Filter: ((info)::text = 'countries'::text)
                    Rows Removed by Filter: 0
        ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=148)
              Index Cond: (id = mc.company_type_id)
              Heap Fetches: 148
Planning time: 54.974 ms
Execution time: 297.801 ms
