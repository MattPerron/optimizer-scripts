Aggregate  (cost=9385172.00..9385173.00 rows=1 width=64) (actual time=12884.023..12884.023 rows=1 loops=1)
  ->  Nested Loop  (cost=8519205.00..9385172.00 rows=5225 width=32) (actual time=3960.061..12504.341 rows=1760645 loops=1)
        ->  Nested Loop  (cost=8519205.00..9368360.00 rows=2802 width=40) (actual time=3959.687..10856.197 rows=787043 loops=1)
              ->  Nested Loop  (cost=8519205.00..9050716.00 rows=158823 width=44) (actual time=3959.673..5827.379 rows=3229056 loops=1)
                    ->  Merge Join  (cost=8519205.00..8710546.00 rows=22678 width=52) (actual time=3959.659..4427.398 rows=341836 loops=1)
                          Merge Cond: (mi.movie_id = t.id)
                          ->  Sort  (cost=635930.00..635930.00 rows=3036719 width=4) (actual time=1330.086..1494.797 rows=3036577 loops=1)
                                Sort Key: mi.movie_id
                                Sort Method: quicksort  Memory: 240651kB
                                ->  Nested Loop  (cost=0.00..635930.00 rows=3036719 width=4) (actual time=0.026..741.772 rows=3036719 loops=1)
                                      ->  Seq Scan on info_type it  (cost=0.00..113.00 rows=1 width=4) (actual time=0.010..0.018 rows=1 loops=1)
                                            Filter: ((info)::text = 'release dates'::text)
                                            Rows Removed by Filter: 112
                                      ->  Index Scan using info_type_id_movie_info on movie_info mi  (cost=0.00..423878.00 rows=211939 width=8) (actual time=0.015..440.800 rows=3036719 loops=1)
                                            Index Cond: (info_type_id = it.id)
                          ->  Sort  (cost=7883275.00..7883275.00 rows=159307 width=48) (actual time=2629.556..2653.673 rows=344513 loops=1)
                                Sort Key: ci.movie_id
                                Sort Method: quicksort  Memory: 25497kB
                                ->  Nested Loop  (cost=0.00..7883275.00 rows=159307 width=48) (actual time=0.356..2572.247 rows=159307 loops=1)
                                      ->  Nested Loop  (cost=0.00..7564377.00 rows=159449 width=29) (actual time=0.345..2290.773 rows=159449 loops=1)
                                            ->  Nested Loop  (cost=0.00..7227563.00 rows=168407 width=33) (actual time=0.334..1948.422 rows=168407 loops=1)
                                                  ->  Nested Loop  (cost=0.00..6675231.00 rows=276166 width=12) (actual time=0.132..1235.511 rows=276166 loops=1)
                                                        ->  Seq Scan on role_type rt  (cost=0.00..12.00 rows=1 width=4) (actual time=0.012..0.015 rows=1 loops=1)
                                                              Filter: ((role)::text = 'actress'::text)
                                                              Rows Removed by Filter: 11
                                                        ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.00..6589880.00 rows=85339 width=16) (actual time=0.117..1205.864 rows=276166 loops=1)
                                                              Index Cond: (role_id = rt.id)
                                                              Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                              Rows Removed by Filter: 7175807
                                                  ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=276166)
                                                        Index Cond: (id = ci.movie_id)
                                                        Filter: (production_year > 2000)
                                                        Rows Removed by Filter: 0
                                            ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.00..2.00 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=168407)
                                                  Index Cond: (id = ci.person_role_id)
                                                  Heap Fetches: 159449
                                      ->  Index Scan using name_pkey on name n  (cost=0.00..2.00 rows=1 width=19) (actual time=0.001..0.001 rows=1 loops=159449)
                                            Index Cond: (id = ci.person_id)
                                            Filter: ((gender)::text = 'f'::text)
                                            Rows Removed by Filter: 0
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=5 width=8) (actual time=0.001..0.003 rows=9 loops=341836)
                          Index Cond: (movie_id = t.id)
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=3229056)
                    Index Cond: (id = mc.company_id)
                    Filter: ((country_code)::text = '[us]'::text)
                    Rows Removed by Filter: 1
        ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.00..4.00 rows=2 width=4) (actual time=0.001..0.002 rows=2 loops=787043)
              Index Cond: (person_id = n.id)
              Heap Fetches: 1760645
Planning time: 11.661 ms
Execution time: 12887.220 ms
