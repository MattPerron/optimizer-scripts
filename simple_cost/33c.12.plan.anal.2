Aggregate  (cost=151620.00..151621.00 rows=1 width=192) (actual time=79.932..79.932 rows=1 loops=1)
  ->  Hash Join  (cost=146996.00..151620.00 rows=1 width=82) (actual time=78.767..79.864 rows=114 loops=1)
        Hash Cond: (mi_idx1.info_type_id = it1.id)
        ->  Hash Join  (cost=146882.00..151393.00 rows=114 width=86) (actual time=78.733..79.809 rows=342 loops=1)
              Hash Cond: (t2.kind_id = kt2.id)
              ->  Nested Loop  (cost=146873.00..151042.00 rows=399 width=90) (actual time=78.727..79.740 rows=399 loops=1)
                    ->  Nested Loop  (cost=146873.00..150244.00 rows=399 width=75) (actual time=78.723..79.187 rows=399 loops=1)
                          ->  Merge Join  (cost=146873.00..147004.00 rows=216 width=83) (actual time=78.718..78.773 rows=216 loops=1)
                                Merge Cond: (mi_idx2.info_type_id = it2.id)
                                ->  Sort  (cost=146760.00..146760.00 rows=14817 width=87) (actual time=76.945..77.653 rows=14817 loops=1)
                                      Sort Key: mi_idx2.info_type_id
                                      Sort Method: quicksort  Memory: 2817kB
                                      ->  Merge Join  (cost=142527.00..146760.00 rows=14817 width=87) (actual time=69.312..73.032 rows=14817 loops=1)
                                            Merge Cond: (kt1.id = t1.kind_id)
                                            ->  Sort  (cost=7.00..7.00 rows=2 width=4) (actual time=0.004..0.004 rows=2 loops=1)
                                                  Sort Key: kt1.id
                                                  Sort Method: quicksort  Memory: 25kB
                                                  ->  Seq Scan on kind_type kt1  (cost=0.00..7.00 rows=2 width=4) (actual time=0.001..0.002 rows=2 loops=1)
                                                        Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                        Rows Removed by Filter: 5
                                            ->  Sort  (cost=142520.00..142520.00 rows=14817 width=91) (actual time=69.306..70.060 rows=14817 loops=1)
                                                  Sort Key: t1.kind_id
                                                  Sort Method: quicksort  Memory: 2941kB
                                                  ->  Nested Loop  (cost=0.00..142520.00 rows=14817 width=91) (actual time=0.032..64.026 rows=14817 loops=1)
                                                        ->  Nested Loop  (cost=0.00..112886.00 rows=14817 width=82) (actual time=0.029..41.068 rows=14817 loops=1)
                                                              ->  Nested Loop  (cost=0.00..67544.00 rows=5038 width=69) (actual time=0.026..28.532 rows=5038 loops=1)
                                                                    ->  Nested Loop  (cost=0.00..55718.00 rows=5913 width=54) (actual time=0.023..17.543 rows=5913 loops=1)
                                                                          ->  Nested Loop  (cost=0.00..35948.00 rows=1318 width=46) (actual time=0.020..13.072 rows=1318 loops=1)
                                                                                ->  Nested Loop  (cost=0.00..29788.00 rows=3080 width=21) (actual time=0.016..6.938 rows=3080 loops=1)
                                                                                      ->  Nested Loop  (cost=0.00..11268.00 rows=2315 width=8) (actual time=0.011..0.770 rows=2315 loops=1)
                                                                                            ->  Seq Scan on link_type lt  (cost=0.00..18.00 rows=2 width=4) (actual time=0.002..0.006 rows=2 loops=1)
                                                                                                  Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                                  Rows Removed by Filter: 16
                                                                                            ->  Index Scan using link_type_id_movie_link on movie_link ml  (cost=0.00..3750.00 rows=1875 width=12) (actual time=0.008..0.224 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                                      ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.00..6.00 rows=2 width=13) (actual time=0.002..0.002 rows=1 loops=2315)
                                                                                            Index Cond: (movie_id = ml.linked_movie_id)
                                                                                            Filter: (info < '3.5'::text)
                                                                                            Rows Removed by Filter: 1
                                                                                ->  Index Scan using title_pkey on title t2  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=3080)
                                                                                      Index Cond: (id = ml.linked_movie_id)
                                                                                      Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                                      Rows Removed by Filter: 1
                                                                          ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.00..10.00 rows=5 width=8) (actual time=0.002..0.002 rows=4 loops=1318)
                                                                                Index Cond: (movie_id = ml.movie_id)
                                                                    ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=5913)
                                                                          Index Cond: (id = mc1.company_id)
                                                                          Filter: ((country_code)::text <> '[us]'::text)
                                                                          Rows Removed by Filter: 0
                                                              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.00..6.00 rows=3 width=13) (actual time=0.001..0.002 rows=3 loops=5038)
                                                                    Index Cond: (movie_id = ml.movie_id)
                                                        ->  Index Scan using title_pkey on title t1  (cost=0.00..2.00 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=14817)
                                                              Index Cond: (id = ml.movie_id)
                                ->  Sort  (cost=113.00..113.00 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=1)
                                      Sort Key: it2.id
                                      Sort Method: quicksort  Memory: 25kB
                                      ->  Seq Scan on info_type it2  (cost=0.00..113.00 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                            Filter: ((info)::text = 'rating'::text)
                                            Rows Removed by Filter: 112
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.00..10.00 rows=5 width=8) (actual time=0.001..0.002 rows=2 loops=216)
                                Index Cond: (movie_id = t2.id)
                    ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.00..2.00 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=399)
                          Index Cond: (id = mc2.company_id)
              ->  Hash  (cost=7.00..7.00 rows=2 width=4) (actual time=0.004..0.004 rows=2 loops=1)
                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                    ->  Seq Scan on kind_type kt2  (cost=0.00..7.00 rows=2 width=4) (actual time=0.002..0.003 rows=2 loops=1)
                          Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                          Rows Removed by Filter: 5
        ->  Hash  (cost=113.00..113.00 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=1)
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              ->  Seq Scan on info_type it1  (cost=0.00..113.00 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                    Filter: ((info)::text = 'rating'::text)
                    Rows Removed by Filter: 112
Planning time: 57.519 ms
Execution time: 80.020 ms
