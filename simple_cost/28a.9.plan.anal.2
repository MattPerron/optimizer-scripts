Aggregate  (cost=304083.00..304084.00 rows=1 width=96) (actual time=508.512..508.512 rows=1 loops=1)
  ->  Nested Loop  (cost=211238.00..304083.00 rows=1 width=41) (actual time=120.838..506.786 rows=4803 loops=1)
        ->  Nested Loop  (cost=211238.00..304063.00 rows=9 width=45) (actual time=120.835..501.594 rows=5295 loops=1)
              ->  Hash Join  (cost=211238.00..301397.00 rows=31 width=61) (actual time=120.782..158.816 rows=4410 loops=1)
                    Hash Cond: (mc.company_type_id = ct.id)
                    ->  Nested Loop  (cost=211230.00..301366.00 rows=31 width=65) (actual time=120.771..157.758 rows=4410 loops=1)
                          ->  Nested Loop  (cost=211230.00..301252.00 rows=57 width=50) (actual time=120.767..148.125 rows=4535 loops=1)
                                ->  Hash Join  (cost=211230.00..296049.00 rows=473 width=38) (actual time=120.593..142.740 rows=473 loops=1)
                                      Hash Cond: (mi_idx.info_type_id = it2.id)
                                      ->  Nested Loop  (cost=211116.00..294449.00 rows=1499 width=42) (actual time=120.578..142.528 rows=1499 loops=1)
                                            ->  Hash Join  (cost=211116.00..289508.00 rows=549 width=29) (actual time=120.571..140.397 rows=549 loops=1)
                                                  Hash Cond: (cc.subject_id = cct1.id)
                                                  ->  Hash Join  (cost=211111.00..287847.00 rows=2208 width=33) (actual time=120.564..140.126 rows=2208 loops=1)
                                                        Hash Cond: (cc.status_id = cct2.id)
                                                        ->  Nested Loop  (cost=211104.00..285440.00 rows=3200 width=37) (actual time=120.559..139.577 rows=3200 loops=1)
                                                              ->  Merge Join  (cost=211104.00..215324.00 rows=11686 width=25) (actual time=120.534..123.538 rows=11686 loops=1)
                                                                    Merge Cond: (kt.id = t.kind_id)
                                                                    ->  Sort  (cost=7.00..7.00 rows=2 width=4) (actual time=0.006..0.006 rows=2 loops=1)
                                                                          Sort Key: kt.id
                                                                          Sort Method: quicksort  Memory: 25kB
                                                                          ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=2 width=4) (actual time=0.002..0.003 rows=2 loops=1)
                                                                                Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                                Rows Removed by Filter: 5
                                                                    ->  Sort  (cost=211097.00..211097.00 rows=14771 width=29) (actual time=120.525..121.421 rows=14771 loops=1)
                                                                          Sort Key: t.kind_id
                                                                          Sort Method: quicksort  Memory: 1572kB
                                                                          ->  Nested Loop  (cost=0.00..211097.00 rows=14771 width=29) (actual time=0.801..117.749 rows=14771 loops=1)
                                                                                ->  Nested Loop  (cost=0.00..136915.00 rows=37091 width=4) (actual time=0.797..40.111 rows=37091 loops=1)
                                                                                      ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=3 width=4) (actual time=0.790..16.060 rows=3 loops=1)
                                                                                            Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                            Rows Removed by Filter: 134167
                                                                                      ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.006..6.604 rows=12364 loops=3)
                                                                                            Index Cond: (keyword_id = k.id)
                                                                                ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=37091)
                                                                                      Index Cond: (id = mk.movie_id)
                                                                                      Filter: (production_year > 2000)
                                                                                      Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..4.00 rows=2 width=12) (actual time=0.001..0.001 rows=0 loops=11686)
                                                                    Index Cond: (movie_id = t.id)
                                                        ->  Hash  (cost=4.00..4.00 rows=3 width=4) (actual time=0.003..0.003 rows=3 loops=1)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                              ->  Seq Scan on comp_cast_type cct2  (cost=0.00..4.00 rows=3 width=4) (actual time=0.001..0.002 rows=3 loops=1)
                                                                    Filter: ((kind)::text <> 'complete+verified'::text)
                                                                    Rows Removed by Filter: 1
                                                  ->  Hash  (cost=4.00..4.00 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on comp_cast_type cct1  (cost=0.00..4.00 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'crew'::text)
                                                              Rows Removed by Filter: 3
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..6.00 rows=3 width=13) (actual time=0.003..0.003 rows=3 loops=549)
                                                  Index Cond: (movie_id = t.id)
                                                  Filter: (info < '8.5'::text)
                                                  Rows Removed by Filter: 0
                                      ->  Hash  (cost=113.00..113.00 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                            ->  Seq Scan on info_type it2  (cost=0.00..113.00 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                                  Filter: ((info)::text = 'rating'::text)
                                                  Rows Removed by Filter: 112
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=1 width=12) (actual time=0.004..0.010 rows=10 loops=473)
                                      Index Cond: (movie_id = t.id)
                                      Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                      Rows Removed by Filter: 9
                          ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=4535)
                                Index Cond: (id = mc.company_id)
                                Filter: ((country_code)::text <> '[us]'::text)
                                Rows Removed by Filter: 0
                    ->  Hash  (cost=4.00..4.00 rows=4 width=4) (actual time=0.007..0.007 rows=4 loops=1)
                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                          ->  Seq Scan on company_type ct  (cost=0.00..4.00 rows=4 width=4) (actual time=0.004..0.005 rows=4 loops=1)
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=2 width=8) (actual time=0.068..0.077 rows=1 loops=4410)
                    Index Cond: (movie_id = t.id)
                    Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                    Rows Removed by Filter: 247
        ->  Index Scan using info_type_pkey on info_type it1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=5295)
              Index Cond: (id = mi.info_type_id)
              Filter: ((info)::text = 'countries'::text)
              Rows Removed by Filter: 0
Planning time: 54.521 ms
Execution time: 508.597 ms
