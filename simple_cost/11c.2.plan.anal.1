Aggregate  (cost=394799.25..394800.25 rows=1 width=96) (actual time=119.475..119.475 rows=1 loops=1)
  ->  Nested Loop  (cost=166919.00..394799.25 rows=1 width=60) (actual time=59.654..116.501 rows=6946 loops=1)
        ->  Nested Loop  (cost=166919.00..394797.25 rows=1 width=55) (actual time=59.648..105.355 rows=6946 loops=1)
              ->  Nested Loop  (cost=166919.00..394795.04 rows=1 width=59) (actual time=59.643..98.341 rows=6946 loops=1)
                    ->  Hash Join  (cost=166919.00..394649.00 rows=73 width=44) (actual time=59.084..73.718 rows=14916 loops=1)
                          Hash Cond: (mc.company_type_id = ct.id)
                          ->  Nested Loop  (cost=166912.00..365824.00 rows=38424 width=48) (actual time=59.073..70.402 rows=15510 loops=1)
                                ->  Merge Join  (cost=166912.00..181120.00 rows=14208 width=12) (actual time=59.064..62.847 rows=1460 loops=1)
                                      Merge Cond: (mk.movie_id = ml.movie_id)
                                      ->  Sort  (cost=136915.00..136915.00 rows=47403 width=4) (actual time=51.934..51.972 rows=481 loops=1)
                                            Sort Key: mk.movie_id
                                            Sort Method: quicksort  Memory: 3759kB
                                            ->  Nested Loop  (cost=0.00..136915.00 rows=47403 width=4) (actual time=0.614..42.939 rows=47403 loops=1)
                                                  ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=3 width=4) (actual time=0.602..14.078 rows=3 loops=1)
                                                        Filter: (keyword = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                                        Rows Removed by Filter: 134167
                                                  ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.010..7.835 rows=15801 loops=3)
                                                        Index Cond: (keyword_id = k.id)
                                      ->  Sort  (cost=29997.00..29997.00 rows=29997 width=8) (actual time=7.111..8.684 rows=30043 loops=1)
                                            Sort Key: ml.movie_id
                                            Sort Method: quicksort  Memory: 2175kB
                                            ->  Seq Scan on movie_link ml  (cost=0.00..29997.00 rows=29997 width=8) (actual time=0.007..3.045 rows=29997 loops=1)
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=3 width=36) (actual time=0.002..0.004 rows=11 loops=1460)
                                      Index Cond: (movie_id = ml.movie_id)
                                      Filter: (note IS NOT NULL)
                                      Rows Removed by Filter: 2
                          ->  Hash  (cost=4.00..4.00 rows=3 width=4) (actual time=0.007..0.007 rows=3 loops=1)
                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                ->  Seq Scan on company_type ct  (cost=0.00..4.00 rows=3 width=4) (actual time=0.004..0.005 rows=3 loops=1)
                                      Filter: (((kind)::text <> 'production companies'::text) AND (kind IS NOT NULL))
                                      Rows Removed by Filter: 1
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=23) (actual time=0.001..0.001 rows=0 loops=14916)
                          Index Cond: (id = mc.company_id)
                          Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '20th Century Fox%'::text) OR (name ~~ 'Twentieth Century Fox%'::text)))
                          Rows Removed by Filter: 1
              ->  Index Only Scan using link_type_pkey on link_type lt  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6946)
                    Index Cond: (id = ml.link_type_id)
                    Heap Fetches: 6946
        ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=6946)
              Index Cond: (id = ml.movie_id)
              Filter: (production_year > 1950)
Planning time: 3.175 ms
Execution time: 119.530 ms
