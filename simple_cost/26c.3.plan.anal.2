Aggregate  (cost=202463.00..202464.00 rows=1 width=96) (actual time=553.943..553.943 rows=1 loops=1)
  ->  Nested Loop  (cost=191520.00..202463.00 rows=1 width=38) (actual time=106.779..551.946 rows=5400 loops=1)
        ->  Nested Loop  (cost=191520.00..202461.00 rows=1 width=42) (actual time=106.772..531.628 rows=5400 loops=1)
              ->  Nested Loop  (cost=191520.00..202433.00 rows=14 width=30) (actual time=106.761..298.995 rows=189738 loops=1)
                    ->  Nested Loop  (cost=191520.00..202325.00 rows=1 width=38) (actual time=106.742..128.536 rows=1261 loops=1)
                          ->  Nested Loop  (cost=191520.00..202313.00 rows=5 width=42) (actual time=106.736..124.349 rows=3831 loops=1)
                                ->  Hash Join  (cost=191520.00..202223.00 rows=10 width=29) (actual time=106.731..118.432 rows=1267 loops=1)
                                      Hash Cond: (cc.subject_id = cct1.id)
                                      ->  Hash Join  (cost=191515.00..202188.00 rows=40 width=33) (actual time=106.715..118.041 rows=1485 loops=1)
                                            Hash Cond: (cc.status_id = cct2.id)
                                            ->  Nested Loop  (cost=191509.00..202121.00 rows=81 width=37) (actual time=106.708..117.635 rows=1485 loops=1)
                                                  ->  Merge Join  (cost=191509.00..193025.00 rows=1516 width=25) (actual time=106.699..108.314 rows=5032 loops=1)
                                                        Merge Cond: (kt.id = t.kind_id)
                                                        ->  Sort  (cost=7.00..7.00 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                              Sort Key: kt.id
                                                              Sort Method: quicksort  Memory: 25kB
                                                              ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'movie'::text)
                                                                    Rows Removed by Filter: 6
                                                        ->  Sort  (cost=191502.00..191502.00 rows=10613 width=29) (actual time=106.691..107.274 rows=5033 loops=1)
                                                              Sort Key: t.kind_id
                                                              Sort Method: quicksort  Memory: 1275kB
                                                              ->  Nested Loop  (cost=0.00..191502.00 rows=10613 width=29) (actual time=0.119..104.391 rows=10613 loops=1)
                                                                    ->  Nested Loop  (cost=0.00..143320.00 rows=24091 width=4) (actual time=0.113..45.249 rows=24091 loops=1)
                                                                          ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=10 width=4) (actual time=0.101..26.751 rows=10 loops=1)
                                                                                Filter: (keyword = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                                                Rows Removed by Filter: 134160
                                                                          ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.007..1.555 rows=2409 loops=10)
                                                                                Index Cond: (keyword_id = k.id)
                                                                    ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=24091)
                                                                          Index Cond: (id = mk.movie_id)
                                                                          Filter: (production_year > 2000)
                                                                          Rows Removed by Filter: 1
                                                  ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..4.00 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=5032)
                                                        Index Cond: (movie_id = t.id)
                                            ->  Hash  (cost=4.00..4.00 rows=2 width=4) (actual time=0.003..0.003 rows=2 loops=1)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                  ->  Seq Scan on comp_cast_type cct2  (cost=0.00..4.00 rows=2 width=4) (actual time=0.002..0.002 rows=2 loops=1)
                                                        Filter: ((kind)::text ~~ '%complete%'::text)
                                                        Rows Removed by Filter: 2
                                      ->  Hash  (cost=4.00..4.00 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                            ->  Seq Scan on comp_cast_type cct1  (cost=0.00..4.00 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'cast'::text)
                                                  Rows Removed by Filter: 3
                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..6.00 rows=3 width=13) (actual time=0.003..0.004 rows=3 loops=1267)
                                      Index Cond: (movie_id = t.id)
                          ->  Index Scan using info_type_pkey on info_type it2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=3831)
                                Index Cond: (id = mi_idx.info_type_id)
                                Filter: ((info)::text = 'rating'::text)
                                Rows Removed by Filter: 1
                    ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.00..72.00 rows=36 width=12) (actual time=0.006..0.113 rows=150 loops=1261)
                          Index Cond: (movie_id = t.id)
              ->  Index Scan using char_name_pkey on char_name chn  (cost=0.00..2.00 rows=1 width=20) (actual time=0.001..0.001 rows=0 loops=189738)
                    Index Cond: (id = ci.person_role_id)
                    Filter: ((name IS NOT NULL) AND ((name ~~ '%man%'::text) OR (name ~~ '%Man%'::text)))
                    Rows Removed by Filter: 0
        ->  Index Only Scan using name_pkey on name n  (cost=0.00..2.00 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=5400)
              Index Cond: (id = ci.person_id)
              Heap Fetches: 5400
Planning time: 42.443 ms
Execution time: 554.034 ms
