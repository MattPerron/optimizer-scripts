Aggregate  (cost=20794.00..20795.00 rows=1 width=192) (actual time=12.519..12.519 rows=1 loops=1)
  ->  Nested Loop  (cost=17628.00..20794.00 rows=1 width=82) (actual time=6.150..12.510 rows=8 loops=1)
        ->  Nested Loop  (cost=17628.00..20790.00 rows=1 width=86) (actual time=5.625..11.817 rows=815 loops=1)
              ->  Nested Loop  (cost=17628.00..20788.00 rows=1 width=71) (actual time=5.623..10.462 rows=815 loops=1)
                    ->  Nested Loop  (cost=17628.00..20770.00 rows=8 width=75) (actual time=5.595..8.266 rows=2445 loops=1)
                          ->  Nested Loop  (cost=17628.00..20650.00 rows=8 width=83) (actual time=5.593..7.106 rows=288 loops=1)
                                ->  Hash Join  (cost=17628.00..20524.00 rows=14 width=86) (actual time=5.590..6.846 rows=97 loops=1)
                                      Hash Cond: (t1.kind_id = kt1.id)
                                      ->  Nested Loop  (cost=17620.00..20433.00 rows=97 width=90) (actual time=5.581..6.811 rows=97 loops=1)
                                            ->  Nested Loop  (cost=17620.00..20239.00 rows=97 width=65) (actual time=5.578..6.630 rows=97 loops=1)
                                                  ->  Nested Loop  (cost=17620.00..19419.00 rows=410 width=50) (actual time=5.556..5.925 rows=410 loops=1)
                                                        ->  Merge Join  (cost=17620.00..17664.00 rows=117 width=42) (actual time=5.552..5.584 rows=117 loops=1)
                                                              Merge Cond: (t2.kind_id = kt2.id)
                                                              ->  Sort  (cost=17613.00..17613.00 rows=308 width=46) (actual time=5.542..5.550 rows=129 loops=1)
                                                                    Sort Key: t2.kind_id
                                                                    Sort Method: quicksort  Memory: 63kB
                                                                    ->  Nested Loop  (cost=0.00..17613.00 rows=308 width=46) (actual time=0.046..5.460 rows=308 loops=1)
                                                                          ->  Nested Loop  (cost=0.00..15898.00 rows=245 width=33) (actual time=0.043..4.824 rows=245 loops=1)
                                                                                ->  Nested Loop  (cost=0.00..11268.00 rows=2315 width=8) (actual time=0.012..0.697 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..18.00 rows=2 width=4) (actual time=0.002..0.006 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Index Scan using link_type_id_movie_link on movie_link ml  (cost=0.00..3750.00 rows=1875 width=12) (actual time=0.007..0.207 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                                ->  Index Scan using title_pkey on title t2  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2315)
                                                                                      Index Cond: (id = ml.linked_movie_id)
                                                                                      Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                                                                      Rows Removed by Filter: 1
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.00..6.00 rows=1 width=13) (actual time=0.002..0.002 rows=1 loops=245)
                                                                                Index Cond: (movie_id = t2.id)
                                                                                Filter: (info < '3.0'::text)
                                                                                Rows Removed by Filter: 1
                                                              ->  Sort  (cost=7.00..7.00 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                                    Sort Key: kt2.id
                                                                    Sort Method: quicksort  Memory: 25kB
                                                                    ->  Seq Scan on kind_type kt2  (cost=0.00..7.00 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                                                          Filter: ((kind)::text = 'tv series'::text)
                                                                          Rows Removed by Filter: 6
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.00..10.00 rows=5 width=8) (actual time=0.002..0.002 rows=4 loops=117)
                                                              Index Cond: (movie_id = ml.movie_id)
                                                  ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=410)
                                                        Index Cond: (id = mc1.company_id)
                                                        Filter: ((country_code)::text = '[us]'::text)
                                                        Rows Removed by Filter: 1
                                            ->  Index Scan using title_pkey on title t1  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=97)
                                                  Index Cond: (id = ml.movie_id)
                                      ->  Hash  (cost=7.00..7.00 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                            ->  Seq Scan on kind_type kt1  (cost=0.00..7.00 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'tv series'::text)
                                                  Rows Removed by Filter: 6
                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.00..6.00 rows=3 width=13) (actual time=0.002..0.002 rows=3 loops=97)
                                      Index Cond: (movie_id = t1.id)
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.00..10.00 rows=5 width=8) (actual time=0.001..0.003 rows=8 loops=288)
                                Index Cond: (movie_id = t2.id)
                    ->  Index Scan using info_type_pkey on info_type it1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=2445)
                          Index Cond: (id = mi_idx1.info_type_id)
                          Filter: ((info)::text = 'rating'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.00..2.00 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=815)
                    Index Cond: (id = mc2.company_id)
        ->  Index Scan using info_type_pkey on info_type it2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=815)
              Index Cond: (id = mi_idx2.info_type_id)
              Filter: ((info)::text = 'rating'::text)
              Rows Removed by Filter: 1
Planning time: 60.289 ms
Execution time: 12.599 ms
