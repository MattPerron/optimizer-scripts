Aggregate  (cost=145741.00..145742.00 rows=1 width=96) (actual time=23.335..23.336 rows=1 loops=1)
  ->  Nested Loop  (cost=145723.00..145741.00 rows=1 width=48) (actual time=20.574..22.971 rows=1620 loops=1)
        ->  Nested Loop  (cost=145723.00..145735.00 rows=1 width=60) (actual time=20.569..21.646 rows=540 loops=1)
              ->  Merge Join  (cost=145723.00..145727.00 rows=4 width=41) (actual time=20.564..20.713 rows=540 loops=1)
                    Merge Cond: (cc.status_id = cct2.id)
                    ->  Sort  (cost=145719.00..145719.00 rows=14 width=45) (actual time=20.557..20.586 rows=540 loops=1)
                          Sort Key: cc.status_id
                          Sort Method: quicksort  Memory: 67kB
                          ->  Merge Join  (cost=145705.00..145719.00 rows=14 width=45) (actual time=20.379..20.478 rows=540 loops=1)
                                Merge Cond: (it3.id = pi.info_type_id)
                                ->  Sort  (cost=113.00..113.00 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=1)
                                      Sort Key: it3.id
                                      Sort Method: quicksort  Memory: 25kB
                                      ->  Seq Scan on info_type it3  (cost=0.00..113.00 rows=1 width=4) (actual time=0.007..0.013 rows=1 loops=1)
                                            Filter: ((info)::text = 'trivia'::text)
                                            Rows Removed by Filter: 112
                                ->  Sort  (cost=145592.00..145592.00 rows=1630 width=49) (actual time=20.338..20.373 rows=731 loops=1)
                                      Sort Key: pi.info_type_id
                                      Sort Method: quicksort  Memory: 176kB
                                      ->  Nested Loop  (cost=0.00..145592.00 rows=1630 width=49) (actual time=1.150..20.011 rows=1630 loops=1)
                                            ->  Nested Loop  (cost=0.00..144842.00 rows=10 width=41) (actual time=1.147..19.532 rows=10 loops=1)
                                                  ->  Nested Loop  (cost=0.00..144821.00 rows=10 width=45) (actual time=1.145..19.519 rows=10 loops=1)
                                                        ->  Nested Loop  (cost=0.00..144799.00 rows=10 width=49) (actual time=1.143..19.505 rows=10 loops=1)
                                                              ->  Nested Loop  (cost=0.00..144711.00 rows=44 width=53) (actual time=1.139..19.396 rows=44 loops=1)
                                                                    ->  Nested Loop  (cost=0.00..141365.00 rows=1672 width=41) (actual time=1.037..16.178 rows=1672 loops=1)
                                                                          ->  Nested Loop  (cost=0.00..138153.00 rows=44 width=49) (actual time=1.032..11.308 rows=44 loops=1)
                                                                                ->  Nested Loop  (cost=0.00..137889.00 rows=44 width=37) (actual time=1.028..11.209 rows=44 loops=1)
                                                                                      ->  Nested Loop  (cost=0.00..137799.00 rows=44 width=41) (actual time=1.026..11.151 rows=44 loops=1)
                                                                                            ->  Nested Loop  (cost=0.00..135929.00 rows=22 width=33) (actual time=1.012..8.991 rows=22 loops=1)
                                                                                                  ->  Nested Loop  (cost=0.00..135914.00 rows=1 width=25) (actual time=1.008..8.977 rows=1 loops=1)
                                                                                                        ->  Nested Loop  (cost=0.00..135085.00 rows=414 width=4) (actual time=0.033..7.907 rows=414 loops=1)
                                                                                                              ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=1 width=4) (actual time=0.026..7.667 rows=1 loops=1)
                                                                                                                    Filter: (keyword = 'computer-animation'::text)
                                                                                                                    Rows Removed by Filter: 134169
                                                                                                              ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.007..0.196 rows=414 loops=1)
                                                                                                                    Index Cond: (keyword_id = k.id)
                                                                                                        ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=414)
                                                                                                              Index Cond: (id = mk.movie_id)
                                                                                                              Filter: ((production_year >= 2000) AND (production_year <= 2010) AND (title = 'Shrek 2'::text))
                                                                                                              Rows Removed by Filter: 1
                                                                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=5 width=8) (actual time=0.004..0.009 rows=22 loops=1)
                                                                                                        Index Cond: (movie_id = t.id)
                                                                                            ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=1 width=8) (actual time=0.010..0.098 rows=2 loops=22)
                                                                                                  Index Cond: (movie_id = t.id)
                                                                                                  Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%200%'::text) OR (info ~~ 'USA:%200%'::text)))
                                                                                                  Rows Removed by Filter: 455
                                                                                      ->  Index Scan using info_type_pkey on info_type it  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=44)
                                                                                            Index Cond: (id = mi.info_type_id)
                                                                                            Filter: ((info)::text = 'release dates'::text)
                                                                                ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..4.00 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=44)
                                                                                      Index Cond: (movie_id = t.id)
                                                                          ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.00..72.00 rows=1 width=16) (actual time=0.003..0.106 rows=38 loops=44)
                                                                                Index Cond: (movie_id = t.id)
                                                                                Filter: (note = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                Rows Removed by Filter: 191
                                                                    ->  Index Scan using char_name_pkey on char_name chn  (cost=0.00..2.00 rows=1 width=20) (actual time=0.002..0.002 rows=0 loops=1672)
                                                                          Index Cond: (id = ci.person_role_id)
                                                                          Filter: (name = 'Queen'::text)
                                                                          Rows Removed by Filter: 1
                                                              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=44)
                                                                    Index Cond: (id = mc.company_id)
                                                                    Filter: ((country_code)::text = '[us]'::text)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=10)
                                                              Index Cond: (id = cc.subject_id)
                                                              Filter: ((kind)::text = 'cast'::text)
                                                  ->  Index Scan using role_type_pkey on role_type rt  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=10)
                                                        Index Cond: (id = ci.role_id)
                                                        Filter: ((role)::text = 'actress'::text)
                                            ->  Index Scan using person_id_person_info on person_info pi  (cost=0.00..50.00 rows=25 width=8) (actual time=0.002..0.027 rows=163 loops=10)
                                                  Index Cond: (person_id = ci.person_id)
                    ->  Sort  (cost=4.00..4.00 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                          Sort Key: cct2.id
                          Sort Method: quicksort  Memory: 25kB
                          ->  Seq Scan on comp_cast_type cct2  (cost=0.00..4.00 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                Filter: ((kind)::text = 'complete+verified'::text)
                                Rows Removed by Filter: 3
              ->  Index Scan using name_pkey on name n  (cost=0.00..2.00 rows=1 width=19) (actual time=0.001..0.001 rows=1 loops=540)
                    Index Cond: (id = ci.person_id)
                    Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
        ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.00..4.00 rows=2 width=4) (actual time=0.001..0.002 rows=3 loops=540)
              Index Cond: (person_id = n.id)
              Heap Fetches: 1620
Planning time: 74.131 ms
Execution time: 23.426 ms
