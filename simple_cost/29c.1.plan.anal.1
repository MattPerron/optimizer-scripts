Aggregate  (cost=136611.00..136612.00 rows=1 width=96) (actual time=563.823..563.823 rows=1 loops=1)
  ->  Nested Loop  (cost=0.00..136611.00 rows=1 width=48) (actual time=102.640..559.117 rows=16308 loops=1)
        ->  Nested Loop  (cost=0.00..136609.00 rows=1 width=36) (actual time=36.610..533.625 rows=16740 loops=1)
              ->  Nested Loop  (cost=0.00..136605.00 rows=2 width=33) (actual time=7.857..409.676 rows=74090 loops=1)
                    ->  Nested Loop  (cost=0.00..136599.00 rows=1 width=29) (actual time=7.852..348.673 rows=23527 loops=1)
                          ->  Nested Loop  (cost=0.00..136595.00 rows=1 width=33) (actual time=7.837..261.950 rows=95052 loops=1)
                                ->  Nested Loop  (cost=0.00..136543.00 rows=25 width=37) (actual time=7.834..176.338 rows=95052 loops=1)
                                      ->  Nested Loop  (cost=0.00..136468.00 rows=1 width=29) (actual time=7.828..144.776 rows=2088 loops=1)
                                            ->  Nested Loop  (cost=0.00..136464.00 rows=1 width=33) (actual time=2.964..137.856 rows=7874 loops=1)
                                                  ->  Nested Loop  (cost=0.00..136460.00 rows=1 width=37) (actual time=2.904..111.917 rows=28594 loops=1)
                                                        ->  Nested Loop  (cost=0.00..136387.00 rows=1 width=45) (actual time=2.897..36.061 rows=930 loops=1)
                                                              ->  Nested Loop  (cost=0.00..136383.00 rows=1 width=49) (actual time=2.895..34.938 rows=1082 loops=1)
                                                                    ->  Nested Loop  (cost=0.00..136377.00 rows=1 width=37) (actual time=0.171..32.182 rows=1425 loops=1)
                                                                          ->  Nested Loop  (cost=0.00..136373.00 rows=2 width=41) (actual time=0.167..20.780 rows=5738 loops=1)
                                                                                ->  Nested Loop  (cost=0.00..136343.00 rows=2 width=33) (actual time=0.147..17.893 rows=357 loops=1)
                                                                                      ->  Nested Loop  (cost=0.00..135153.00 rows=14 width=25) (actual time=0.041..9.346 rows=249 loops=1)
                                                                                            ->  Nested Loop  (cost=0.00..135085.00 rows=34 width=4) (actual time=0.037..8.209 rows=414 loops=1)
                                                                                                  ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=1 width=4) (actual time=0.028..7.886 rows=1 loops=1)
                                                                                                        Filter: (keyword = 'computer-animation'::text)
                                                                                                        Rows Removed by Filter: 134169
                                                                                                  ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.008..0.264 rows=414 loops=1)
                                                                                                        Index Cond: (keyword_id = k.id)
                                                                                            ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=414)
                                                                                                  Index Cond: (id = mk.movie_id)
                                                                                                  Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                                                  Rows Removed by Filter: 0
                                                                                      ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=1 width=8) (actual time=0.012..0.034 rows=1 loops=249)
                                                                                            Index Cond: (movie_id = t.id)
                                                                                            Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%200%'::text) OR (info ~~ 'USA:%200%'::text)))
                                                                                            Rows Removed by Filter: 88
                                                                                ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=5 width=8) (actual time=0.003..0.006 rows=16 loops=357)
                                                                                      Index Cond: (movie_id = t.id)
                                                                          ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=5738)
                                                                                Index Cond: (id = mc.company_id)
                                                                                Filter: ((country_code)::text = '[us]'::text)
                                                                                Rows Removed by Filter: 1
                                                                    ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..4.00 rows=2 width=12) (actual time=0.001..0.002 rows=1 loops=1425)
                                                                          Index Cond: (movie_id = t.id)
                                                              ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1082)
                                                                    Index Cond: (id = cc.subject_id)
                                                                    Filter: ((kind)::text = 'cast'::text)
                                                                    Rows Removed by Filter: 0
                                                        ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.00..72.00 rows=1 width=16) (actual time=0.007..0.077 rows=31 loops=930)
                                                              Index Cond: (movie_id = t.id)
                                                              Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                              Rows Removed by Filter: 131
                                                  ->  Index Scan using role_type_pkey on role_type rt  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=28594)
                                                        Index Cond: (id = ci.role_id)
                                                        Filter: ((role)::text = 'actress'::text)
                                                        Rows Removed by Filter: 1
                                            ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=7874)
                                                  Index Cond: (id = cc.status_id)
                                                  Filter: ((kind)::text = 'complete+verified'::text)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using person_id_person_info on person_info pi  (cost=0.00..50.00 rows=25 width=8) (actual time=0.002..0.009 rows=46 loops=2088)
                                            Index Cond: (person_id = ci.person_id)
                                ->  Index Scan using info_type_pkey on info_type it  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=95052)
                                      Index Cond: (id = mi.info_type_id)
                                      Filter: ((info)::text = 'release dates'::text)
                          ->  Index Scan using info_type_pkey on info_type it3  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=95052)
                                Index Cond: (id = pi.info_type_id)
                                Filter: ((info)::text = 'trivia'::text)
                                Rows Removed by Filter: 1
                    ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.00..4.00 rows=2 width=4) (actual time=0.001..0.002 rows=3 loops=23527)
                          Index Cond: (person_id = ci.person_id)
                          Heap Fetches: 74090
              ->  Index Scan using name_pkey on name n  (cost=0.00..2.00 rows=1 width=19) (actual time=0.001..0.001 rows=0 loops=74090)
                    Index Cond: (id = ci.person_id)
                    Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                    Rows Removed by Filter: 1
        ->  Index Scan using char_name_pkey on char_name chn  (cost=0.00..2.00 rows=1 width=20) (actual time=0.001..0.001 rows=1 loops=16740)
              Index Cond: (id = ci.person_role_id)
Planning time: 73.490 ms
Execution time: 563.908 ms
