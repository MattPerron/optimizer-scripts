Aggregate  (cost=254909.00..254910.00 rows=1 width=96) (actual time=111.618..111.618 rows=1 loops=1)
  ->  Nested Loop  (cost=253751.00..254909.00 rows=1 width=48) (actual time=108.328..111.536 rows=275 loops=1)
        ->  Nested Loop  (cost=253751.00..254903.00 rows=1 width=56) (actual time=108.285..111.232 rows=141 loops=1)
              ->  Nested Loop  (cost=253751.00..254899.00 rows=2 width=60) (actual time=108.039..110.650 rows=300 loops=1)
                    ->  Nested Loop  (cost=253751.00..254869.00 rows=2 width=72) (actual time=108.032..110.458 rows=36 loops=1)
                          ->  Nested Loop  (cost=253751.00..254861.00 rows=4 width=60) (actual time=108.026..110.350 rows=37 loops=1)
                                ->  Merge Join  (cost=253751.00..254121.00 rows=370 width=41) (actual time=107.911..108.162 rows=984 loops=1)
                                      Merge Cond: (rt.id = ci.role_id)
                                      ->  Sort  (cost=12.00..12.00 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                            Sort Key: rt.id
                                            Sort Method: quicksort  Memory: 25kB
                                            ->  Seq Scan on role_type rt  (cost=0.00..12.00 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                                                  Filter: ((role)::text = 'actress'::text)
                                                  Rows Removed by Filter: 11
                                      ->  Sort  (cost=253739.00..253739.00 rows=4439 width=45) (actual time=107.489..107.699 rows=4432 loops=1)
                                            Sort Key: ci.role_id
                                            Sort Method: quicksort  Memory: 678kB
                                            ->  Nested Loop  (cost=0.00..253739.00 rows=4439 width=45) (actual time=0.189..106.508 rows=4439 loops=1)
                                                  ->  Nested Loop  (cost=0.00..199865.00 rows=738 width=29) (actual time=0.057..55.254 rows=738 loops=1)
                                                        ->  Nested Loop  (cost=0.00..198382.00 rows=738 width=33) (actual time=0.055..54.443 rows=738 loops=1)
                                                              ->  Nested Loop  (cost=0.00..156307.00 rows=495 width=25) (actual time=0.048..40.860 rows=495 loops=1)
                                                                    ->  Nested Loop  (cost=0.00..136915.00 rows=9696 width=4) (actual time=0.017..20.304 rows=9696 loops=1)
                                                                          ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=3 width=4) (actual time=0.008..14.136 rows=3 loops=1)
                                                                                Filter: (keyword = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                                Rows Removed by Filter: 134167
                                                                          ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.006..1.681 rows=3232 loops=3)
                                                                                Index Cond: (keyword_id = k.id)
                                                                    ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=9696)
                                                                          Index Cond: (id = mk.movie_id)
                                                                          Filter: (production_year > 2010)
                                                                          Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=1 width=8) (actual time=0.010..0.027 rows=1 loops=495)
                                                                    Index Cond: (movie_id = t.id)
                                                                    Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%201%'::text) OR (info ~~ 'USA:%201%'::text)))
                                                                    Rows Removed by Filter: 70
                                                        ->  Index Scan using info_type_pkey on info_type it  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=738)
                                                              Index Cond: (id = mi.info_type_id)
                                                              Filter: ((info)::text = 'release dates'::text)
                                                  ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.00..72.00 rows=1 width=16) (actual time=0.044..0.068 rows=6 loops=738)
                                                        Index Cond: (movie_id = t.id)
                                                        Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                        Rows Removed by Filter: 128
                                ->  Index Scan using name_pkey on name n  (cost=0.00..2.00 rows=1 width=19) (actual time=0.002..0.002 rows=0 loops=984)
                                      Index Cond: (id = ci.person_id)
                                      Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                      Rows Removed by Filter: 1
                          ->  Index Scan using char_name_pkey on char_name chn  (cost=0.00..2.00 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=37)
                                Index Cond: (id = ci.person_role_id)
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=5 width=8) (actual time=0.002..0.004 rows=8 loops=36)
                          Index Cond: (movie_id = t.id)
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=300)
                    Index Cond: (id = mc.company_id)
                    Filter: ((country_code)::text = '[us]'::text)
                    Rows Removed by Filter: 1
        ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.00..4.00 rows=2 width=4) (actual time=0.001..0.002 rows=2 loops=141)
              Index Cond: (person_id = n.id)
              Heap Fetches: 275
Planning time: 46.801 ms
Execution time: 111.688 ms
