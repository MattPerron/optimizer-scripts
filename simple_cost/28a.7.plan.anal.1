Aggregate  (cost=520373.20..520374.20 rows=1 width=96) (actual time=629.430..629.430 rows=1 loops=1)
  ->  Nested Loop  (cost=386114.00..520373.20 rows=1 width=41) (actual time=167.725..627.732 rows=4803 loops=1)
        ->  Nested Loop  (cost=386114.00..520371.20 rows=1 width=26) (actual time=167.719..618.103 rows=4955 loops=1)
              ->  Nested Loop  (cost=386114.00..520365.20 rows=2 width=30) (actual time=167.713..602.426 rows=15789 loops=1)
                    ->  Nested Loop  (cost=386114.00..520329.20 rows=4 width=41) (actual time=167.705..587.452 rows=5271 loops=1)
                          ->  Hash Join  (cost=386114.00..520322.00 rows=4 width=45) (actual time=167.701..582.029 rows=5271 loops=1)
                                Hash Cond: (mi.info_type_id = it1.id)
                                ->  Nested Loop  (cost=386000.00..519805.00 rows=407 width=49) (actual time=167.684..580.637 rows=5848 loops=1)
                                      ->  Hash Join  (cost=386000.00..396223.00 rows=1437 width=41) (actual time=167.163..169.804 rows=4858 loops=1)
                                            Hash Cond: (t.kind_id = kt.id)
                                            ->  Merge Join  (cost=385991.00..391903.00 rows=5030 width=45) (actual time=167.156..168.585 rows=5030 loops=1)
                                                  Merge Cond: (cc.subject_id = cct1.id)
                                                  ->  Sort  (cost=385987.00..385987.00 rows=23648 width=49) (actual time=165.088..166.258 rows=23648 loops=1)
                                                        Sort Key: cc.subject_id
                                                        Sort Method: quicksort  Memory: 3075kB
                                                        ->  Nested Loop  (cost=272008.00..385987.00 rows=23648 width=49) (actual time=85.318..161.041 rows=23648 loops=1)
                                                              ->  Nested Loop  (cost=272008.00..358344.00 rows=2513 width=37) (actual time=85.236..136.939 rows=2513 loops=1)
                                                                    ->  Hash Join  (cost=272008.00..337272.00 rows=10536 width=12) (actual time=85.147..113.772 rows=10536 loops=1)
                                                                          Hash Cond: (cc.status_id = cct2.id)
                                                                          ->  Merge Join  (cost=272001.00..322247.00 rows=20024 width=16) (actual time=85.140..110.912 rows=20024 loops=1)
                                                                                Merge Cond: (mk.movie_id = cc.movie_id)
                                                                                ->  Sort  (cost=136915.00..136915.00 rows=37091 width=4) (actual time=46.510..48.845 rows=37091 loops=1)
                                                                                      Sort Key: mk.movie_id
                                                                                      Sort Method: quicksort  Memory: 3275kB
                                                                                      ->  Nested Loop  (cost=0.00..136915.00 rows=37091 width=4) (actual time=0.817..40.026 rows=37091 loops=1)
                                                                                            ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=3 width=4) (actual time=0.808..15.228 rows=3 loops=1)
                                                                                                  Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                                  Rows Removed by Filter: 134167
                                                                                            ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.007..6.897 rows=12364 loops=3)
                                                                                                  Index Cond: (keyword_id = k.id)
                                                                                ->  Sort  (cost=135086.00..135086.00 rows=135086 width=12) (actual time=38.572..46.675 rows=138007 loops=1)
                                                                                      Sort Key: cc.movie_id
                                                                                      Sort Method: quicksort  Memory: 12477kB
                                                                                      ->  Seq Scan on complete_cast cc  (cost=0.00..135086.00 rows=135086 width=12) (actual time=0.006..13.318 rows=135086 loops=1)
                                                                          ->  Hash  (cost=4.00..4.00 rows=3 width=4) (actual time=0.003..0.003 rows=3 loops=1)
                                                                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                ->  Seq Scan on comp_cast_type cct2  (cost=0.00..4.00 rows=3 width=4) (actual time=0.002..0.002 rows=3 loops=1)
                                                                                      Filter: ((kind)::text <> 'complete+verified'::text)
                                                                                      Rows Removed by Filter: 1
                                                                    ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=10536)
                                                                          Index Cond: (id = mk.movie_id)
                                                                          Filter: (production_year > 2000)
                                                                          Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=1 width=12) (actual time=0.003..0.008 rows=9 loops=2513)
                                                                    Index Cond: (movie_id = t.id)
                                                                    Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                                                    Rows Removed by Filter: 9
                                                  ->  Sort  (cost=4.00..4.00 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                        Sort Key: cct1.id
                                                        Sort Method: quicksort  Memory: 25kB
                                                        ->  Seq Scan on comp_cast_type cct1  (cost=0.00..4.00 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'crew'::text)
                                                              Rows Removed by Filter: 3
                                            ->  Hash  (cost=7.00..7.00 rows=2 width=4) (actual time=0.004..0.004 rows=2 loops=1)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                  ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=2 width=4) (actual time=0.002..0.003 rows=2 loops=1)
                                                        Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                        Rows Removed by Filter: 5
                                      ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=2 width=8) (actual time=0.073..0.084 rows=1 loops=4858)
                                            Index Cond: (movie_id = t.id)
                                            Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                            Rows Removed by Filter: 269
                                ->  Hash  (cost=113.00..113.00 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                      ->  Seq Scan on info_type it1  (cost=0.00..113.00 rows=1 width=4) (actual time=0.007..0.013 rows=1 loops=1)
                                            Filter: ((info)::text = 'countries'::text)
                                            Rows Removed by Filter: 112
                          ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=5271)
                                Index Cond: (id = mc.company_type_id)
                                Heap Fetches: 5271
                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..6.00 rows=3 width=13) (actual time=0.002..0.002 rows=3 loops=5271)
                          Index Cond: (movie_id = t.id)
                          Filter: (info < '8.5'::text)
                          Rows Removed by Filter: 0
              ->  Index Scan using info_type_pkey on info_type it2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=15789)
                    Index Cond: (id = mi_idx.info_type_id)
                    Filter: ((info)::text = 'rating'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=4955)
              Index Cond: (id = mc.company_id)
              Filter: ((country_code)::text <> '[us]'::text)
              Rows Removed by Filter: 0
Planning time: 54.484 ms
Execution time: 629.517 ms
