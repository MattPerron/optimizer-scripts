Aggregate  (cost=44974.00..44975.00 rows=1 width=192) (actual time=17.687..17.687 rows=1 loops=1)
  ->  Nested Loop  (cost=44948.00..44974.00 rows=1 width=82) (actual time=17.572..17.679 rows=8 loops=1)
        ->  Nested Loop  (cost=44948.00..44970.00 rows=1 width=86) (actual time=17.569..17.652 rows=24 loops=1)
              ->  Nested Loop  (cost=44948.00..44966.00 rows=1 width=90) (actual time=17.567..17.628 rows=24 loops=1)
                    ->  Nested Loop  (cost=44948.00..44964.00 rows=1 width=75) (actual time=17.565..17.584 rows=24 loops=1)
                          ->  Merge Join  (cost=44948.00..44949.00 rows=1 width=83) (actual time=17.561..17.563 rows=6 loops=1)
                                Merge Cond: (mi_idx2.info_type_id = it2.id)
                                ->  Sort  (cost=44835.00..44835.00 rows=99 width=87) (actual time=17.466..17.498 rows=633 loops=1)
                                      Sort Key: mi_idx2.info_type_id
                                      Sort Method: quicksort  Memory: 134kB
                                      ->  Merge Join  (cost=44736.00..44835.00 rows=99 width=87) (actual time=17.140..17.301 rows=633 loops=1)
                                            Merge Cond: (kt1.id = t1.kind_id)
                                            ->  Sort  (cost=7.00..7.00 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                  Sort Key: kt1.id
                                                  Sort Method: quicksort  Memory: 25kB
                                                  ->  Seq Scan on kind_type kt1  (cost=0.00..7.00 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                        Filter: ((kind)::text = 'tv series'::text)
                                                        Rows Removed by Filter: 6
                                            ->  Sort  (cost=44729.00..44729.00 rows=693 width=91) (actual time=17.132..17.163 rows=634 loops=1)
                                                  Sort Key: t1.kind_id
                                                  Sort Method: quicksort  Memory: 149kB
                                                  ->  Nested Loop  (cost=0.00..44729.00 rows=693 width=91) (actual time=0.585..16.891 rows=693 loops=1)
                                                        ->  Nested Loop  (cost=0.00..43343.00 rows=693 width=82) (actual time=0.583..15.804 rows=693 loops=1)
                                                              ->  Nested Loop  (cost=0.00..41201.00 rows=238 width=69) (actual time=0.581..15.195 rows=238 loops=1)
                                                                    ->  Nested Loop  (cost=0.00..37981.00 rows=1610 width=54) (actual time=0.097..12.507 rows=1610 loops=1)
                                                                          ->  Nested Loop  (cost=0.00..33361.00 rows=308 width=46) (actual time=0.094..11.438 rows=308 loops=1)
                                                                                ->  Nested Loop  (cost=0.00..27473.00 rows=2944 width=21) (actual time=0.017..6.303 rows=2944 loops=1)
                                                                                      ->  Nested Loop  (cost=0.00..11268.00 rows=2315 width=8) (actual time=0.012..0.722 rows=2315 loops=1)
                                                                                            ->  Seq Scan on link_type lt  (cost=0.00..18.00 rows=2 width=4) (actual time=0.002..0.006 rows=2 loops=1)
                                                                                                  Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                                  Rows Removed by Filter: 16
                                                                                            ->  Index Scan using link_type_id_movie_link on movie_link ml  (cost=0.00..3750.00 rows=1875 width=12) (actual time=0.007..0.216 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                                      ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.00..6.00 rows=1 width=13) (actual time=0.002..0.002 rows=1 loops=2315)
                                                                                            Index Cond: (movie_id = ml.linked_movie_id)
                                                                                            Filter: (info < '3.0'::text)
                                                                                            Rows Removed by Filter: 1
                                                                                ->  Index Scan using title_pkey on title t2  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2944)
                                                                                      Index Cond: (id = ml.linked_movie_id)
                                                                                      Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                                                                      Rows Removed by Filter: 1
                                                                          ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.00..10.00 rows=5 width=8) (actual time=0.002..0.003 rows=5 loops=308)
                                                                                Index Cond: (movie_id = ml.movie_id)
                                                                    ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.00..2.00 rows=1 width=23) (actual time=0.001..0.001 rows=0 loops=1610)
                                                                          Index Cond: (id = mc1.company_id)
                                                                          Filter: ((country_code)::text = '[us]'::text)
                                                                          Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.00..6.00 rows=3 width=13) (actual time=0.002..0.002 rows=3 loops=238)
                                                                    Index Cond: (movie_id = ml.movie_id)
                                                        ->  Index Scan using title_pkey on title t1  (cost=0.00..2.00 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=693)
                                                              Index Cond: (id = ml.movie_id)
                                ->  Sort  (cost=113.00..113.00 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=1)
                                      Sort Key: it2.id
                                      Sort Method: quicksort  Memory: 25kB
                                      ->  Seq Scan on info_type it2  (cost=0.00..113.00 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                            Filter: ((info)::text = 'rating'::text)
                                            Rows Removed by Filter: 112
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.00..10.00 rows=5 width=8) (actual time=0.002..0.003 rows=4 loops=6)
                                Index Cond: (movie_id = t2.id)
                    ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.00..2.00 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=24)
                          Index Cond: (id = mc2.company_id)
              ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=24)
                    Index Cond: (id = t2.kind_id)
                    Filter: ((kind)::text = 'tv series'::text)
        ->  Index Scan using info_type_pkey on info_type it1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=24)
              Index Cond: (id = mi_idx1.info_type_id)
              Filter: ((info)::text = 'rating'::text)
              Rows Removed by Filter: 1
Planning time: 60.260 ms
Execution time: 17.769 ms
