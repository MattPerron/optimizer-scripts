Aggregate  (cost=300241.30..300242.30 rows=1 width=96) (actual time=260.772..260.772 rows=1 loops=1)
  ->  Nested Loop  (cost=9.00..300241.30 rows=1 width=41) (actual time=1.502..260.707 rows=148 loops=1)
        ->  Nested Loop  (cost=9.00..300237.30 rows=1 width=45) (actual time=1.500..260.547 rows=149 loops=1)
              ->  Nested Loop  (cost=9.00..300067.30 rows=2 width=61) (actual time=1.144..155.809 rows=1387 loops=1)
                    ->  Nested Loop  (cost=9.00..299667.30 rows=199 width=65) (actual time=1.142..153.965 rows=1652 loops=1)
                          ->  Hash Join  (cost=9.00..287872.30 rows=1685 width=52) (actual time=1.136..149.220 rows=1685 loops=1)
                                Hash Cond: (t.kind_id = kt.id)
                                ->  Nested Loop  (cost=0.00..286330.30 rows=1788 width=56) (actual time=1.126..148.797 rows=1788 loops=1)
                                      ->  Nested Loop  (cost=0.00..282618.30 rows=1856 width=41) (actual time=1.121..144.162 rows=1856 loops=1)
                                            ->  Nested Loop  (cost=0.00..279277.50 rows=1856 width=45) (actual time=1.119..142.129 rows=1856 loops=1)
                                                  ->  Nested Loop  (cost=0.00..275812.50 rows=315 width=33) (actual time=1.113..138.791 rows=315 loops=1)
                                                        ->  Nested Loop  (cost=0.00..272761.50 rows=1356 width=37) (actual time=1.109..137.481 rows=1356 loops=1)
                                                              ->  Nested Loop  (cost=0.00..269531.00 rows=1723 width=41) (actual time=1.107..135.775 rows=1723 loops=1)
                                                                    ->  Nested Loop  (cost=0.00..211097.00 rows=9739 width=29) (actual time=0.811..120.495 rows=9739 loops=1)
                                                                          ->  Nested Loop  (cost=0.00..136915.00 rows=37091 width=4) (actual time=0.807..40.439 rows=37091 loops=1)
                                                                                ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=3 width=4) (actual time=0.799..15.171 rows=3 loops=1)
                                                                                      Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                      Rows Removed by Filter: 134167
                                                                                ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.007..6.988 rows=12364 loops=3)
                                                                                      Index Cond: (keyword_id = k.id)
                                                                          ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=37091)
                                                                                Index Cond: (id = mk.movie_id)
                                                                                Filter: (production_year > 2005)
                                                                                Rows Removed by Filter: 1
                                                                    ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..4.00 rows=2 width=12) (actual time=0.001..0.001 rows=0 loops=9739)
                                                                          Index Cond: (movie_id = t.id)
                                                              ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1723)
                                                                    Index Cond: (id = cc.status_id)
                                                                    Filter: ((kind)::text <> 'complete+verified'::text)
                                                                    Rows Removed by Filter: 0
                                                        ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=1356)
                                                              Index Cond: (id = cc.subject_id)
                                                              Filter: ((kind)::text = 'crew'::text)
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=1 width=12) (actual time=0.005..0.010 rows=6 loops=315)
                                                        Index Cond: (movie_id = t.id)
                                                        Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                                        Rows Removed by Filter: 9
                                            ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1856)
                                                  Index Cond: (id = mc.company_type_id)
                                                  Heap Fetches: 1856
                                      ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=1856)
                                            Index Cond: (id = mc.company_id)
                                            Filter: ((country_code)::text <> '[us]'::text)
                                            Rows Removed by Filter: 0
                                ->  Hash  (cost=7.00..7.00 rows=2 width=4) (actual time=0.005..0.005 rows=2 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                      ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=1)
                                            Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                            Rows Removed by Filter: 5
                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..6.00 rows=1 width=13) (actual time=0.002..0.002 rows=1 loops=1685)
                                Index Cond: (movie_id = t.id)
                                Filter: (info > '6.5'::text)
                                Rows Removed by Filter: 2
                    ->  Index Scan using info_type_pkey on info_type it2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1652)
                          Index Cond: (id = mi_idx.info_type_id)
                          Filter: ((info)::text = 'rating'::text)
                          Rows Removed by Filter: 0
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=1 width=8) (actual time=0.075..0.075 rows=0 loops=1387)
                    Index Cond: (movie_id = t.id)
                    Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                    Rows Removed by Filter: 336
        ->  Index Scan using info_type_pkey on info_type it1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=149)
              Index Cond: (id = mi.info_type_id)
              Filter: ((info)::text = 'countries'::text)
              Rows Removed by Filter: 0
Planning time: 54.608 ms
Execution time: 260.850 ms
