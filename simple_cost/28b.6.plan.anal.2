Aggregate  (cost=343842.00..343843.00 rows=1 width=96) (actual time=248.157..248.157 rows=1 loops=1)
  ->  Nested Loop  (cost=322275.00..343842.00 rows=1 width=41) (actual time=109.650..248.099 rows=148 loops=1)
        ->  Nested Loop  (cost=322275.00..343838.00 rows=1 width=45) (actual time=109.648..247.869 rows=224 loops=1)
              ->  Nested Loop  (cost=322275.00..343831.00 rows=1 width=56) (actual time=109.641..247.338 rows=210 loops=1)
                    ->  Nested Loop  (cost=322275.00..343827.00 rows=1 width=60) (actual time=109.638..247.087 rows=233 loops=1)
                          ->  Hash Join  (cost=322275.00..342637.00 rows=14 width=52) (actual time=108.764..130.264 rows=1685 loops=1)
                                Hash Cond: (mc.company_type_id = ct.id)
                                ->  Nested Loop  (cost=322267.00..342619.00 rows=14 width=56) (actual time=108.753..129.878 rows=1685 loops=1)
                                      ->  Nested Loop  (cost=322267.00..342567.00 rows=26 width=41) (actual time=108.748..126.385 rows=1735 loops=1)
                                            ->  Hash Join  (cost=322267.00..340202.00 rows=215 width=29) (actual time=108.740..123.826 rows=273 loops=1)
                                                  Hash Cond: (cc.status_id = cct2.id)
                                                  ->  Hash Join  (cost=322260.00..339980.00 rows=287 width=33) (actual time=108.734..123.756 rows=287 loops=1)
                                                        Hash Cond: (t.kind_id = kt.id)
                                                        ->  Nested Loop  (cost=322251.00..339689.00 rows=329 width=37) (actual time=108.727..123.679 rows=329 loops=1)
                                                              ->  Merge Join  (cost=322251.00..327257.00 rows=6216 width=12) (actual time=108.453..109.820 rows=6216 loops=1)
                                                                    Merge Cond: (cct1.id = cc.subject_id)
                                                                    ->  Sort  (cost=4.00..4.00 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                                                          Sort Key: cct1.id
                                                                          Sort Method: quicksort  Memory: 25kB
                                                                          ->  Seq Scan on comp_cast_type cct1  (cost=0.00..4.00 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                                Filter: ((kind)::text = 'crew'::text)
                                                                                Rows Removed by Filter: 3
                                                                    ->  Sort  (cost=322247.00..322247.00 rows=20024 width=16) (actual time=107.015..108.002 rows=20024 loops=1)
                                                                          Sort Key: cc.subject_id
                                                                          Sort Method: quicksort  Memory: 1707kB
                                                                          ->  Merge Join  (cost=272001.00..322247.00 rows=20024 width=16) (actual time=84.086..104.886 rows=20024 loops=1)
                                                                                Merge Cond: (mk.movie_id = cc.movie_id)
                                                                                ->  Sort  (cost=136915.00..136915.00 rows=37091 width=4) (actual time=45.229..46.859 rows=37091 loops=1)
                                                                                      Sort Key: mk.movie_id
                                                                                      Sort Method: quicksort  Memory: 3275kB
                                                                                      ->  Nested Loop  (cost=0.00..136915.00 rows=37091 width=4) (actual time=0.801..38.538 rows=37091 loops=1)
                                                                                            ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=3 width=4) (actual time=0.794..15.751 rows=3 loops=1)
                                                                                                  Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                                  Rows Removed by Filter: 134167
                                                                                            ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.007..6.247 rows=12364 loops=3)
                                                                                                  Index Cond: (keyword_id = k.id)
                                                                                ->  Sort  (cost=135086.00..135086.00 rows=135086 width=12) (actual time=38.802..45.184 rows=138007 loops=1)
                                                                                      Sort Key: cc.movie_id
                                                                                      Sort Method: quicksort  Memory: 12477kB
                                                                                      ->  Seq Scan on complete_cast cc  (cost=0.00..135086.00 rows=135086 width=12) (actual time=0.007..13.675 rows=135086 loops=1)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=6216)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2005)
                                                                    Rows Removed by Filter: 1
                                                        ->  Hash  (cost=7.00..7.00 rows=2 width=4) (actual time=0.004..0.004 rows=2 loops=1)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                              ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=2 width=4) (actual time=0.002..0.003 rows=2 loops=1)
                                                                    Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                    Rows Removed by Filter: 5
                                                  ->  Hash  (cost=4.00..4.00 rows=3 width=4) (actual time=0.003..0.003 rows=3 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on comp_cast_type cct2  (cost=0.00..4.00 rows=3 width=4) (actual time=0.002..0.003 rows=3 loops=1)
                                                              Filter: ((kind)::text <> 'complete+verified'::text)
                                                              Rows Removed by Filter: 1
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=1 width=12) (actual time=0.004..0.008 rows=6 loops=273)
                                                  Index Cond: (movie_id = t.id)
                                                  Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                                  Rows Removed by Filter: 10
                                      ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=1735)
                                            Index Cond: (id = mc.company_id)
                                            Filter: ((country_code)::text <> '[us]'::text)
                                            Rows Removed by Filter: 0
                                ->  Hash  (cost=4.00..4.00 rows=4 width=4) (actual time=0.006..0.006 rows=4 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                      ->  Seq Scan on company_type ct  (cost=0.00..4.00 rows=4 width=4) (actual time=0.004..0.004 rows=4 loops=1)
                          ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=1 width=8) (actual time=0.069..0.069 rows=0 loops=1685)
                                Index Cond: (movie_id = t.id)
                                Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                Rows Removed by Filter: 315
                    ->  Index Scan using info_type_pkey on info_type it1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=233)
                          Index Cond: (id = mi.info_type_id)
                          Filter: ((info)::text = 'countries'::text)
                          Rows Removed by Filter: 0
              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..6.00 rows=1 width=13) (actual time=0.002..0.002 rows=1 loops=210)
                    Index Cond: (movie_id = t.id)
                    Filter: (info > '6.5'::text)
                    Rows Removed by Filter: 2
        ->  Index Scan using info_type_pkey on info_type it2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=224)
              Index Cond: (id = mi_idx.info_type_id)
              Filter: ((info)::text = 'rating'::text)
              Rows Removed by Filter: 0
Planning time: 54.975 ms
Execution time: 248.244 ms
