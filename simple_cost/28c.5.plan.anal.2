Aggregate  (cost=352935.20..352936.20 rows=1 width=96) (actual time=372.252..372.252 rows=1 loops=1)
  ->  Nested Loop  (cost=298875.00..352935.20 rows=1 width=41) (actual time=161.460..369.091 rows=8373 loops=1)
        ->  Nested Loop  (cost=298875.00..352931.20 rows=1 width=45) (actual time=161.271..355.220 rows=15126 loops=1)
              ->  Nested Loop  (cost=298875.00..352929.20 rows=1 width=30) (actual time=161.266..324.133 rows=15798 loops=1)
                    ->  Hash Join  (cost=298875.00..352925.20 rows=1 width=34) (actual time=161.262..305.856 rows=17755 loops=1)
                          Hash Cond: (cc.subject_id = cct1.id)
                          ->  Nested Loop  (cost=298870.00..352917.20 rows=4 width=38) (actual time=161.251..301.483 rows=19637 loops=1)
                                ->  Nested Loop  (cost=298870.00..352910.00 rows=4 width=42) (actual time=161.248..282.061 rows=19637 loops=1)
                                      ->  Nested Loop  (cost=298870.00..352569.00 rows=31 width=54) (actual time=161.241..261.301 rows=1542 loops=1)
                                            ->  Hash Join  (cost=298870.00..343023.00 rows=111 width=46) (actual time=161.173..175.134 rows=1415 loops=1)
                                                  Hash Cond: (t.kind_id = kt.id)
                                                  ->  Nested Loop  (cost=298861.00..342681.00 rows=388 width=50) (actual time=161.165..174.750 rows=1565 loops=1)
                                                        ->  Merge Join  (cost=298861.00..299055.00 rows=7271 width=38) (actual time=161.150..163.201 rows=7271 loops=1)
                                                              Merge Cond: (mi_idx.info_type_id = it2.id)
                                                              ->  Sort  (cost=298748.00..298748.00 rows=21917 width=42) (actual time=159.318..160.626 rows=21860 loops=1)
                                                                    Sort Key: mi_idx.info_type_id
                                                                    Sort Method: quicksort  Memory: 2800kB
                                                                    ->  Nested Loop  (cost=0.00..298748.00 rows=21917 width=42) (actual time=0.811..154.054 rows=21917 loops=1)
                                                                          ->  Nested Loop  (cost=0.00..211097.00 rows=9739 width=29) (actual time=0.805..122.302 rows=9739 loops=1)
                                                                                ->  Nested Loop  (cost=0.00..136915.00 rows=37091 width=4) (actual time=0.800..41.730 rows=37091 loops=1)
                                                                                      ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=3 width=4) (actual time=0.793..15.608 rows=3 loops=1)
                                                                                            Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                            Rows Removed by Filter: 134167
                                                                                      ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.007..7.248 rows=12364 loops=3)
                                                                                            Index Cond: (keyword_id = k.id)
                                                                                ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=37091)
                                                                                      Index Cond: (id = mk.movie_id)
                                                                                      Filter: (production_year > 2005)
                                                                                      Rows Removed by Filter: 1
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..6.00 rows=3 width=13) (actual time=0.002..0.003 rows=2 loops=9739)
                                                                                Index Cond: (movie_id = t.id)
                                                                                Filter: (info < '8.5'::text)
                                                                                Rows Removed by Filter: 0
                                                              ->  Sort  (cost=113.00..113.00 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                                                                    Sort Key: it2.id
                                                                    Sort Method: quicksort  Memory: 25kB
                                                                    ->  Seq Scan on info_type it2  (cost=0.00..113.00 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                        ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..4.00 rows=2 width=12) (actual time=0.001..0.001 rows=0 loops=7271)
                                                              Index Cond: (movie_id = t.id)
                                                  ->  Hash  (cost=7.00..7.00 rows=2 width=4) (actual time=0.004..0.004 rows=2 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=2 width=4) (actual time=0.002..0.003 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                              Rows Removed by Filter: 5
                                            ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=2 width=8) (actual time=0.050..0.061 rows=1 loops=1415)
                                                  Index Cond: (movie_id = t.id)
                                                  Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                                  Rows Removed by Filter: 155
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=1 width=12) (actual time=0.004..0.012 rows=13 loops=1542)
                                            Index Cond: (movie_id = t.id)
                                            Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                            Rows Removed by Filter: 13
                                ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=19637)
                                      Index Cond: (id = mc.company_type_id)
                                      Heap Fetches: 19637
                          ->  Hash  (cost=4.00..4.00 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                ->  Seq Scan on comp_cast_type cct1  (cost=0.00..4.00 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                      Filter: ((kind)::text = 'cast'::text)
                                      Rows Removed by Filter: 3
                    ->  Index Scan using info_type_pkey on info_type it1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=17755)
                          Index Cond: (id = mi.info_type_id)
                          Filter: ((info)::text = 'countries'::text)
                          Rows Removed by Filter: 0
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=15798)
                    Index Cond: (id = mc.company_id)
                    Filter: ((country_code)::text <> '[us]'::text)
                    Rows Removed by Filter: 0
        ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=15126)
              Index Cond: (id = cc.status_id)
              Filter: ((kind)::text = 'complete'::text)
              Rows Removed by Filter: 0
Planning time: 55.321 ms
Execution time: 372.346 ms
