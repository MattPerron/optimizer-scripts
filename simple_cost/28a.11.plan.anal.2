Aggregate  (cost=426216.00..426217.00 rows=1 width=96) (actual time=220.114..220.114 rows=1 loops=1)
  ->  Nested Loop  (cost=408366.00..426216.00 rows=2557 width=41) (actual time=208.010..218.528 rows=4803 loops=1)
        ->  Hash Join  (cost=408366.00..416696.00 rows=4760 width=26) (actual time=208.003..210.051 rows=4955 loops=1)
              Hash Cond: (mc.company_type_id = ct.id)
              ->  Merge Join  (cost=408358.00..413118.00 rows=4760 width=30) (actual time=207.992..209.159 rows=4955 loops=1)
                    Merge Cond: (cc.status_id = cct2.id)
                    ->  Sort  (cost=408354.00..408354.00 rows=6346 width=34) (actual time=207.979..208.258 rows=4956 loops=1)
                          Sort Key: cc.status_id
                          Sort Method: quicksort  Memory: 701kB
                          ->  Merge Join  (cost=408177.00..408354.00 rows=6346 width=34) (actual time=205.964..207.121 rows=6346 loops=1)
                                Merge Cond: (it2.id = mi_idx.info_type_id)
                                ->  Sort  (cost=113.00..113.00 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=1)
                                      Sort Key: it2.id
                                      Sort Method: quicksort  Memory: 25kB
                                      ->  Seq Scan on info_type it2  (cost=0.00..113.00 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                            Filter: ((info)::text = 'rating'::text)
                                            Rows Removed by Filter: 112
                                ->  Sort  (cost=408064.00..408064.00 rows=20040 width=38) (actual time=204.346..205.229 rows=19096 loops=1)
                                      Sort Key: mi_idx.info_type_id
                                      Sort Method: quicksort  Memory: 2434kB
                                      ->  Nested Loop  (cost=211223.00..408064.00 rows=20040 width=38) (actual time=120.883..199.979 rows=20040 loops=1)
                                            ->  Nested Loop  (cost=211223.00..348106.00 rows=6662 width=49) (actual time=120.876..182.409 rows=6662 loops=1)
                                                  ->  Hash Join  (cost=211223.00..341902.00 rows=564 width=37) (actual time=120.593..175.469 rows=564 loops=1)
                                                        Hash Cond: (mi.info_type_id = it1.id)
                                                        ->  Nested Loop  (cost=211109.00..341165.00 rows=629 width=41) (actual time=120.580..175.302 rows=629 loops=1)
                                                              ->  Hash Join  (cost=211109.00..287845.00 rows=620 width=33) (actual time=120.562..140.000 rows=620 loops=1)
                                                                    Hash Cond: (cc.subject_id = cct1.id)
                                                                    ->  Nested Loop  (cost=211104.00..285440.00 rows=3200 width=37) (actual time=120.555..139.609 rows=3200 loops=1)
                                                                          ->  Merge Join  (cost=211104.00..215324.00 rows=11686 width=25) (actual time=120.530..123.504 rows=11686 loops=1)
                                                                                Merge Cond: (kt.id = t.kind_id)
                                                                                ->  Sort  (cost=7.00..7.00 rows=2 width=4) (actual time=0.005..0.005 rows=2 loops=1)
                                                                                      Sort Key: kt.id
                                                                                      Sort Method: quicksort  Memory: 25kB
                                                                                      ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=2 width=4) (actual time=0.002..0.003 rows=2 loops=1)
                                                                                            Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                                            Rows Removed by Filter: 5
                                                                                ->  Sort  (cost=211097.00..211097.00 rows=14771 width=29) (actual time=120.524..121.386 rows=14771 loops=1)
                                                                                      Sort Key: t.kind_id
                                                                                      Sort Method: quicksort  Memory: 1572kB
                                                                                      ->  Nested Loop  (cost=0.00..211097.00 rows=14771 width=29) (actual time=0.809..117.729 rows=14771 loops=1)
                                                                                            ->  Nested Loop  (cost=0.00..136915.00 rows=37091 width=4) (actual time=0.804..39.228 rows=37091 loops=1)
                                                                                                  ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=3 width=4) (actual time=0.797..15.190 rows=3 loops=1)
                                                                                                        Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                                        Rows Removed by Filter: 134167
                                                                                                  ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.007..6.582 rows=12364 loops=3)
                                                                                                        Index Cond: (keyword_id = k.id)
                                                                                            ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=37091)
                                                                                                  Index Cond: (id = mk.movie_id)
                                                                                                  Filter: (production_year > 2000)
                                                                                                  Rows Removed by Filter: 1
                                                                          ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..4.00 rows=2 width=12) (actual time=0.001..0.001 rows=0 loops=11686)
                                                                                Index Cond: (movie_id = t.id)
                                                                    ->  Hash  (cost=4.00..4.00 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                          ->  Seq Scan on comp_cast_type cct1  (cost=0.00..4.00 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                                                Filter: ((kind)::text = 'crew'::text)
                                                                                Rows Removed by Filter: 3
                                                              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=2 width=8) (actual time=0.048..0.057 rows=1 loops=620)
                                                                    Index Cond: (movie_id = t.id)
                                                                    Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                                                    Rows Removed by Filter: 146
                                                        ->  Hash  (cost=113.00..113.00 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                              ->  Seq Scan on info_type it1  (cost=0.00..113.00 rows=1 width=4) (actual time=0.003..0.009 rows=1 loops=1)
                                                                    Filter: ((info)::text = 'countries'::text)
                                                                    Rows Removed by Filter: 112
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=1 width=12) (actual time=0.004..0.011 rows=12 loops=564)
                                                        Index Cond: (movie_id = t.id)
                                                        Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                                        Rows Removed by Filter: 10
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..6.00 rows=3 width=13) (actual time=0.001..0.002 rows=3 loops=6662)
                                                  Index Cond: (movie_id = t.id)
                                                  Filter: (info < '8.5'::text)
                                                  Rows Removed by Filter: 0
                    ->  Sort  (cost=4.00..4.00 rows=3 width=4) (actual time=0.012..0.012 rows=3 loops=1)
                          Sort Key: cct2.id
                          Sort Method: quicksort  Memory: 25kB
                          ->  Seq Scan on comp_cast_type cct2  (cost=0.00..4.00 rows=3 width=4) (actual time=0.006..0.006 rows=3 loops=1)
                                Filter: ((kind)::text <> 'complete+verified'::text)
                                Rows Removed by Filter: 1
              ->  Hash  (cost=4.00..4.00 rows=4 width=4) (actual time=0.006..0.006 rows=4 loops=1)
                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                    ->  Seq Scan on company_type ct  (cost=0.00..4.00 rows=4 width=4) (actual time=0.004..0.004 rows=4 loops=1)
        ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=4955)
              Index Cond: (id = mc.company_id)
              Filter: ((country_code)::text <> '[us]'::text)
              Rows Removed by Filter: 0
Planning time: 54.036 ms
Execution time: 220.206 ms
