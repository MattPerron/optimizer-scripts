Aggregate  (cost=376977.00..376978.00 rows=1 width=96) (actual time=501.092..501.092 rows=1 loops=1)
  ->  Nested Loop  (cost=366544.00..376977.00 rows=1 width=41) (actual time=126.855..499.325 rows=4803 loops=1)
        ->  Nested Loop  (cost=366544.00..376969.00 rows=3 width=45) (actual time=126.852..494.198 rows=5295 loops=1)
              ->  Hash Join  (cost=366544.00..376109.00 rows=10 width=61) (actual time=126.766..153.121 rows=4410 loops=1)
                    Hash Cond: (mc.company_type_id = ct.id)
                    ->  Nested Loop  (cost=366536.00..376093.00 rows=10 width=65) (actual time=126.756..152.037 rows=4410 loops=1)
                          ->  Nested Loop  (cost=366536.00..376057.00 rows=18 width=50) (actual time=126.750..142.815 rows=4535 loops=1)
                                ->  Hash Join  (cost=366536.00..374407.00 rows=150 width=38) (actual time=126.743..137.547 rows=473 loops=1)
                                      Hash Cond: (t.kind_id = kt.id)
                                      ->  Nested Loop  (cost=366527.00..373948.00 rows=525 width=42) (actual time=126.736..137.418 rows=525 loops=1)
                                            ->  Merge Join  (cost=366527.00..366624.00 rows=3662 width=17) (actual time=126.714..127.610 rows=3662 loops=1)
                                                  Merge Cond: (it2.id = mi_idx.info_type_id)
                                                  ->  Sort  (cost=113.00..113.00 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=1)
                                                        Sort Key: it2.id
                                                        Sort Method: quicksort  Memory: 25kB
                                                        ->  Seq Scan on info_type it2  (cost=0.00..113.00 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                              Filter: ((info)::text = 'rating'::text)
                                                              Rows Removed by Filter: 112
                                                  ->  Sort  (cost=366414.00..366414.00 rows=10910 width=21) (actual time=125.800..126.438 rows=10859 loops=1)
                                                        Sort Key: mi_idx.info_type_id
                                                        Sort Method: quicksort  Memory: 1237kB
                                                        ->  Nested Loop  (cost=322258.00..366414.00 rows=10910 width=21) (actual time=108.592..123.856 rows=10910 loops=1)
                                                              ->  Hash Join  (cost=322258.00..331926.00 rows=3832 width=8) (actual time=108.582..110.814 rows=3832 loops=1)
                                                                    Hash Cond: (cc.status_id = cct2.id)
                                                                    ->  Merge Join  (cost=322251.00..327257.00 rows=6216 width=12) (actual time=108.576..109.890 rows=6216 loops=1)
                                                                          Merge Cond: (cct1.id = cc.subject_id)
                                                                          ->  Sort  (cost=4.00..4.00 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                                                Sort Key: cct1.id
                                                                                Sort Method: quicksort  Memory: 25kB
                                                                                ->  Seq Scan on comp_cast_type cct1  (cost=0.00..4.00 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                                      Filter: ((kind)::text = 'crew'::text)
                                                                                      Rows Removed by Filter: 3
                                                                          ->  Sort  (cost=322247.00..322247.00 rows=20024 width=16) (actual time=107.140..108.100 rows=20024 loops=1)
                                                                                Sort Key: cc.subject_id
                                                                                Sort Method: quicksort  Memory: 1707kB
                                                                                ->  Merge Join  (cost=272001.00..322247.00 rows=20024 width=16) (actual time=84.418..105.013 rows=20024 loops=1)
                                                                                      Merge Cond: (mk.movie_id = cc.movie_id)
                                                                                      ->  Sort  (cost=136915.00..136915.00 rows=37091 width=4) (actual time=45.065..46.689 rows=37091 loops=1)
                                                                                            Sort Key: mk.movie_id
                                                                                            Sort Method: quicksort  Memory: 3275kB
                                                                                            ->  Nested Loop  (cost=0.00..136915.00 rows=37091 width=4) (actual time=0.795..38.388 rows=37091 loops=1)
                                                                                                  ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=3 width=4) (actual time=0.788..15.321 rows=3 loops=1)
                                                                                                        Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                                        Rows Removed by Filter: 134167
                                                                                                  ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.007..6.332 rows=12364 loops=3)
                                                                                                        Index Cond: (keyword_id = k.id)
                                                                                      ->  Sort  (cost=135086.00..135086.00 rows=135086 width=12) (actual time=39.298..45.562 rows=138007 loops=1)
                                                                                            Sort Key: cc.movie_id
                                                                                            Sort Method: quicksort  Memory: 12477kB
                                                                                            ->  Seq Scan on complete_cast cc  (cost=0.00..135086.00 rows=135086 width=12) (actual time=0.006..13.822 rows=135086 loops=1)
                                                                    ->  Hash  (cost=4.00..4.00 rows=3 width=4) (actual time=0.003..0.003 rows=3 loops=1)
                                                                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                          ->  Seq Scan on comp_cast_type cct2  (cost=0.00..4.00 rows=3 width=4) (actual time=0.002..0.002 rows=3 loops=1)
                                                                                Filter: ((kind)::text <> 'complete+verified'::text)
                                                                                Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..6.00 rows=3 width=13) (actual time=0.002..0.003 rows=3 loops=3832)
                                                                    Index Cond: (movie_id = mk.movie_id)
                                                                    Filter: (info < '8.5'::text)
                                                                    Rows Removed by Filter: 0
                                            ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=3662)
                                                  Index Cond: (id = mk.movie_id)
                                                  Filter: (production_year > 2000)
                                                  Rows Removed by Filter: 1
                                      ->  Hash  (cost=7.00..7.00 rows=2 width=4) (actual time=0.004..0.004 rows=2 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                            ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=2 width=4) (actual time=0.002..0.004 rows=2 loops=1)
                                                  Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                  Rows Removed by Filter: 5
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=1 width=12) (actual time=0.004..0.010 rows=10 loops=473)
                                      Index Cond: (movie_id = t.id)
                                      Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                      Rows Removed by Filter: 9
                          ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=4535)
                                Index Cond: (id = mc.company_id)
                                Filter: ((country_code)::text <> '[us]'::text)
                                Rows Removed by Filter: 0
                    ->  Hash  (cost=4.00..4.00 rows=4 width=4) (actual time=0.006..0.006 rows=4 loops=1)
                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                          ->  Seq Scan on company_type ct  (cost=0.00..4.00 rows=4 width=4) (actual time=0.004..0.004 rows=4 loops=1)
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=2 width=8) (actual time=0.068..0.077 rows=1 loops=4410)
                    Index Cond: (movie_id = t.id)
                    Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                    Rows Removed by Filter: 247
        ->  Index Scan using info_type_pkey on info_type it1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=5295)
              Index Cond: (id = mi.info_type_id)
              Filter: ((info)::text = 'countries'::text)
              Rows Removed by Filter: 0
Planning time: 54.441 ms
Execution time: 501.181 ms
