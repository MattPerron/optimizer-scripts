Aggregate  (cost=146011.33..146012.33 rows=1 width=96) (actual time=14.831..14.831 rows=1 loops=1)
  ->  Nested Loop  (cost=145953.33..146011.33 rows=1 width=48) (actual time=14.790..14.824 rows=15 loops=1)
        ->  Nested Loop  (cost=145953.33..146007.33 rows=1 width=52) (actual time=14.788..14.811 rows=15 loops=1)
              ->  Merge Join  (cost=145953.33..145975.33 rows=15 width=40) (actual time=14.783..14.786 rows=15 loops=1)
                    Merge Cond: (it3.id = pi.info_type_id)
                    ->  Sort  (cost=113.00..113.00 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=1)
                          Sort Key: it3.id
                          Sort Method: quicksort  Memory: 25kB
                          ->  Seq Scan on info_type it3  (cost=0.00..113.00 rows=1 width=4) (actual time=0.007..0.012 rows=1 loops=1)
                                Filter: ((info)::text = 'height'::text)
                                Rows Removed by Filter: 112
                    ->  Sort  (cost=145840.33..145840.33 rows=2445 width=44) (actual time=14.631..14.684 rows=1171 loops=1)
                          Sort Key: pi.info_type_id
                          Sort Method: quicksort  Memory: 288kB
                          ->  Nested Loop  (cost=5.00..145840.33 rows=2445 width=44) (actual time=3.005..14.120 rows=2445 loops=1)
                                ->  Nested Loop  (cost=5.00..144715.33 rows=15 width=52) (actual time=3.002..13.418 rows=15 loops=1)
                                      ->  Nested Loop  (cost=5.00..144685.33 rows=5 width=48) (actual time=2.997..13.396 rows=5 loops=1)
                                            ->  Nested Loop  (cost=5.00..144673.33 rows=5 width=52) (actual time=2.995..13.389 rows=5 loops=1)
                                                  ->  Nested Loop  (cost=5.00..144248.33 rows=5 width=68) (actual time=2.981..12.959 rows=5 loops=1)
                                                        ->  Nested Loop  (cost=5.00..144138.33 rows=55 width=49) (actual time=2.976..12.830 rows=55 loops=1)
                                                              ->  Nested Loop  (cost=5.00..143742.33 rows=190 width=53) (actual time=2.934..12.654 rows=190 loops=1)
                                                                    ->  Nested Loop  (cost=5.00..143377.33 rows=5 width=37) (actual time=2.928..12.062 rows=5 loops=1)
                                                                          ->  Nested Loop  (cost=5.00..143333.33 rows=22 width=41) (actual time=2.924..12.011 rows=22 loops=1)
                                                                                ->  Hash Join  (cost=5.00..140250.00 rows=1541 width=20) (actual time=0.086..9.659 rows=1541 loops=1)
                                                                                      Hash Cond: (cc.subject_id = cct1.id)
                                                                                      ->  Nested Loop  (cost=0.00..138919.00 rows=1768 width=24) (actual time=0.079..9.353 rows=1768 loops=1)
                                                                                            ->  Nested Loop  (cost=0.00..137569.00 rows=90 width=16) (actual time=0.075..8.542 rows=90 loops=1)
                                                                                                  ->  Nested Loop  (cost=0.00..135085.00 rows=414 width=4) (actual time=0.033..7.906 rows=414 loops=1)
                                                                                                        ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=1 width=4) (actual time=0.026..7.666 rows=1 loops=1)
                                                                                                              Filter: (keyword = 'computer-animation'::text)
                                                                                                              Rows Removed by Filter: 134169
                                                                                                        ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.006..0.190 rows=414 loops=1)
                                                                                                              Index Cond: (keyword_id = k.id)
                                                                                                  ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..4.00 rows=2 width=12) (actual time=0.001..0.001 rows=0 loops=414)
                                                                                                        Index Cond: (movie_id = mk.movie_id)
                                                                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=5 width=8) (actual time=0.003..0.006 rows=20 loops=90)
                                                                                                  Index Cond: (movie_id = mk.movie_id)
                                                                                      ->  Hash  (cost=4.00..4.00 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                            ->  Seq Scan on comp_cast_type cct1  (cost=0.00..4.00 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                                                                  Filter: ((kind)::text = 'cast'::text)
                                                                                                  Rows Removed by Filter: 3
                                                                                ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=21) (actual time=0.001..0.001 rows=0 loops=1541)
                                                                                      Index Cond: (id = mc.movie_id)
                                                                                      Filter: ((production_year >= 2000) AND (production_year <= 2005) AND (title = 'Shrek 2'::text))
                                                                                      Rows Removed by Filter: 1
                                                                          ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=22)
                                                                                Index Cond: (id = mc.company_id)
                                                                                Filter: ((country_code)::text = '[us]'::text)
                                                                                Rows Removed by Filter: 1
                                                                    ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.00..72.00 rows=1 width=16) (actual time=0.003..0.113 rows=38 loops=5)
                                                                          Index Cond: (movie_id = t.id)
                                                                          Filter: (note = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                          Rows Removed by Filter: 191
                                                              ->  Index Scan using role_type_pkey on role_type rt  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=190)
                                                                    Index Cond: (id = ci.role_id)
                                                                    Filter: ((role)::text = 'actress'::text)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using name_pkey on name n  (cost=0.00..2.00 rows=1 width=19) (actual time=0.002..0.002 rows=0 loops=55)
                                                              Index Cond: (id = ci.person_id)
                                                              Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=1 width=8) (actual time=0.011..0.086 rows=1 loops=5)
                                                        Index Cond: (movie_id = t.id)
                                                        Filter: (info ~~ 'USA:%200%'::text)
                                                        Rows Removed by Filter: 456
                                            ->  Index Scan using info_type_pkey on info_type it  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=5)
                                                  Index Cond: (id = mi.info_type_id)
                                                  Filter: ((info)::text = 'release dates'::text)
                                      ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.00..4.00 rows=2 width=4) (actual time=0.002..0.003 rows=3 loops=5)
                                            Index Cond: (person_id = n.id)
                                            Heap Fetches: 15
                                ->  Index Scan using person_id_person_info on person_info pi  (cost=0.00..50.00 rows=25 width=8) (actual time=0.002..0.026 rows=163 loops=15)
                                      Index Cond: (person_id = n.id)
              ->  Index Scan using char_name_pkey on char_name chn  (cost=0.00..2.00 rows=1 width=20) (actual time=0.001..0.001 rows=1 loops=15)
                    Index Cond: (id = ci.person_role_id)
                    Filter: (name = 'Queen'::text)
        ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=15)
              Index Cond: (id = cc.status_id)
              Filter: ((kind)::text = 'complete+verified'::text)
Planning time: 74.259 ms
Execution time: 14.921 ms
