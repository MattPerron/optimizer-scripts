Aggregate  (cost=20169.00..20170.00 rows=1 width=192) (actual time=6.970..6.970 rows=1 loops=1)
  ->  Nested Loop  (cost=20049.00..20169.00 rows=2 width=82) (actual time=6.917..6.962 rows=8 loops=1)
        ->  Nested Loop  (cost=20049.00..20165.00 rows=2 width=67) (actual time=6.915..6.946 rows=8 loops=1)
              ->  Nested Loop  (cost=20049.00..20135.00 rows=2 width=75) (actual time=6.912..6.938 rows=2 loops=1)
                    ->  Nested Loop  (cost=20049.00..20125.00 rows=5 width=60) (actual time=6.893..6.909 rows=14 loops=1)
                          ->  Merge Join  (cost=20049.00..20050.00 rows=5 width=68) (actual time=6.889..6.891 rows=5 loops=1)
                                Merge Cond: (mi_idx2.info_type_id = it2.id)
                                ->  Sort  (cost=19936.00..19936.00 rows=95 width=72) (actual time=6.866..6.871 rows=95 loops=1)
                                      Sort Key: mi_idx2.info_type_id
                                      Sort Method: quicksort  Memory: 39kB
                                      ->  Merge Join  (cost=19916.00..19936.00 rows=95 width=72) (actual time=6.813..6.838 rows=95 loops=1)
                                            Merge Cond: (t2.kind_id = kt2.id)
                                            ->  Sort  (cost=19909.00..19909.00 rows=140 width=76) (actual time=6.804..6.809 rows=105 loops=1)
                                                  Sort Key: t2.kind_id
                                                  Sort Method: quicksort  Memory: 46kB
                                                  ->  Merge Join  (cost=19905.00..19909.00 rows=140 width=76) (actual time=6.730..6.767 rows=140 loops=1)
                                                        Merge Cond: (it1.id = mi_idx1.info_type_id)
                                                        ->  Sort  (cost=113.00..113.00 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=1)
                                                              Sort Key: it1.id
                                                              Sort Method: quicksort  Memory: 25kB
                                                              ->  Seq Scan on info_type it1  (cost=0.00..113.00 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                                    Filter: ((info)::text = 'rating'::text)
                                                                    Rows Removed by Filter: 112
                                                        ->  Sort  (cost=19792.00..19792.00 rows=420 width=80) (actual time=6.672..6.693 rows=420 loops=1)
                                                              Sort Key: mi_idx1.info_type_id
                                                              Sort Method: quicksort  Memory: 91kB
                                                              ->  Nested Loop  (cost=18236.00..19792.00 rows=420 width=80) (actual time=6.124..6.537 rows=420 loops=1)
                                                                    ->  Merge Join  (cost=18236.00..18280.00 rows=168 width=67) (actual time=6.121..6.166 rows=168 loops=1)
                                                                          Merge Cond: (kt1.id = t1.kind_id)
                                                                          ->  Sort  (cost=7.00..7.00 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                                                Sort Key: kt1.id
                                                                                Sort Method: quicksort  Memory: 25kB
                                                                                ->  Seq Scan on kind_type kt1  (cost=0.00..7.00 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                                                      Filter: ((kind)::text = 'tv series'::text)
                                                                                      Rows Removed by Filter: 6
                                                                          ->  Sort  (cost=18229.00..18229.00 rows=308 width=71) (actual time=6.116..6.125 rows=169 loops=1)
                                                                                Sort Key: t1.kind_id
                                                                                Sort Method: quicksort  Memory: 69kB
                                                                                ->  Nested Loop  (cost=0.00..18229.00 rows=308 width=71) (actual time=0.049..6.013 rows=308 loops=1)
                                                                                      ->  Nested Loop  (cost=0.00..17613.00 rows=308 width=46) (actual time=0.047..5.476 rows=308 loops=1)
                                                                                            ->  Nested Loop  (cost=0.00..15898.00 rows=245 width=33) (actual time=0.043..4.829 rows=245 loops=1)
                                                                                                  ->  Nested Loop  (cost=0.00..11268.00 rows=2315 width=8) (actual time=0.012..0.694 rows=2315 loops=1)
                                                                                                        ->  Seq Scan on link_type lt  (cost=0.00..18.00 rows=2 width=4) (actual time=0.002..0.005 rows=2 loops=1)
                                                                                                              Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                                              Rows Removed by Filter: 16
                                                                                                        ->  Index Scan using link_type_id_movie_link on movie_link ml  (cost=0.00..3750.00 rows=1875 width=12) (actual time=0.007..0.209 rows=1158 loops=2)
                                                                                                              Index Cond: (link_type_id = lt.id)
                                                                                                  ->  Index Scan using title_pkey on title t2  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2315)
                                                                                                        Index Cond: (id = ml.linked_movie_id)
                                                                                                        Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                                                                                        Rows Removed by Filter: 1
                                                                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.00..6.00 rows=1 width=13) (actual time=0.002..0.002 rows=1 loops=245)
                                                                                                  Index Cond: (movie_id = t2.id)
                                                                                                  Filter: (info < '3.0'::text)
                                                                                                  Rows Removed by Filter: 1
                                                                                      ->  Index Scan using title_pkey on title t1  (cost=0.00..2.00 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=308)
                                                                                            Index Cond: (id = ml.movie_id)
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.00..6.00 rows=3 width=13) (actual time=0.001..0.002 rows=2 loops=168)
                                                                          Index Cond: (movie_id = t1.id)
                                            ->  Sort  (cost=7.00..7.00 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                  Sort Key: kt2.id
                                                  Sort Method: quicksort  Memory: 25kB
                                                  ->  Seq Scan on kind_type kt2  (cost=0.00..7.00 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                                        Filter: ((kind)::text = 'tv series'::text)
                                                        Rows Removed by Filter: 6
                                ->  Sort  (cost=113.00..113.00 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=1)
                                      Sort Key: it2.id
                                      Sort Method: quicksort  Memory: 25kB
                                      ->  Seq Scan on info_type it2  (cost=0.00..113.00 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                            Filter: ((info)::text = 'rating'::text)
                                            Rows Removed by Filter: 112
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.00..10.00 rows=5 width=8) (actual time=0.002..0.003 rows=3 loops=5)
                                Index Cond: (movie_id = t1.id)
                    ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=14)
                          Index Cond: (id = mc1.company_id)
                          Filter: ((country_code)::text = '[us]'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.00..10.00 rows=5 width=8) (actual time=0.002..0.003 rows=4 loops=2)
                    Index Cond: (movie_id = t2.id)
        ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=8)
              Index Cond: (id = mc2.company_id)
Planning time: 60.260 ms
Execution time: 7.055 ms
