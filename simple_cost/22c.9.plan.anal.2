Aggregate  (cost=775211.00..775212.00 rows=1 width=96) (actual time=920.439..920.439 rows=1 loops=1)
  ->  Nested Loop  (cost=697962.00..775211.00 rows=7526 width=41) (actual time=832.346..913.542 rows=21489 loops=1)
        ->  Hash Join  (cost=697962.00..760749.00 rows=7231 width=26) (actual time=832.339..873.697 rows=23216 loops=1)
              Hash Cond: (mc.company_type_id = ct.id)
              ->  Nested Loop  (cost=697954.00..743329.00 rows=23216 width=30) (actual time=832.324..869.152 rows=23216 loops=1)
                    ->  Merge Join  (cost=697954.00..698064.00 rows=4115 width=38) (actual time=832.311..833.517 rows=4115 loops=1)
                          Merge Cond: (mi_idx.info_type_id = it2.id)
                          ->  Sort  (cost=697841.00..697841.00 rows=12401 width=42) (actual time=831.019..831.984 rows=12339 loops=1)
                                Sort Key: mi_idx.info_type_id
                                Sort Method: quicksort  Memory: 1519kB
                                ->  Nested Loop  (cost=648036.00..697841.00 rows=12401 width=42) (actual time=740.070..828.310 rows=12401 loops=1)
                                      ->  Merge Join  (cost=648036.00..649997.00 rows=5316 width=29) (actual time=740.057..813.348 rows=5316 loops=1)
                                            Merge Cond: (mi.movie_id = t.id)
                                            ->  Sort  (cost=434149.00..434149.00 rows=614251 width=4) (actual time=601.363..632.878 rows=614200 loops=1)
                                                  Sort Key: mi.movie_id
                                                  Sort Method: quicksort  Memory: 53370kB
                                                  ->  Nested Loop  (cost=0.00..434149.00 rows=614251 width=4) (actual time=0.019..472.845 rows=614251 loops=1)
                                                        ->  Seq Scan on info_type it1  (cost=0.00..113.00 rows=1 width=4) (actual time=0.005..0.013 rows=1 loops=1)
                                                              Filter: ((info)::text = 'countries'::text)
                                                              Rows Removed by Filter: 112
                                                        ->  Index Scan using info_type_id_movie_info on movie_info mi  (cost=0.00..423878.00 rows=10158 width=8) (actual time=0.014..418.986 rows=614251 loops=1)
                                                              Index Cond: (info_type_id = it1.id)
                                                              Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                                              Rows Removed by Filter: 711110
                                            ->  Sort  (cost=213887.00..213887.00 rows=8073 width=25) (actual time=138.496..138.999 rows=8466 loops=1)
                                                  Sort Key: mk.movie_id
                                                  Sort Method: quicksort  Memory: 793kB
                                                  ->  Merge Join  (cost=211104.00..213887.00 rows=8073 width=25) (actual time=134.826..136.815 rows=8073 loops=1)
                                                        Merge Cond: (t.kind_id = kt.id)
                                                        ->  Sort  (cost=211097.00..211097.00 rows=9739 width=29) (actual time=134.806..135.346 rows=9739 loops=1)
                                                              Sort Key: t.kind_id
                                                              Sort Method: quicksort  Memory: 1168kB
                                                              ->  Nested Loop  (cost=0.00..211097.00 rows=9739 width=29) (actual time=0.734..132.720 rows=9739 loops=1)
                                                                    ->  Nested Loop  (cost=0.00..136915.00 rows=37091 width=4) (actual time=0.725..45.523 rows=37091 loops=1)
                                                                          ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=3 width=4) (actual time=0.710..16.340 rows=3 loops=1)
                                                                                Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                Rows Removed by Filter: 134167
                                                                          ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.010..8.188 rows=12364 loops=3)
                                                                                Index Cond: (keyword_id = k.id)
                                                                    ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=37091)
                                                                          Index Cond: (id = mk.movie_id)
                                                                          Filter: (production_year > 2005)
                                                                          Rows Removed by Filter: 1
                                                        ->  Sort  (cost=7.00..7.00 rows=2 width=4) (actual time=0.017..0.017 rows=2 loops=1)
                                                              Sort Key: kt.id
                                                              Sort Method: quicksort  Memory: 25kB
                                                              ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=2 width=4) (actual time=0.007..0.008 rows=2 loops=1)
                                                                    Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                    Rows Removed by Filter: 5
                                      ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..6.00 rows=3 width=13) (actual time=0.002..0.002 rows=2 loops=5316)
                                            Index Cond: (movie_id = t.id)
                                            Filter: (info < '8.5'::text)
                                            Rows Removed by Filter: 0
                          ->  Sort  (cost=113.00..113.00 rows=1 width=4) (actual time=0.020..0.020 rows=1 loops=1)
                                Sort Key: it2.id
                                Sort Method: quicksort  Memory: 25kB
                                ->  Seq Scan on info_type it2  (cost=0.00..113.00 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                                      Filter: ((info)::text = 'rating'::text)
                                      Rows Removed by Filter: 112
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=1 width=12) (actual time=0.005..0.008 rows=6 loops=4115)
                          Index Cond: (movie_id = t.id)
                          Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                          Rows Removed by Filter: 10
              ->  Hash  (cost=4.00..4.00 rows=4 width=4) (actual time=0.009..0.009 rows=4 loops=1)
                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                    ->  Seq Scan on company_type ct  (cost=0.00..4.00 rows=4 width=4) (actual time=0.006..0.006 rows=4 loops=1)
        ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=23216)
              Index Cond: (id = mc.company_id)
              Filter: ((country_code)::text <> '[us]'::text)
              Rows Removed by Filter: 0
Planning time: 19.146 ms
Execution time: 921.270 ms
