Aggregate  (cost=137448.80..137449.80 rows=1 width=96) (actual time=218.311..218.311 rows=1 loops=1)
  ->  Nested Loop  (cost=0.00..137448.80 rows=1 width=41) (actual time=1.144..216.635 rows=4803 loops=1)
        ->  Nested Loop  (cost=0.00..137446.80 rows=1 width=26) (actual time=1.141..206.242 rows=4955 loops=1)
              ->  Nested Loop  (cost=0.00..137444.00 rows=1 width=30) (actual time=1.138..201.270 rows=4955 loops=1)
                    ->  Nested Loop  (cost=0.00..137433.00 rows=1 width=42) (actual time=1.133..195.930 rows=432 loops=1)
                          ->  Nested Loop  (cost=0.00..137429.00 rows=1 width=46) (actual time=1.127..194.353 rows=1372 loops=1)
                                ->  Nested Loop  (cost=0.00..137420.00 rows=1 width=33) (actual time=1.121..192.271 rows=488 loops=1)
                                      ->  Nested Loop  (cost=0.00..137416.00 rows=1 width=37) (actual time=1.119..191.587 rows=543 loops=1)
                                            ->  Nested Loop  (cost=0.00..137330.00 rows=1 width=29) (actual time=1.106..162.433 rows=549 loops=1)
                                                  ->  Nested Loop  (cost=0.00..137327.00 rows=1 width=33) (actual time=1.105..161.803 rows=620 loops=1)
                                                        ->  Nested Loop  (cost=0.00..137323.00 rows=1 width=37) (actual time=1.100..158.500 rows=3200 loops=1)
                                                              ->  Nested Loop  (cost=0.00..137227.00 rows=16 width=25) (actual time=0.805..139.578 rows=11686 loops=1)
                                                                    ->  Nested Loop  (cost=0.00..137117.00 rows=55 width=29) (actual time=0.795..124.327 rows=14771 loops=1)
                                                                          ->  Nested Loop  (cost=0.00..136915.00 rows=101 width=4) (actual time=0.791..42.080 rows=37091 loops=1)
                                                                                ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=3 width=4) (actual time=0.784..15.894 rows=3 loops=1)
                                                                                      Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                      Rows Removed by Filter: 134167
                                                                                ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.006..7.250 rows=12364 loops=3)
                                                                                      Index Cond: (keyword_id = k.id)
                                                                          ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=37091)
                                                                                Index Cond: (id = mk.movie_id)
                                                                                Filter: (production_year > 2000)
                                                                                Rows Removed by Filter: 1
                                                                    ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=14771)
                                                                          Index Cond: (id = t.kind_id)
                                                                          Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                          Rows Removed by Filter: 0
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..4.00 rows=2 width=12) (actual time=0.001..0.001 rows=0 loops=11686)
                                                                    Index Cond: (movie_id = t.id)
                                                        ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=3200)
                                                              Index Cond: (id = cc.subject_id)
                                                              Filter: ((kind)::text = 'crew'::text)
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=620)
                                                        Index Cond: (id = cc.status_id)
                                                        Filter: ((kind)::text <> 'complete+verified'::text)
                                                        Rows Removed by Filter: 0
                                            ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=2 width=8) (actual time=0.046..0.053 rows=1 loops=549)
                                                  Index Cond: (movie_id = t.id)
                                                  Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                                  Rows Removed by Filter: 133
                                      ->  Index Scan using info_type_pkey on info_type it1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=543)
                                            Index Cond: (id = mi.info_type_id)
                                            Filter: ((info)::text = 'countries'::text)
                                            Rows Removed by Filter: 0
                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..6.00 rows=3 width=13) (actual time=0.003..0.004 rows=3 loops=488)
                                      Index Cond: (movie_id = t.id)
                                      Filter: (info < '8.5'::text)
                                      Rows Removed by Filter: 0
                          ->  Index Scan using info_type_pkey on info_type it2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=1372)
                                Index Cond: (id = mi_idx.info_type_id)
                                Filter: ((info)::text = 'rating'::text)
                                Rows Removed by Filter: 1
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=1 width=12) (actual time=0.004..0.011 rows=11 loops=432)
                          Index Cond: (movie_id = t.id)
                          Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                          Rows Removed by Filter: 10
              ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=4955)
                    Index Cond: (id = mc.company_type_id)
                    Heap Fetches: 4955
        ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=4955)
              Index Cond: (id = mc.company_id)
              Filter: ((country_code)::text <> '[us]'::text)
              Rows Removed by Filter: 0
Planning time: 54.706 ms
Execution time: 218.386 ms
