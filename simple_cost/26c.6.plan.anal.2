Aggregate  (cost=291727.00..291728.00 rows=1 width=96) (actual time=589.580..589.580 rows=1 loops=1)
  ->  Nested Loop  (cost=19.00..291727.00 rows=1 width=38) (actual time=2.247..587.508 rows=5400 loops=1)
        ->  Nested Loop  (cost=19.00..291725.00 rows=1 width=42) (actual time=2.241..567.170 rows=5400 loops=1)
              ->  Nested Loop  (cost=19.00..291623.00 rows=50 width=46) (actual time=2.236..549.811 rows=16596 loops=1)
                    ->  Nested Loop  (cost=19.00..290804.00 rows=91 width=53) (actual time=2.231..533.266 rows=5406 loops=1)
                          ->  Nested Loop  (cost=19.00..284268.00 rows=3268 width=41) (actual time=1.928..300.525 rows=189844 loops=1)
                                ->  Hash Join  (cost=19.00..259644.00 rows=228 width=29) (actual time=1.920..130.356 rows=1267 loops=1)
                                      Hash Cond: (t.kind_id = kt.id)
                                      ->  Hash Join  (cost=11.00..258269.00 rows=1595 width=33) (actual time=1.052..129.977 rows=1595 loops=1)
                                            Hash Cond: (cc.subject_id = cct1.id)
                                            ->  Hash Join  (cost=6.00..256725.00 rows=2052 width=37) (actual time=1.047..129.527 rows=2052 loops=1)
                                                  Hash Cond: (cc.status_id = cct2.id)
                                                  ->  Nested Loop  (cost=0.00..255180.00 rows=2052 width=41) (actual time=1.037..129.016 rows=2052 loops=1)
                                                        ->  Nested Loop  (cost=0.00..191502.00 rows=10613 width=29) (actual time=0.118..111.121 rows=10613 loops=1)
                                                              ->  Nested Loop  (cost=0.00..143320.00 rows=24091 width=4) (actual time=0.113..46.150 rows=24091 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=10 width=4) (actual time=0.101..26.136 rows=10 loops=1)
                                                                          Filter: (keyword = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                                          Rows Removed by Filter: 134160
                                                                    ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.007..1.702 rows=2409 loops=10)
                                                                          Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=24091)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2000)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..4.00 rows=2 width=12) (actual time=0.001..0.001 rows=0 loops=10613)
                                                              Index Cond: (movie_id = t.id)
                                                  ->  Hash  (cost=4.00..4.00 rows=2 width=4) (actual time=0.005..0.005 rows=2 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on comp_cast_type cct2  (cost=0.00..4.00 rows=2 width=4) (actual time=0.004..0.004 rows=2 loops=1)
                                                              Filter: ((kind)::text ~~ '%complete%'::text)
                                                              Rows Removed by Filter: 2
                                            ->  Hash  (cost=4.00..4.00 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                  ->  Seq Scan on comp_cast_type cct1  (cost=0.00..4.00 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                        Filter: ((kind)::text = 'cast'::text)
                                                        Rows Removed by Filter: 3
                                      ->  Hash  (cost=7.00..7.00 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                            ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'movie'::text)
                                                  Rows Removed by Filter: 6
                                ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.00..72.00 rows=36 width=12) (actual time=0.006..0.111 rows=150 loops=1267)
                                      Index Cond: (movie_id = t.id)
                          ->  Index Scan using char_name_pkey on char_name chn  (cost=0.00..2.00 rows=1 width=20) (actual time=0.001..0.001 rows=0 loops=189844)
                                Index Cond: (id = ci.person_role_id)
                                Filter: ((name IS NOT NULL) AND ((name ~~ '%man%'::text) OR (name ~~ '%Man%'::text)))
                                Rows Removed by Filter: 0
                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..6.00 rows=3 width=13) (actual time=0.002..0.002 rows=3 loops=5406)
                          Index Cond: (movie_id = t.id)
              ->  Index Scan using info_type_pkey on info_type it2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=16596)
                    Index Cond: (id = mi_idx.info_type_id)
                    Filter: ((info)::text = 'rating'::text)
                    Rows Removed by Filter: 1
        ->  Index Only Scan using name_pkey on name n  (cost=0.00..2.00 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=5400)
              Index Cond: (id = ci.person_id)
              Heap Fetches: 5400
Planning time: 41.783 ms
Execution time: 589.666 ms
