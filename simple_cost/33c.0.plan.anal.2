Aggregate  (cost=123656.00..123657.00 rows=1 width=192) (actual time=141.309..141.309 rows=1 loops=1)
  ->  Nested Loop  (cost=90121.00..123656.00 rows=1 width=82) (actual time=67.290..141.236 rows=114 loops=1)
        ->  Nested Loop  (cost=90121.00..123654.00 rows=1 width=67) (actual time=67.287..141.008 rows=131 loops=1)
              ->  Nested Loop  (cost=90121.00..123650.00 rows=1 width=71) (actual time=67.190..140.626 rows=393 loops=1)
                    ->  Nested Loop  (cost=90121.00..123648.00 rows=1 width=56) (actual time=67.187..139.989 rows=393 loops=1)
                          ->  Nested Loop  (cost=90121.00..123631.00 rows=8 width=60) (actual time=67.088..119.774 rows=23271 loops=1)
                                ->  Hash Join  (cost=90121.00..123511.00 rows=8 width=68) (actual time=67.085..98.748 rows=10536 loops=1)
                                      Hash Cond: (t1.kind_id = kt1.id)
                                      ->  Nested Loop  (cost=90112.00..123478.00 rows=28 width=72) (actual time=67.074..96.631 rows=10536 loops=1)
                                            ->  Nested Loop  (cost=90112.00..123073.00 rows=27 width=80) (actual time=67.070..90.130 rows=2283 loops=1)
                                                  ->  Nested Loop  (cost=90112.00..123019.00 rows=27 width=55) (actual time=67.067..86.444 rows=2283 loops=1)
                                                        ->  Hash Join  (cost=90112.00..122938.00 rows=9 width=42) (actual time=67.063..84.469 rows=870 loops=1)
                                                              Hash Cond: (mi_idx2.info_type_id = it2.id)
                                                              ->  Nested Loop  (cost=89998.00..121849.00 rows=984 width=46) (actual time=67.049..83.770 rows=7327 loops=1)
                                                                    ->  Merge Join  (cost=89998.00..93537.00 rows=3539 width=33) (actual time=67.042..68.794 rows=6332 loops=1)
                                                                          Merge Cond: (t2.kind_id = kt2.id)
                                                                          ->  Sort  (cost=89991.00..89991.00 rows=12387 width=37) (actual time=66.697..67.320 rows=10752 loops=1)
                                                                                Sort Key: t2.kind_id
                                                                                Sort Method: quicksort  Memory: 1350kB
                                                                                ->  Nested Loop  (cost=0.00..89991.00 rows=12387 width=37) (actual time=0.010..64.500 rows=10752 loops=1)
                                                                                      ->  Seq Scan on movie_link ml  (cost=0.00..29997.00 rows=29997 width=12) (actual time=0.004..2.170 rows=29997 loops=1)
                                                                                      ->  Index Scan using title_pkey on title t2  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=29997)
                                                                                            Index Cond: (id = ml.linked_movie_id)
                                                                                            Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                                            Rows Removed by Filter: 1
                                                                          ->  Sort  (cost=7.00..7.00 rows=2 width=4) (actual time=0.009..0.009 rows=2 loops=1)
                                                                                Sort Key: kt2.id
                                                                                Sort Method: quicksort  Memory: 25kB
                                                                                ->  Seq Scan on kind_type kt2  (cost=0.00..7.00 rows=2 width=4) (actual time=0.004..0.005 rows=2 loops=1)
                                                                                      Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                                                      Rows Removed by Filter: 5
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.00..6.00 rows=2 width=13) (actual time=0.002..0.002 rows=1 loops=6332)
                                                                          Index Cond: (movie_id = t2.id)
                                                                          Filter: (info < '3.5'::text)
                                                                          Rows Removed by Filter: 1
                                                              ->  Hash  (cost=113.00..113.00 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on info_type it2  (cost=0.00..113.00 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.00..6.00 rows=3 width=13) (actual time=0.001..0.002 rows=3 loops=870)
                                                              Index Cond: (movie_id = ml.movie_id)
                                                  ->  Index Scan using title_pkey on title t1  (cost=0.00..2.00 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=2283)
                                                        Index Cond: (id = ml.movie_id)
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.00..10.00 rows=5 width=8) (actual time=0.001..0.002 rows=5 loops=2283)
                                                  Index Cond: (movie_id = t1.id)
                                      ->  Hash  (cost=7.00..7.00 rows=2 width=4) (actual time=0.007..0.007 rows=2 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                            ->  Seq Scan on kind_type kt1  (cost=0.00..7.00 rows=2 width=4) (actual time=0.005..0.006 rows=2 loops=1)
                                                  Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                  Rows Removed by Filter: 5
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.00..10.00 rows=5 width=8) (actual time=0.001..0.002 rows=2 loops=10536)
                                      Index Cond: (movie_id = t2.id)
                          ->  Index Scan using link_type_pkey on link_type lt  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=23271)
                                Index Cond: (id = ml.link_type_id)
                                Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                Rows Removed by Filter: 1
                    ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.00..2.00 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=393)
                          Index Cond: (id = mc2.company_id)
              ->  Index Scan using info_type_pkey on info_type it1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=393)
                    Index Cond: (id = mi_idx1.info_type_id)
                    Filter: ((info)::text = 'rating'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.00..2.00 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=131)
              Index Cond: (id = mc1.company_id)
              Filter: ((country_code)::text <> '[us]'::text)
              Rows Removed by Filter: 0
Planning time: 57.732 ms
Execution time: 141.396 ms
