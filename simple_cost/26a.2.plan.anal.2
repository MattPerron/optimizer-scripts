Aggregate  (cost=206816.00..206817.00 rows=1 width=128) (actual time=1120.455..1120.455 rows=1 loops=1)
  ->  Nested Loop  (cost=191520.00..206816.00 rows=1 width=53) (actual time=115.474..1119.560 rows=1728 loops=1)
        ->  Nested Loop  (cost=191520.00..206812.00 rows=1 width=57) (actual time=108.549..1116.688 rows=2429 loops=1)
              ->  Nested Loop  (cost=191520.00..206777.00 rows=5 width=64) (actual time=108.542..1100.585 rows=5406 loops=1)
                    ->  Nested Loop  (cost=191520.00..206433.00 rows=172 width=52) (actual time=108.527..852.991 rows=189844 loops=1)
                          ->  Nested Loop  (cost=191520.00..206089.00 rows=172 width=41) (actual time=108.522..305.385 rows=189844 loops=1)
                                ->  Hash Join  (cost=191520.00..204793.00 rows=12 width=29) (actual time=108.511..121.141 rows=1267 loops=1)
                                      Hash Cond: (cc.subject_id = cct1.id)
                                      ->  Hash Join  (cost=191515.00..204750.00 rows=50 width=33) (actual time=108.496..120.700 rows=1485 loops=1)
                                            Hash Cond: (cc.status_id = cct2.id)
                                            ->  Nested Loop  (cost=191509.00..204669.00 rows=100 width=37) (actual time=108.489..120.231 rows=1485 loops=1)
                                                  ->  Merge Join  (cost=191509.00..193389.00 rows=1880 width=25) (actual time=108.480..110.297 rows=5032 loops=1)
                                                        Merge Cond: (t.kind_id = kt.id)
                                                        ->  Sort  (cost=191502.00..191502.00 rows=13163 width=29) (actual time=108.457..109.091 rows=5033 loops=1)
                                                              Sort Key: t.kind_id
                                                              Sort Method: quicksort  Memory: 1275kB
                                                              ->  Nested Loop  (cost=0.00..191502.00 rows=13163 width=29) (actual time=0.119..106.126 rows=10613 loops=1)
                                                                    ->  Nested Loop  (cost=0.00..143320.00 rows=24091 width=4) (actual time=0.113..46.541 rows=24091 loops=1)
                                                                          ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=10 width=4) (actual time=0.101..27.900 rows=10 loops=1)
                                                                                Filter: (keyword = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                                                Rows Removed by Filter: 134160
                                                                          ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.007..1.567 rows=2409 loops=10)
                                                                                Index Cond: (keyword_id = k.id)
                                                                    ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=24091)
                                                                          Index Cond: (id = mk.movie_id)
                                                                          Filter: (production_year > 2000)
                                                                          Rows Removed by Filter: 1
                                                        ->  Sort  (cost=7.00..7.00 rows=1 width=4) (actual time=0.021..0.021 rows=1 loops=1)
                                                              Sort Key: kt.id
                                                              Sort Method: quicksort  Memory: 25kB
                                                              ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'movie'::text)
                                                                    Rows Removed by Filter: 6
                                                  ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..4.00 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=5032)
                                                        Index Cond: (movie_id = t.id)
                                            ->  Hash  (cost=4.00..4.00 rows=2 width=4) (actual time=0.003..0.003 rows=2 loops=1)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                  ->  Seq Scan on comp_cast_type cct2  (cost=0.00..4.00 rows=2 width=4) (actual time=0.002..0.002 rows=2 loops=1)
                                                        Filter: ((kind)::text ~~ '%complete%'::text)
                                                        Rows Removed by Filter: 2
                                      ->  Hash  (cost=4.00..4.00 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                            ->  Seq Scan on comp_cast_type cct1  (cost=0.00..4.00 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'cast'::text)
                                                  Rows Removed by Filter: 3
                                ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.00..72.00 rows=36 width=12) (actual time=0.006..0.121 rows=150 loops=1267)
                                      Index Cond: (movie_id = t.id)
                          ->  Index Scan using name_pkey on name n  (cost=0.00..2.00 rows=1 width=19) (actual time=0.003..0.003 rows=1 loops=189844)
                                Index Cond: (id = ci.person_id)
                    ->  Index Scan using char_name_pkey on char_name chn  (cost=0.00..2.00 rows=1 width=20) (actual time=0.001..0.001 rows=0 loops=189844)
                          Index Cond: (id = ci.person_role_id)
                          Filter: ((name IS NOT NULL) AND ((name ~~ '%man%'::text) OR (name ~~ '%Man%'::text)))
                          Rows Removed by Filter: 0
              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..6.00 rows=1 width=13) (actual time=0.003..0.003 rows=0 loops=5406)
                    Index Cond: (movie_id = t.id)
                    Filter: (info > '7.0'::text)
                    Rows Removed by Filter: 3
        ->  Index Scan using info_type_pkey on info_type it2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=2429)
              Index Cond: (id = mi_idx.info_type_id)
              Filter: ((info)::text = 'rating'::text)
              Rows Removed by Filter: 0
Planning time: 42.237 ms
Execution time: 1120.557 ms
