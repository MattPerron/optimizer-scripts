Aggregate  (cost=33923.00..33924.00 rows=1 width=192) (actual time=18.250..18.250 rows=1 loops=1)
  ->  Nested Loop  (cost=26900.00..33923.00 rows=1 width=82) (actual time=5.599..18.241 rows=8 loops=1)
        ->  Nested Loop  (cost=26900.00..33919.00 rows=1 width=86) (actual time=5.543..17.563 rows=815 loops=1)
              ->  Nested Loop  (cost=26900.00..33915.00 rows=1 width=90) (actual time=5.540..16.838 rows=815 loops=1)
                    ->  Nested Loop  (cost=26900.00..33839.00 rows=37 width=94) (actual time=5.371..14.586 rows=2445 loops=1)
                          ->  Nested Loop  (cost=26900.00..33765.00 rows=37 width=79) (actual time=5.369..10.676 rows=2445 loops=1)
                                ->  Nested Loop  (cost=26900.00..33225.00 rows=36 width=87) (actual time=5.365..9.470 rows=288 loops=1)
                                      ->  Nested Loop  (cost=26900.00..33023.00 rows=101 width=72) (actual time=5.357..7.566 rows=1134 loops=1)
                                            ->  Nested Loop  (cost=26900.00..31553.00 rows=98 width=80) (actual time=5.351..6.663 rows=285 loops=1)
                                                  ->  Nested Loop  (cost=26900.00..28914.00 rows=377 width=67) (actual time=5.346..6.075 rows=213 loops=1)
                                                        ->  Nested Loop  (cost=26900.00..28160.00 rows=377 width=42) (actual time=5.343..5.669 rows=213 loops=1)
                                                              ->  Merge Join  (cost=26900.00..27026.00 rows=126 width=29) (actual time=5.337..5.363 rows=100 loops=1)
                                                                    Merge Cond: (kt2.id = t2.kind_id)
                                                                    ->  Sort  (cost=7.00..7.00 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                                          Sort Key: kt2.id
                                                                          Sort Method: quicksort  Memory: 25kB
                                                                          ->  Seq Scan on kind_type kt2  (cost=0.00..7.00 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                                                Filter: ((kind)::text = 'tv series'::text)
                                                                                Rows Removed by Filter: 6
                                                                    ->  Sort  (cost=26893.00..26893.00 rows=879 width=33) (actual time=5.326..5.334 rows=108 loops=1)
                                                                          Sort Key: t2.kind_id
                                                                          Sort Method: quicksort  Memory: 46kB
                                                                          ->  Nested Loop  (cost=0.00..26893.00 rows=879 width=33) (actual time=0.051..5.271 rows=245 loops=1)
                                                                                ->  Nested Loop  (cost=0.00..16893.00 rows=5000 width=8) (actual time=0.015..0.743 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..18.00 rows=3 width=4) (actual time=0.002..0.006 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Index Scan using link_type_id_movie_link on movie_link ml  (cost=0.00..3750.00 rows=1875 width=12) (actual time=0.009..0.232 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                                ->  Index Scan using title_pkey on title t2  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2315)
                                                                                      Index Cond: (id = ml.linked_movie_id)
                                                                                      Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                                                                      Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.00..6.00 rows=3 width=13) (actual time=0.002..0.003 rows=2 loops=100)
                                                                    Index Cond: (movie_id = ml.movie_id)
                                                        ->  Index Scan using title_pkey on title t1  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=213)
                                                              Index Cond: (id = ml.movie_id)
                                                  ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.00..6.00 rows=1 width=13) (actual time=0.002..0.002 rows=1 loops=213)
                                                        Index Cond: (movie_id = t2.id)
                                                        Filter: (info < '3.0'::text)
                                                        Rows Removed by Filter: 1
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.00..10.00 rows=5 width=8) (actual time=0.002..0.002 rows=4 loops=285)
                                                  Index Cond: (movie_id = t1.id)
                                      ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.00..2.00 rows=1 width=23) (actual time=0.001..0.001 rows=0 loops=1134)
                                            Index Cond: (id = mc1.company_id)
                                            Filter: ((country_code)::text = '[us]'::text)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.00..10.00 rows=5 width=8) (actual time=0.002..0.003 rows=8 loops=288)
                                      Index Cond: (movie_id = t2.id)
                          ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.00..2.00 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=2445)
                                Index Cond: (id = mc2.company_id)
                    ->  Index Scan using info_type_pkey on info_type it1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=2445)
                          Index Cond: (id = mi_idx1.info_type_id)
                          Filter: ((info)::text = 'rating'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=815)
                    Index Cond: (id = t1.kind_id)
                    Filter: ((kind)::text = 'tv series'::text)
        ->  Index Scan using info_type_pkey on info_type it2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=815)
              Index Cond: (id = mi_idx2.info_type_id)
              Filter: ((info)::text = 'rating'::text)
              Rows Removed by Filter: 1
Planning time: 60.453 ms
Execution time: 18.331 ms
