Aggregate  (cost=32006.67..32007.67 rows=1 width=192) (actual time=9.408..9.408 rows=1 loops=1)
  ->  Nested Loop  (cost=29901.00..32006.67 rows=1 width=82) (actual time=7.567..9.323 rows=114 loops=1)
        ->  Nested Loop  (cost=29901.00..32004.67 rows=1 width=67) (actual time=7.564..9.113 rows=114 loops=1)
              ->  Nested Loop  (cost=29901.00..31989.67 rows=1 width=75) (actual time=7.560..8.980 rows=46 loops=1)
                    ->  Nested Loop  (cost=29901.00..31986.33 rows=1 width=79) (actual time=7.558..8.931 rows=46 loops=1)
                          ->  Nested Loop  (cost=29901.00..31983.00 rows=1 width=83) (actual time=7.556..8.852 rows=72 loops=1)
                                ->  Nested Loop  (cost=29901.00..31981.00 rows=1 width=58) (actual time=7.532..8.661 rows=91 loops=1)
                                      ->  Nested Loop  (cost=29901.00..31869.00 rows=55 width=62) (actual time=7.527..8.384 rows=273 loops=1)
                                            ->  Nested Loop  (cost=29901.00..30969.00 rows=100 width=65) (actual time=7.524..8.130 rows=98 loops=1)
                                                  ->  Nested Loop  (cost=29901.00..30769.00 rows=100 width=40) (actual time=7.520..7.932 rows=98 loops=1)
                                                        ->  Nested Loop  (cost=29901.00..30397.00 rows=186 width=25) (actual time=7.493..7.667 rows=126 loops=1)
                                                              ->  Merge Join  (cost=29901.00..29932.00 rows=31 width=17) (actual time=7.487..7.500 rows=47 loops=1)
                                                                    Merge Cond: (it2.id = mi_idx2.info_type_id)
                                                                    ->  Sort  (cost=113.00..113.00 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=1)
                                                                          Sort Key: it2.id
                                                                          Sort Method: quicksort  Memory: 25kB
                                                                          ->  Seq Scan on info_type it2  (cost=0.00..113.00 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                                    ->  Sort  (cost=29788.00..29788.00 rows=3553 width=21) (actual time=7.089..7.245 rows=3080 loops=1)
                                                                          Sort Key: mi_idx2.info_type_id
                                                                          Sort Method: quicksort  Memory: 337kB
                                                                          ->  Nested Loop  (cost=0.00..29788.00 rows=3553 width=21) (actual time=0.017..6.479 rows=3080 loops=1)
                                                                                ->  Nested Loop  (cost=0.00..11268.00 rows=2315 width=8) (actual time=0.012..0.715 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..18.00 rows=2 width=4) (actual time=0.002..0.006 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Index Scan using link_type_id_movie_link on movie_link ml  (cost=0.00..3750.00 rows=1875 width=12) (actual time=0.008..0.214 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.00..6.00 rows=2 width=13) (actual time=0.002..0.002 rows=1 loops=2315)
                                                                                      Index Cond: (movie_id = ml.linked_movie_id)
                                                                                      Filter: (info < '3.5'::text)
                                                                                      Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.00..10.00 rows=5 width=8) (actual time=0.002..0.003 rows=3 loops=47)
                                                                    Index Cond: (movie_id = ml.movie_id)
                                                        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=126)
                                                              Index Cond: (id = mc1.company_id)
                                                              Filter: ((country_code)::text <> '[us]'::text)
                                                              Rows Removed by Filter: 0
                                                  ->  Index Scan using title_pkey on title t1  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=98)
                                                        Index Cond: (id = ml.movie_id)
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.00..6.00 rows=3 width=13) (actual time=0.002..0.002 rows=3 loops=98)
                                                  Index Cond: (movie_id = t1.id)
                                      ->  Index Scan using info_type_pkey on info_type it1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=273)
                                            Index Cond: (id = mi_idx1.info_type_id)
                                            Filter: ((info)::text = 'rating'::text)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using title_pkey on title t2  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=91)
                                      Index Cond: (id = ml.linked_movie_id)
                                      Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                      Rows Removed by Filter: 0
                          ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=72)
                                Index Cond: (id = t2.kind_id)
                                Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                Rows Removed by Filter: 0
                    ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=46)
                          Index Cond: (id = t1.kind_id)
                          Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
              ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.00..10.00 rows=5 width=8) (actual time=0.002..0.002 rows=2 loops=46)
                    Index Cond: (movie_id = t2.id)
        ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.00..2.00 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=114)
              Index Cond: (id = mc2.company_id)
Planning time: 57.806 ms
Execution time: 9.487 ms
