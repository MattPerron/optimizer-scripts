Aggregate  (cost=308594.80..308595.80 rows=1 width=96) (actual time=153.533..153.533 rows=1 loops=1)
  ->  Nested Loop  (cost=211116.00..308594.80 rows=1 width=41) (actual time=120.691..153.475 rows=148 loops=1)
        ->  Nested Loop  (cost=211116.00..308592.00 rows=1 width=45) (actual time=120.687..153.321 rows=148 loops=1)
              ->  Nested Loop  (cost=211116.00..308590.00 rows=1 width=30) (actual time=120.683..152.932 rows=150 loops=1)
                    ->  Nested Loop  (cost=211116.00..308579.00 rows=1 width=42) (actual time=117.378..152.708 rows=13 loops=1)
                          ->  Nested Loop  (cost=211116.00..308575.00 rows=1 width=46) (actual time=117.365..152.681 rows=20 loops=1)
                                ->  Nested Loop  (cost=211116.00..308529.00 rows=22 width=50) (actual time=117.362..152.643 rows=22 loops=1)
                                      ->  Hash Join  (cost=211116.00..291784.00 rows=197 width=42) (actual time=116.374..144.900 rows=197 loops=1)
                                            Hash Cond: (cc.status_id = cct2.id)
                                            ->  Hash Join  (cost=211109.00..291620.00 rows=209 width=46) (actual time=116.363..144.835 rows=209 loops=1)
                                                  Hash Cond: (cc.subject_id = cct1.id)
                                                  ->  Nested Loop  (cost=211104.00..290798.00 rows=1089 width=50) (actual time=115.407..144.687 rows=1089 loops=1)
                                                        ->  Nested Loop  (cost=211104.00..270398.00 rows=3400 width=38) (actual time=115.324..139.091 rows=3400 loops=1)
                                                              ->  Merge Join  (cost=211104.00..213887.00 rows=8073 width=25) (actual time=115.316..117.632 rows=8073 loops=1)
                                                                    Merge Cond: (kt.id = t.kind_id)
                                                                    ->  Sort  (cost=7.00..7.00 rows=2 width=4) (actual time=0.006..0.007 rows=2 loops=1)
                                                                          Sort Key: kt.id
                                                                          Sort Method: quicksort  Memory: 25kB
                                                                          ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=2 width=4) (actual time=0.002..0.003 rows=2 loops=1)
                                                                                Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                                Rows Removed by Filter: 5
                                                                    ->  Sort  (cost=211097.00..211097.00 rows=9739 width=29) (actual time=115.308..116.047 rows=9739 loops=1)
                                                                          Sort Key: t.kind_id
                                                                          Sort Method: quicksort  Memory: 1168kB
                                                                          ->  Nested Loop  (cost=0.00..211097.00 rows=9739 width=29) (actual time=0.791..113.352 rows=9739 loops=1)
                                                                                ->  Nested Loop  (cost=0.00..136915.00 rows=37091 width=4) (actual time=0.786..38.847 rows=37091 loops=1)
                                                                                      ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=3 width=4) (actual time=0.779..15.429 rows=3 loops=1)
                                                                                            Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                            Rows Removed by Filter: 134167
                                                                                      ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.006..6.368 rows=12364 loops=3)
                                                                                            Index Cond: (keyword_id = k.id)
                                                                                ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=37091)
                                                                                      Index Cond: (id = mk.movie_id)
                                                                                      Filter: (production_year > 2005)
                                                                                      Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..6.00 rows=1 width=13) (actual time=0.002..0.002 rows=0 loops=8073)
                                                                    Index Cond: (movie_id = t.id)
                                                                    Filter: (info > '6.5'::text)
                                                                    Rows Removed by Filter: 2
                                                        ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..4.00 rows=2 width=12) (actual time=0.001..0.001 rows=0 loops=3400)
                                                              Index Cond: (movie_id = t.id)
                                                  ->  Hash  (cost=4.00..4.00 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on comp_cast_type cct1  (cost=0.00..4.00 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'crew'::text)
                                                              Rows Removed by Filter: 3
                                            ->  Hash  (cost=4.00..4.00 rows=3 width=4) (actual time=0.007..0.007 rows=3 loops=1)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                  ->  Seq Scan on comp_cast_type cct2  (cost=0.00..4.00 rows=3 width=4) (actual time=0.004..0.005 rows=3 loops=1)
                                                        Filter: ((kind)::text <> 'complete+verified'::text)
                                                        Rows Removed by Filter: 1
                                      ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=1 width=8) (actual time=0.038..0.039 rows=0 loops=197)
                                            Index Cond: (movie_id = t.id)
                                            Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                            Rows Removed by Filter: 139
                                ->  Index Scan using info_type_pkey on info_type it2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=22)
                                      Index Cond: (id = mi_idx.info_type_id)
                                      Filter: ((info)::text = 'rating'::text)
                                      Rows Removed by Filter: 0
                          ->  Index Scan using info_type_pkey on info_type it1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=20)
                                Index Cond: (id = mi.info_type_id)
                                Filter: ((info)::text = 'countries'::text)
                                Rows Removed by Filter: 0
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=1 width=12) (actual time=0.005..0.016 rows=12 loops=13)
                          Index Cond: (movie_id = t.id)
                          Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                          Rows Removed by Filter: 17
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=150)
                    Index Cond: (id = mc.company_id)
                    Filter: ((country_code)::text <> '[us]'::text)
                    Rows Removed by Filter: 0
        ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=148)
              Index Cond: (id = mc.company_type_id)
              Heap Fetches: 148
Planning time: 54.824 ms
Execution time: 153.613 ms
