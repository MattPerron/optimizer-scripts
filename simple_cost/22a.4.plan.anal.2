Aggregate  (cost=273561.00..273562.00 rows=1 width=96) (actual time=312.482..312.483 rows=1 loops=1)
  ->  Nested Loop  (cost=211112.00..273561.00 rows=1 width=41) (actual time=128.153..311.468 rows=2851 loops=1)
        ->  Nested Loop  (cost=211112.00..273557.00 rows=1 width=45) (actual time=128.150..308.442 rows=3042 loops=1)
              ->  Nested Loop  (cost=211112.00..273471.00 rows=1 width=57) (actual time=128.125..193.891 rows=2958 loops=1)
                    ->  Nested Loop  (cost=211112.00..273455.00 rows=7 width=61) (actual time=128.119..183.200 rows=11112 loops=1)
                          ->  Hash Join  (cost=211112.00..273320.00 rows=15 width=48) (actual time=128.111..170.591 rows=4302 loops=1)
                                Hash Cond: (mc.company_type_id = ct.id)
                                ->  Nested Loop  (cost=211104.00..268822.00 rows=5987 width=52) (actual time=128.097..169.567 rows=4302 loops=1)
                                      ->  Nested Loop  (cost=211104.00..265858.00 rows=1482 width=37) (actual time=128.091..159.182 rows=4808 loops=1)
                                            ->  Merge Join  (cost=211104.00..212706.00 rows=4832 width=25) (actual time=128.038..129.637 rows=4832 loops=1)
                                                  Merge Cond: (t.kind_id = kt.id)
                                                  ->  Sort  (cost=211097.00..211097.00 rows=5606 width=29) (actual time=128.022..128.512 rows=5606 loops=1)
                                                        Sort Key: t.kind_id
                                                        Sort Method: quicksort  Memory: 643kB
                                                        ->  Nested Loop  (cost=0.00..211097.00 rows=5606 width=29) (actual time=0.814..126.830 rows=5606 loops=1)
                                                              ->  Nested Loop  (cost=0.00..136915.00 rows=37091 width=4) (actual time=0.799..43.364 rows=37091 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=3 width=4) (actual time=0.791..15.634 rows=3 loops=1)
                                                                          Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                          Rows Removed by Filter: 134167
                                                                    ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.007..7.769 rows=12364 loops=3)
                                                                          Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=37091)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2008)
                                                                    Rows Removed by Filter: 1
                                                  ->  Sort  (cost=7.00..7.00 rows=2 width=4) (actual time=0.012..0.013 rows=2 loops=1)
                                                        Sort Key: kt.id
                                                        Sort Method: quicksort  Memory: 25kB
                                                        ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=2 width=4) (actual time=0.005..0.006 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                              Rows Removed by Filter: 5
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=1 width=12) (actual time=0.005..0.006 rows=1 loops=4832)
                                                  Index Cond: (movie_id = t.id)
                                                  Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                                  Rows Removed by Filter: 8
                                      ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=4808)
                                            Index Cond: (id = mc.company_id)
                                            Filter: ((country_code)::text <> '[us]'::text)
                                            Rows Removed by Filter: 0
                                ->  Hash  (cost=4.00..4.00 rows=4 width=4) (actual time=0.008..0.008 rows=4 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                      ->  Seq Scan on company_type ct  (cost=0.00..4.00 rows=4 width=4) (actual time=0.005..0.006 rows=4 loops=1)
                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..6.00 rows=3 width=13) (actual time=0.002..0.002 rows=3 loops=4302)
                                Index Cond: (movie_id = t.id)
                                Filter: (info < '7.0'::text)
                                Rows Removed by Filter: 0
                    ->  Index Scan using info_type_pkey on info_type it2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=11112)
                          Index Cond: (id = mi_idx.info_type_id)
                          Filter: ((info)::text = 'rating'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=2 width=8) (actual time=0.035..0.038 rows=1 loops=2958)
                    Index Cond: (movie_id = t.id)
                    Filter: (info = ANY ('{Germany,German,USA,American}'::text[]))
                    Rows Removed by Filter: 155
        ->  Index Scan using info_type_pkey on info_type it1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=3042)
              Index Cond: (id = mi.info_type_id)
              Filter: ((info)::text = 'countries'::text)
              Rows Removed by Filter: 0
Planning time: 19.112 ms
Execution time: 312.573 ms
