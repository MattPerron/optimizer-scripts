Aggregate  (cost=71598.02..71599.02 rows=1 width=96) (actual time=51.245..51.245 rows=1 loops=1)
  ->  Nested Loop  (cost=70259.02..71598.02 rows=1 width=48) (actual time=28.136..51.004 rows=743 loops=1)
        ->  Nested Loop  (cost=70259.02..71144.02 rows=226 width=52) (actual time=26.936..35.581 rows=11620 loops=1)
              ->  Nested Loop  (cost=70259.02..70469.02 rows=5 width=68) (actual time=26.932..31.393 rows=1150 loops=1)
                    ->  Nested Loop  (cost=70259.02..70295.02 rows=2 width=64) (actual time=26.915..28.350 rows=277 loops=1)
                          ->  Merge Join  (cost=70259.02..70271.02 rows=12 width=49) (actual time=26.903..27.095 rows=763 loops=1)
                                Merge Cond: (ct.id = mc.company_type_id)
                                ->  Sort  (cost=4.00..4.00 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                      Sort Key: ct.id
                                      Sort Method: quicksort  Memory: 25kB
                                      ->  Seq Scan on company_type ct  (cost=0.00..4.00 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                            Filter: ((kind)::text = 'production companies'::text)
                                            Rows Removed by Filter: 3
                                ->  Sort  (cost=70255.02..70255.02 rows=50 width=53) (actual time=26.880..26.922 rows=864 loops=1)
                                      Sort Key: mc.company_type_id
                                      Sort Method: quicksort  Memory: 124kB
                                      ->  Nested Loop  (cost=70017.02..70255.02 rows=50 width=53) (actual time=25.883..26.684 rows=864 loops=1)
                                            ->  Merge Join  (cost=70017.02..70034.02 rows=17 width=41) (actual time=25.878..25.933 rows=228 loops=1)
                                                  Merge Cond: (cc.subject_id = cct1.id)
                                                  ->  Sort  (cost=70013.02..70013.02 rows=67 width=45) (actual time=25.870..25.882 rows=229 loops=1)
                                                        Sort Key: cc.subject_id
                                                        Sort Method: quicksort  Memory: 48kB
                                                        ->  Merge Join  (cost=69946.02..70013.02 rows=67 width=45) (actual time=25.757..25.817 rows=257 loops=1)
                                                              Merge Cond: (cc.status_id = cct2.id)
                                                              ->  Sort  (cost=69942.02..69942.02 rows=134 width=49) (actual time=25.748..25.761 rows=257 loops=1)
                                                                    Sort Key: cc.status_id
                                                                    Sort Method: quicksort  Memory: 49kB
                                                                    ->  Merge Join  (cost=69808.02..69942.02 rows=134 width=49) (actual time=25.632..25.693 rows=257 loops=1)
                                                                          Merge Cond: (lt.id = ml.link_type_id)
                                                                          ->  Sort  (cost=18.00..18.00 rows=2 width=16) (actual time=0.007..0.007 rows=2 loops=1)
                                                                                Sort Key: lt.id
                                                                                Sort Method: quicksort  Memory: 25kB
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..18.00 rows=2 width=16) (actual time=0.002..0.005 rows=2 loops=1)
                                                                                      Filter: ((link)::text ~~ '%follow%'::text)
                                                                                      Rows Removed by Filter: 16
                                                                          ->  Sort  (cost=69790.02..69790.02 rows=1205 width=41) (actual time=25.625..25.639 rows=258 loops=1)
                                                                                Sort Key: ml.link_type_id
                                                                                Sort Method: quicksort  Memory: 585kB
                                                                                ->  Merge Join  (cost=29997.00..69790.02 rows=1205 width=41) (actual time=7.246..24.716 rows=4599 loops=1)
                                                                                      Merge Cond: (t.id = ml.movie_id)
                                                                                      ->  Nested Loop  (cost=0.00..540344.00 rows=101535 width=33) (actual time=0.010..12.924 rows=5642 loops=1)
                                                                                            ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..270172.00 rows=135086 width=12) (actual time=0.005..1.915 rows=5993 loops=1)
                                                                                            ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=5993)
                                                                                                  Index Cond: (id = cc.movie_id)
                                                                                                  Filter: ((production_year >= 1950) AND (production_year <= 2010))
                                                                                                  Rows Removed by Filter: 0
                                                                                      ->  Sort  (cost=29997.00..29997.00 rows=29997 width=8) (actual time=7.215..8.906 rows=30682 loops=1)
                                                                                            Sort Key: ml.movie_id
                                                                                            Sort Method: quicksort  Memory: 2175kB
                                                                                            ->  Seq Scan on movie_link ml  (cost=0.00..29997.00 rows=29997 width=8) (actual time=0.004..3.092 rows=29997 loops=1)
                                                              ->  Sort  (cost=4.00..4.00 rows=2 width=4) (actual time=0.008..0.008 rows=2 loops=1)
                                                                    Sort Key: cct2.id
                                                                    Sort Method: quicksort  Memory: 25kB
                                                                    ->  Seq Scan on comp_cast_type cct2  (cost=0.00..4.00 rows=2 width=4) (actual time=0.004..0.004 rows=2 loops=1)
                                                                          Filter: ((kind)::text ~~ 'complete%'::text)
                                                                          Rows Removed by Filter: 2
                                                  ->  Sort  (cost=4.00..4.00 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                        Sort Key: cct1.id
                                                        Sort Method: quicksort  Memory: 25kB
                                                        ->  Seq Scan on comp_cast_type cct1  (cost=0.00..4.00 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'cast'::text)
                                                              Rows Removed by Filter: 3
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=3 width=12) (actual time=0.002..0.003 rows=4 loops=228)
                                                  Index Cond: (movie_id = ml.movie_id)
                                                  Filter: (note IS NULL)
                                                  Rows Removed by Filter: 3
                          ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=23) (actual time=0.001..0.001 rows=0 loops=763)
                                Index Cond: (id = mc.company_id)
                                Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                                Rows Removed by Filter: 1
                    ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=3 width=4) (actual time=0.009..0.010 rows=4 loops=277)
                          Index Cond: (movie_id = ml.movie_id)
                          Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
                          Rows Removed by Filter: 21
              ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.00..90.00 rows=45 width=8) (actual time=0.001..0.002 rows=10 loops=1150)
                    Index Cond: (movie_id = ml.movie_id)
        ->  Index Scan using keyword_pkey on keyword k  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=11620)
              Index Cond: (id = mk.keyword_id)
              Filter: (keyword = 'sequel'::text)
              Rows Removed by Filter: 1
Planning time: 44.972 ms
Execution time: 51.319 ms
