Aggregate  (cost=246525.13..246526.13 rows=1 width=32) (actual time=1583.826..1583.826 rows=1 loops=1)
  ->  Nested Loop  (cost=212604.00..246525.13 rows=1 width=17) (actual time=288.787..1583.783 rows=33 loops=1)
        ->  Nested Loop  (cost=212604.00..246523.13 rows=1 width=21) (actual time=288.775..1583.606 rows=33 loops=1)
              ->  Nested Loop  (cost=212604.00..246417.00 rows=53 width=25) (actual time=148.052..753.020 rows=532809 loops=1)
                    ->  Hash Join  (cost=212604.00..244797.00 rows=15 width=29) (actual time=148.031..187.735 rows=6016 loops=1)
                          Hash Cond: (cc.status_id = cct2.id)
                          ->  Hash Join  (cost=212598.00..244769.00 rows=30 width=33) (actual time=148.017..186.171 rows=6016 loops=1)
                                Hash Cond: (cc.subject_id = cct1.id)
                                ->  Nested Loop  (cost=212593.00..244751.00 rows=17 width=37) (actual time=148.010..184.300 rows=8371 loops=1)
                                      ->  Merge Join  (cost=212593.00..217187.00 rows=4594 width=25) (actual time=147.994..153.832 rows=15994 loops=1)
                                            Merge Cond: (t.kind_id = kt.id)
                                            ->  Sort  (cost=212586.00..212586.00 rows=32159 width=29) (actual time=147.971..150.072 rows=15995 loops=1)
                                                  Sort Key: t.kind_id
                                                  Sort Method: quicksort  Memory: 3455kB
                                                  ->  Nested Loop  (cost=0.00..212586.00 rows=32159 width=29) (actual time=0.111..141.060 rows=31607 loops=1)
                                                        ->  Nested Loop  (cost=0.00..141490.00 rows=35548 width=4) (actual time=0.104..51.438 rows=35548 loops=1)
                                                              ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=8 width=4) (actual time=0.089..23.852 rows=8 loops=1)
                                                                    Filter: (keyword = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                                                    Rows Removed by Filter: 134162
                                                              ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.008..2.894 rows=4444 loops=8)
                                                                    Index Cond: (keyword_id = k.id)
                                                        ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=35548)
                                                              Index Cond: (id = mk.movie_id)
                                                              Filter: (production_year > 1950)
                                                              Rows Removed by Filter: 0
                                            ->  Sort  (cost=7.00..7.00 rows=1 width=4) (actual time=0.018..0.018 rows=1 loops=1)
                                                  Sort Key: kt.id
                                                  Sort Method: quicksort  Memory: 25kB
                                                  ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                        Filter: ((kind)::text = 'movie'::text)
                                                        Rows Removed by Filter: 6
                                      ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..4.00 rows=2 width=12) (actual time=0.001..0.002 rows=1 loops=15994)
                                            Index Cond: (movie_id = t.id)
                                ->  Hash  (cost=4.00..4.00 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                      ->  Seq Scan on comp_cast_type cct1  (cost=0.00..4.00 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                            Filter: ((kind)::text = 'cast'::text)
                                            Rows Removed by Filter: 3
                          ->  Hash  (cost=4.00..4.00 rows=2 width=4) (actual time=0.009..0.009 rows=2 loops=1)
                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                ->  Seq Scan on comp_cast_type cct2  (cost=0.00..4.00 rows=2 width=4) (actual time=0.006..0.007 rows=2 loops=1)
                                      Filter: ((kind)::text ~~ '%complete%'::text)
                                      Rows Removed by Filter: 2
                    ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.00..72.00 rows=36 width=12) (actual time=0.005..0.081 rows=89 loops=6016)
                          Index Cond: (movie_id = t.id)
              ->  Index Scan using char_name_pkey on char_name chn  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=532809)
                    Index Cond: (id = ci.person_role_id)
                    Filter: ((name !~~ '%Sherlock%'::text) AND ((name ~~ '%Tony%Stark%'::text) OR (name ~~ '%Iron%Man%'::text)))
                    Rows Removed by Filter: 0
        ->  Index Only Scan using name_pkey on name n  (cost=0.00..2.00 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=33)
              Index Cond: (id = ci.person_id)
              Heap Fetches: 33
Planning time: 7.411 ms
Execution time: 1583.910 ms
