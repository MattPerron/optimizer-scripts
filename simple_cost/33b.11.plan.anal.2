Aggregate  (cost=32935.00..32936.00 rows=1 width=192) (actual time=11.827..11.827 rows=1 loops=1)
  ->  Nested Loop  (cost=32216.00..32935.00 rows=1 width=82) (actual time=11.627..11.820 rows=4 loops=1)
        ->  Nested Loop  (cost=32216.00..32933.00 rows=1 width=67) (actual time=11.624..11.793 rows=14 loops=1)
              ->  Nested Loop  (cost=32216.00..32918.00 rows=1 width=75) (actual time=11.622..11.775 rows=6 loops=1)
                    ->  Nested Loop  (cost=32216.00..32905.00 rows=6 width=79) (actual time=11.620..11.768 rows=6 loops=1)
                          ->  Nested Loop  (cost=32216.00..32867.00 rows=18 width=83) (actual time=11.580..11.748 rows=18 loops=1)
                                ->  Nested Loop  (cost=32216.00..32831.00 rows=18 width=68) (actual time=11.577..11.712 rows=18 loops=1)
                                      ->  Nested Loop  (cost=32216.00..32741.00 rows=6 width=76) (actual time=11.573..11.690 rows=6 loops=1)
                                            ->  Nested Loop  (cost=32216.00..32728.00 rows=6 width=80) (actual time=11.570..11.682 rows=6 loops=1)
                                                  ->  Nested Loop  (cost=32216.00..32548.00 rows=90 width=55) (actual time=11.432..11.525 rows=90 loops=1)
                                                        ->  Merge Join  (cost=32216.00..32242.00 rows=34 width=42) (actual time=11.428..11.438 rows=34 loops=1)
                                                              Merge Cond: (mi_idx2.info_type_id = it2.id)
                                                              ->  Sort  (cost=32103.00..32103.00 rows=2944 width=46) (actual time=11.021..11.168 rows=2944 loops=1)
                                                                    Sort Key: mi_idx2.info_type_id
                                                                    Sort Method: quicksort  Memory: 453kB
                                                                    ->  Nested Loop  (cost=0.00..32103.00 rows=2944 width=46) (actual time=0.023..10.275 rows=2944 loops=1)
                                                                          ->  Nested Loop  (cost=0.00..15898.00 rows=2315 width=33) (actual time=0.018..4.615 rows=2315 loops=1)
                                                                                ->  Nested Loop  (cost=0.00..11268.00 rows=2315 width=8) (actual time=0.014..0.718 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..18.00 rows=2 width=4) (actual time=0.004..0.008 rows=2 loops=1)
                                                                                            Filter: ((link)::text ~~ '%follow%'::text)
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Index Scan using link_type_id_movie_link on movie_link ml  (cost=0.00..3750.00 rows=1875 width=12) (actual time=0.008..0.214 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                                ->  Index Scan using title_pkey on title t1  (cost=0.00..2.00 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=2315)
                                                                                      Index Cond: (id = ml.movie_id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.00..6.00 rows=1 width=13) (actual time=0.002..0.002 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.0'::text)
                                                                                Rows Removed by Filter: 1
                                                              ->  Sort  (cost=113.00..113.00 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=1)
                                                                    Sort Key: it2.id
                                                                    Sort Method: quicksort  Memory: 25kB
                                                                    ->  Seq Scan on info_type it2  (cost=0.00..113.00 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.00..6.00 rows=3 width=13) (actual time=0.002..0.002 rows=3 loops=34)
                                                              Index Cond: (movie_id = t1.id)
                                                  ->  Index Scan using title_pkey on title t2  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=90)
                                                        Index Cond: (id = ml.linked_movie_id)
                                                        Filter: (production_year = 2007)
                                                        Rows Removed by Filter: 1
                                            ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6)
                                                  Index Cond: (id = t2.kind_id)
                                                  Filter: ((kind)::text = 'tv series'::text)
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.00..10.00 rows=5 width=8) (actual time=0.002..0.003 rows=3 loops=6)
                                            Index Cond: (movie_id = t2.id)
                                ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=18)
                                      Index Cond: (id = mc2.company_id)
                          ->  Index Scan using info_type_pkey on info_type it1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=18)
                                Index Cond: (id = mi_idx1.info_type_id)
                                Filter: ((info)::text = 'rating'::text)
                                Rows Removed by Filter: 1
                    ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6)
                          Index Cond: (id = t1.kind_id)
                          Filter: ((kind)::text = 'tv series'::text)
              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.00..10.00 rows=5 width=8) (actual time=0.002..0.002 rows=2 loops=6)
                    Index Cond: (movie_id = t1.id)
        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=14)
              Index Cond: (id = mc1.company_id)
              Filter: ((country_code)::text = '[nl]'::text)
              Rows Removed by Filter: 1
Planning time: 60.502 ms
Execution time: 11.906 ms
