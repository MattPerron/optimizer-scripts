Aggregate  (cost=382309.00..382310.00 rows=1 width=96) (actual time=217.991..217.991 rows=1 loops=1)
  ->  Nested Loop  (cost=211350.00..382309.00 rows=4711 width=41) (actual time=122.760..215.217 rows=8373 loops=1)
        ->  Hash Join  (cost=211350.00..364767.00 rows=8771 width=26) (actual time=122.755..198.915 rows=8771 loops=1)
              Hash Cond: (mc.company_type_id = ct.id)
              ->  Nested Loop  (cost=211342.00..358181.00 rows=8771 width=30) (actual time=122.744..197.127 rows=8771 loops=1)
                    ->  Hash Join  (cost=211342.00..349623.00 rows=778 width=42) (actual time=122.737..187.082 rows=778 loops=1)
                          Hash Cond: (mi.info_type_id = it1.id)
                          ->  Nested Loop  (cost=211228.00..348638.00 rows=879 width=46) (actual time=122.643..186.864 rows=879 loops=1)
                                ->  Hash Join  (cost=211228.00..275452.00 rows=851 width=38) (actual time=122.633..140.810 rows=851 loops=1)
                                      Hash Cond: (mi_idx.info_type_id = it2.id)
                                      ->  Nested Loop  (cost=211114.00..272754.00 rows=2607 width=42) (actual time=122.620..140.443 rows=2607 loops=1)
                                            ->  Hash Join  (cost=211114.00..264456.00 rows=922 width=29) (actual time=122.595..136.611 rows=922 loops=1)
                                                  Hash Cond: (cc.status_id = cct2.id)
                                                  ->  Hash Join  (cost=211109.00..263498.00 rows=1271 width=33) (actual time=122.589..136.359 rows=1271 loops=1)
                                                        Hash Cond: (cc.subject_id = cct1.id)
                                                        ->  Nested Loop  (cost=211104.00..262325.00 rows=1558 width=37) (actual time=122.584..136.029 rows=1558 loops=1)
                                                              ->  Merge Join  (cost=211104.00..213887.00 rows=8073 width=25) (actual time=122.556..124.732 rows=8073 loops=1)
                                                                    Merge Cond: (kt.id = t.kind_id)
                                                                    ->  Sort  (cost=7.00..7.00 rows=2 width=4) (actual time=0.007..0.007 rows=2 loops=1)
                                                                          Sort Key: kt.id
                                                                          Sort Method: quicksort  Memory: 25kB
                                                                          ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=2 width=4) (actual time=0.002..0.003 rows=2 loops=1)
                                                                                Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                                Rows Removed by Filter: 5
                                                                    ->  Sort  (cost=211097.00..211097.00 rows=9739 width=29) (actual time=122.546..123.241 rows=9739 loops=1)
                                                                          Sort Key: t.kind_id
                                                                          Sort Method: quicksort  Memory: 1168kB
                                                                          ->  Nested Loop  (cost=0.00..211097.00 rows=9739 width=29) (actual time=0.804..120.610 rows=9739 loops=1)
                                                                                ->  Nested Loop  (cost=0.00..136915.00 rows=37091 width=4) (actual time=0.799..41.564 rows=37091 loops=1)
                                                                                      ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=3 width=4) (actual time=0.791..15.995 rows=3 loops=1)
                                                                                            Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                            Rows Removed by Filter: 134167
                                                                                      ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.007..7.080 rows=12364 loops=3)
                                                                                            Index Cond: (keyword_id = k.id)
                                                                                ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=37091)
                                                                                      Index Cond: (id = mk.movie_id)
                                                                                      Filter: (production_year > 2005)
                                                                                      Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..4.00 rows=2 width=12) (actual time=0.001..0.001 rows=0 loops=8073)
                                                                    Index Cond: (movie_id = t.id)
                                                        ->  Hash  (cost=4.00..4.00 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                              ->  Seq Scan on comp_cast_type cct1  (cost=0.00..4.00 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'cast'::text)
                                                                    Rows Removed by Filter: 3
                                                  ->  Hash  (cost=4.00..4.00 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on comp_cast_type cct2  (cost=0.00..4.00 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'complete'::text)
                                                              Rows Removed by Filter: 3
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..6.00 rows=3 width=13) (actual time=0.003..0.004 rows=3 loops=922)
                                                  Index Cond: (movie_id = t.id)
                                                  Filter: (info < '8.5'::text)
                                                  Rows Removed by Filter: 0
                                      ->  Hash  (cost=113.00..113.00 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                            ->  Seq Scan on info_type it2  (cost=0.00..113.00 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                  Filter: ((info)::text = 'rating'::text)
                                                  Rows Removed by Filter: 112
                                ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=2 width=8) (actual time=0.045..0.054 rows=1 loops=851)
                                      Index Cond: (movie_id = t.id)
                                      Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                      Rows Removed by Filter: 135
                          ->  Hash  (cost=113.00..113.00 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=1)
                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                ->  Seq Scan on info_type it1  (cost=0.00..113.00 rows=1 width=4) (actual time=0.004..0.010 rows=1 loops=1)
                                      Filter: ((info)::text = 'countries'::text)
                                      Rows Removed by Filter: 112
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=1 width=12) (actual time=0.005..0.011 rows=11 loops=778)
                          Index Cond: (movie_id = t.id)
                          Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                          Rows Removed by Filter: 13
              ->  Hash  (cost=4.00..4.00 rows=4 width=4) (actual time=0.006..0.006 rows=4 loops=1)
                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                    ->  Seq Scan on company_type ct  (cost=0.00..4.00 rows=4 width=4) (actual time=0.004..0.004 rows=4 loops=1)
        ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=8771)
              Index Cond: (id = mc.company_id)
              Filter: ((country_code)::text <> '[us]'::text)
              Rows Removed by Filter: 0
Planning time: 54.422 ms
Execution time: 218.076 ms
