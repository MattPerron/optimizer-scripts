Aggregate  (cost=286616.80..286617.80 rows=1 width=96) (actual time=244.904..244.904 rows=1 loops=1)
  ->  Nested Loop  (cost=5.00..286616.80 rows=1 width=41) (actual time=1.153..241.963 rows=8373 loops=1)
        ->  Nested Loop  (cost=5.00..286614.00 rows=1 width=45) (actual time=1.150..233.616 rows=8373 loops=1)
              ->  Nested Loop  (cost=5.00..286612.00 rows=1 width=30) (actual time=1.146..215.222 rows=8771 loops=1)
                    ->  Nested Loop  (cost=5.00..286601.00 rows=1 width=42) (actual time=1.141..205.063 rows=778 loops=1)
                          ->  Nested Loop  (cost=5.00..286597.00 rows=1 width=46) (actual time=1.139..204.030 rows=879 loops=1)
                                ->  Nested Loop  (cost=5.00..286425.00 rows=2 width=38) (actual time=1.127..157.843 rows=851 loops=1)
                                      ->  Nested Loop  (cost=5.00..286411.00 rows=6 width=42) (actual time=1.125..156.528 rows=1183 loops=1)
                                            ->  Nested Loop  (cost=5.00..285055.00 rows=675 width=46) (actual time=1.120..152.432 rows=3634 loops=1)
                                                  ->  Nested Loop  (cost=5.00..273616.00 rows=1271 width=33) (actual time=1.114..146.842 rows=1271 loops=1)
                                                        ->  Hash Join  (cost=5.00..270828.00 rows=1394 width=37) (actual time=1.111..145.140 rows=1394 loops=1)
                                                              Hash Cond: (cc.subject_id = cct1.id)
                                                              ->  Nested Loop  (cost=0.00..269531.00 rows=1723 width=41) (actual time=1.102..144.728 rows=1723 loops=1)
                                                                    ->  Nested Loop  (cost=0.00..211097.00 rows=9739 width=29) (actual time=0.809..129.503 rows=9739 loops=1)
                                                                          ->  Nested Loop  (cost=0.00..136915.00 rows=37091 width=4) (actual time=0.804..43.283 rows=37091 loops=1)
                                                                                ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=3 width=4) (actual time=0.797..15.696 rows=3 loops=1)
                                                                                      Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                      Rows Removed by Filter: 134167
                                                                                ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.006..7.731 rows=12364 loops=3)
                                                                                      Index Cond: (keyword_id = k.id)
                                                                          ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=37091)
                                                                                Index Cond: (id = mk.movie_id)
                                                                                Filter: (production_year > 2005)
                                                                                Rows Removed by Filter: 1
                                                                    ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..4.00 rows=2 width=12) (actual time=0.001..0.001 rows=0 loops=9739)
                                                                          Index Cond: (movie_id = t.id)
                                                              ->  Hash  (cost=4.00..4.00 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on comp_cast_type cct1  (cost=0.00..4.00 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                                          Filter: ((kind)::text = 'cast'::text)
                                                                          Rows Removed by Filter: 3
                                                        ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1394)
                                                              Index Cond: (id = t.kind_id)
                                                              Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                              Rows Removed by Filter: 0
                                                  ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..6.00 rows=3 width=13) (actual time=0.003..0.004 rows=3 loops=1271)
                                                        Index Cond: (movie_id = t.id)
                                                        Filter: (info < '8.5'::text)
                                                        Rows Removed by Filter: 0
                                            ->  Index Scan using info_type_pkey on info_type it2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=3634)
                                                  Index Cond: (id = mi_idx.info_type_id)
                                                  Filter: ((info)::text = 'rating'::text)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1183)
                                            Index Cond: (id = cc.status_id)
                                            Filter: ((kind)::text = 'complete'::text)
                                            Rows Removed by Filter: 0
                                ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=2 width=8) (actual time=0.046..0.054 rows=1 loops=851)
                                      Index Cond: (movie_id = t.id)
                                      Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                      Rows Removed by Filter: 135
                          ->  Index Scan using info_type_pkey on info_type it1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=879)
                                Index Cond: (id = mi.info_type_id)
                                Filter: ((info)::text = 'countries'::text)
                                Rows Removed by Filter: 0
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=1 width=12) (actual time=0.005..0.012 rows=11 loops=778)
                          Index Cond: (movie_id = t.id)
                          Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                          Rows Removed by Filter: 13
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=8771)
                    Index Cond: (id = mc.company_id)
                    Filter: ((country_code)::text <> '[us]'::text)
                    Rows Removed by Filter: 0
        ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=8373)
              Index Cond: (id = mc.company_type_id)
              Heap Fetches: 8373
Planning time: 55.122 ms
Execution time: 244.984 ms
