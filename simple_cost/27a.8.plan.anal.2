Aggregate  (cost=55050.00..55051.00 rows=1 width=96) (actual time=13.256..13.257 rows=1 loops=1)
  ->  Nested Loop  (cost=11.00..55050.00 rows=5 width=48) (actual time=2.590..13.119 rows=477 loops=1)
        ->  Nested Loop  (cost=11.00..54030.00 rows=12 width=68) (actual time=2.575..11.691 rows=172 loops=1)
              ->  Nested Loop  (cost=11.00..53918.00 rows=56 width=53) (actual time=0.433..10.977 rows=398 loops=1)
                    ->  Nested Loop  (cost=11.00..53410.00 rows=226 width=57) (actual time=0.431..10.585 rows=427 loops=1)
                          ->  Nested Loop  (cost=11.00..52409.00 rows=77 width=45) (actual time=0.427..10.290 rows=77 loops=1)
                                ->  Nested Loop  (cost=11.00..48385.00 rows=2011 width=49) (actual time=0.415..7.146 rows=2011 loops=1)
                                      ->  Hash Join  (cost=11.00..24220.00 rows=179 width=41) (actual time=0.410..6.298 rows=179 loops=1)
                                            Hash Cond: (cc.subject_id = cct1.id)
                                            ->  Hash Join  (cost=5.00..24080.00 rows=179 width=45) (actual time=0.401..6.247 rows=179 loops=1)
                                                  Hash Cond: (cc.status_id = cct2.id)
                                                  ->  Nested Loop  (cost=0.00..23890.00 rows=247 width=49) (actual time=0.396..6.192 rows=247 loops=1)
                                                        ->  Nested Loop  (cost=0.00..15898.00 rows=1332 width=37) (actual time=0.046..4.469 rows=1332 loops=1)
                                                              ->  Nested Loop  (cost=0.00..11268.00 rows=2315 width=16) (actual time=0.011..0.695 rows=2315 loops=1)
                                                                    ->  Seq Scan on link_type lt  (cost=0.00..18.00 rows=2 width=16) (actual time=0.002..0.006 rows=2 loops=1)
                                                                          Filter: ((link)::text ~~ '%follow%'::text)
                                                                          Rows Removed by Filter: 16
                                                                    ->  Index Scan using link_type_id_movie_link on movie_link ml  (cost=0.00..3750.00 rows=1875 width=8) (actual time=0.007..0.211 rows=1158 loops=2)
                                                                          Index Cond: (link_type_id = lt.id)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=2315)
                                                                    Index Cond: (id = ml.movie_id)
                                                                    Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                                                    Rows Removed by Filter: 0
                                                        ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..4.00 rows=2 width=12) (actual time=0.001..0.001 rows=0 loops=1332)
                                                              Index Cond: (movie_id = ml.movie_id)
                                                  ->  Hash  (cost=4.00..4.00 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on comp_cast_type cct2  (cost=0.00..4.00 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'complete'::text)
                                                              Rows Removed by Filter: 3
                                            ->  Hash  (cost=4.00..4.00 rows=2 width=4) (actual time=0.007..0.007 rows=2 loops=1)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                  ->  Seq Scan on comp_cast_type cct1  (cost=0.00..4.00 rows=2 width=4) (actual time=0.004..0.005 rows=2 loops=1)
                                                        Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                                        Rows Removed by Filter: 2
                                      ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.00..90.00 rows=45 width=8) (actual time=0.002..0.003 rows=11 loops=179)
                                            Index Cond: (movie_id = ml.movie_id)
                                ->  Index Scan using keyword_pkey on keyword k  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=2011)
                                      Index Cond: (id = mk.keyword_id)
                                      Filter: (keyword = 'sequel'::text)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=3 width=12) (actual time=0.002..0.003 rows=6 loops=77)
                                Index Cond: (movie_id = ml.movie_id)
                                Filter: (note IS NULL)
                                Rows Removed by Filter: 1
                    ->  Index Scan using company_type_pkey on company_type ct  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=427)
                          Index Cond: (id = mc.company_type_id)
                          Filter: ((kind)::text = 'production companies'::text)
                          Rows Removed by Filter: 0
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=398)
                    Index Cond: (id = mc.company_id)
                    Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                    Rows Removed by Filter: 1
        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=1 width=4) (actual time=0.006..0.008 rows=3 loops=172)
              Index Cond: (movie_id = ml.movie_id)
              Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
              Rows Removed by Filter: 17
Planning time: 44.209 ms
Execution time: 13.321 ms
