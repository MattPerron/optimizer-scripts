Aggregate  (cost=3922626.00..3922627.00 rows=1 width=64) (actual time=5855.181..5855.181 rows=1 loops=1)
  ->  Nested Loop  (cost=3818480.00..3922626.00 rows=1 width=32) (actual time=2040.548..5855.012 rows=184 loops=1)
        ->  Nested Loop  (cost=3818480.00..3922624.00 rows=1 width=36) (actual time=2040.538..5854.414 rows=189 loops=1)
              ->  Nested Loop  (cost=3818480.00..3922618.00 rows=1 width=44) (actual time=2040.526..5853.586 rows=170 loops=1)
                    ->  Hash Join  (cost=3818480.00..3922528.00 rows=45 width=25) (actual time=1583.837..5755.002 rows=40272 loops=1)
                          Hash Cond: (ci.role_id = rt.id)
                          ->  Nested Loop  (cost=3818467.00..3922025.00 rows=535 width=29) (actual time=1583.823..5739.326 rows=130077 loops=1)
                                ->  Nested Loop  (cost=3818467.00..3894358.00 rows=379 width=29) (actual time=1583.540..2180.742 rows=116277 loops=1)
                                      ->  Merge Join  (cost=3818467.00..3891024.00 rows=1667 width=8) (actual time=1583.500..1666.502 rows=188295 loops=1)
                                            Merge Cond: (mc.company_id = cn.id)
                                            ->  Sort  (cost=3583470.00..3583470.00 rows=200967 width=12) (actual time=1533.210..1560.469 rows=200967 loops=1)
                                                  Sort Key: mc.company_id
                                                  Sort Method: quicksort  Memory: 15565kB
                                                  ->  Merge Join  (cost=3039744.00..3583470.00 rows=200967 width=12) (actual time=1358.733..1500.576 rows=200967 loops=1)
                                                        Merge Cond: (mi.movie_id = mc.movie_id)
                                                        ->  Sort  (cost=430615.00..430615.00 rows=451039 width=4) (actual time=836.739..857.596 rows=451026 loops=1)
                                                              Sort Key: mi.movie_id
                                                              Sort Method: quicksort  Memory: 33431kB
                                                              ->  Nested Loop  (cost=0.00..430615.00 rows=451039 width=4) (actual time=0.020..749.471 rows=451039 loops=1)
                                                                    ->  Seq Scan on info_type it  (cost=0.00..113.00 rows=1 width=4) (actual time=0.005..0.013 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'release dates'::text)
                                                                          Rows Removed by Filter: 112
                                                                    ->  Index Scan using info_type_id_movie_info on movie_info mi  (cost=0.00..423878.00 rows=6624 width=8) (actual time=0.015..709.125 rows=451039 loops=1)
                                                                          Index Cond: (info_type_id = it.id)
                                                                          Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%200%'::text) OR (info ~~ 'USA:%200%'::text)))
                                                                          Rows Removed by Filter: 2585680
                                                        ->  Sort  (cost=2609129.00..2609129.00 rows=590994 width=8) (actual time=521.985..552.445 rows=654940 loops=1)
                                                              Sort Key: mc.movie_id
                                                              Sort Method: quicksort  Memory: 52279kB
                                                              ->  Seq Scan on movie_companies mc  (cost=0.00..2609129.00 rows=590994 width=8) (actual time=0.014..396.670 rows=590994 loops=1)
                                                                    Filter: ((note IS NOT NULL) AND ((note ~~ '%(USA)%'::text) OR (note ~~ '%(worldwide)%'::text)))
                                                                    Rows Removed by Filter: 2018135
                                            ->  Sort  (cost=234997.00..234997.00 rows=84843 width=4) (actual time=50.286..61.073 rows=84447 loops=1)
                                                  Sort Key: cn.id
                                                  Sort Method: quicksort  Memory: 7050kB
                                                  ->  Seq Scan on company_name cn  (cost=0.00..234997.00 rows=84843 width=4) (actual time=0.013..30.132 rows=84843 loops=1)
                                                        Filter: ((country_code)::text = '[us]'::text)
                                                        Rows Removed by Filter: 150154
                                      ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=188295)
                                            Index Cond: (id = mi.movie_id)
                                            Filter: ((production_year >= 2005) AND (production_year <= 2009))
                                            Rows Removed by Filter: 0
                                ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.00..72.00 rows=1 width=16) (actual time=0.025..0.030 rows=1 loops=116277)
                                      Index Cond: (movie_id = t.id)
                                      Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                      Rows Removed by Filter: 46
                          ->  Hash  (cost=12.00..12.00 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                ->  Seq Scan on role_type rt  (cost=0.00..12.00 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                      Filter: ((role)::text = 'actress'::text)
                                      Rows Removed by Filter: 11
                    ->  Index Scan using name_pkey on name n  (cost=0.00..2.00 rows=1 width=19) (actual time=0.002..0.002 rows=0 loops=40272)
                          Index Cond: (id = ci.person_id)
                          Filter: ((name ~~ '%Ang%'::text) AND ((gender)::text = 'f'::text))
                          Rows Removed by Filter: 1
              ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.00..4.00 rows=2 width=4) (actual time=0.004..0.004 rows=1 loops=170)
                    Index Cond: (person_id = n.id)
                    Heap Fetches: 189
        ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.00..2.00 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=189)
              Index Cond: (id = ci.person_role_id)
              Heap Fetches: 184
Planning time: 11.484 ms
Execution time: 5856.018 ms
