Aggregate  (cost=625067.80..625068.80 rows=1 width=96) (actual time=844.970..844.970 rows=1 loops=1)
  ->  Nested Loop  (cost=511259.00..625067.80 rows=1 width=41) (actual time=231.574..842.071 rows=8373 loops=1)
        ->  Nested Loop  (cost=511259.00..625065.00 rows=1 width=45) (actual time=231.570..833.791 rows=8373 loops=1)
              ->  Nested Loop  (cost=511259.00..625041.00 rows=11 width=49) (actual time=231.567..824.012 rows=9489 loops=1)
                    ->  Hash Join  (cost=511259.00..621687.00 rows=39 width=65) (actual time=231.500..283.117 rows=8156 loops=1)
                          Hash Cond: (mi_idx.info_type_id = it2.id)
                          ->  Nested Loop  (cost=511145.00..617209.00 rows=4403 width=69) (actual time=231.481..279.678 rows=24274 loops=1)
                                ->  Hash Join  (cost=511145.00..542635.00 rows=8286 width=56) (actual time=231.473..256.222 rows=8286 loops=1)
                                      Hash Cond: (cc.subject_id = cct1.id)
                                      ->  Nested Loop  (cost=511140.00..535152.00 rows=9971 width=60) (actual time=231.467..254.145 rows=9971 loops=1)
                                            ->  Merge Join  (cost=511140.00..514272.00 rows=10440 width=45) (actual time=231.461..234.373 rows=10440 loops=1)
                                                  Merge Cond: (kt.id = t.kind_id)
                                                  ->  Sort  (cost=7.00..7.00 rows=2 width=4) (actual time=0.007..0.007 rows=2 loops=1)
                                                        Sort Key: kt.id
                                                        Sort Method: quicksort  Memory: 25kB
                                                        ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=2 width=4) (actual time=0.002..0.003 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                              Rows Removed by Filter: 5
                                                  ->  Sort  (cost=511133.00..511133.00 rows=10963 width=49) (actual time=231.453..232.069 rows=10963 loops=1)
                                                        Sort Key: t.kind_id
                                                        Sort Method: quicksort  Memory: 1457kB
                                                        ->  Nested Loop  (cost=322251.00..511133.00 rows=10963 width=49) (actual time=108.607..229.001 rows=10963 loops=1)
                                                              ->  Nested Loop  (cost=322251.00..443153.00 rows=33990 width=24) (actual time=108.462..176.475 rows=33990 loops=1)
                                                                    ->  Merge Join  (cost=322251.00..327257.00 rows=10536 width=12) (actual time=108.390..110.611 rows=10536 loops=1)
                                                                          Merge Cond: (cct2.id = cc.status_id)
                                                                          ->  Sort  (cost=4.00..4.00 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                                                Sort Key: cct2.id
                                                                                Sort Method: quicksort  Memory: 25kB
                                                                                ->  Seq Scan on comp_cast_type cct2  (cost=0.00..4.00 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                                                      Filter: ((kind)::text = 'complete'::text)
                                                                                      Rows Removed by Filter: 3
                                                                          ->  Sort  (cost=322247.00..322247.00 rows=20024 width=16) (actual time=108.386..108.994 rows=10537 loops=1)
                                                                                Sort Key: cc.status_id
                                                                                Sort Method: quicksort  Memory: 1707kB
                                                                                ->  Merge Join  (cost=272001.00..322247.00 rows=20024 width=16) (actual time=84.490..106.147 rows=20024 loops=1)
                                                                                      Merge Cond: (mk.movie_id = cc.movie_id)
                                                                                      ->  Sort  (cost=136915.00..136915.00 rows=37091 width=4) (actual time=46.146..47.818 rows=37091 loops=1)
                                                                                            Sort Key: mk.movie_id
                                                                                            Sort Method: quicksort  Memory: 3275kB
                                                                                            ->  Nested Loop  (cost=0.00..136915.00 rows=37091 width=4) (actual time=0.811..39.338 rows=37091 loops=1)
                                                                                                  ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=3 width=4) (actual time=0.803..15.271 rows=3 loops=1)
                                                                                                        Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                                        Rows Removed by Filter: 134167
                                                                                                  ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.007..6.642 rows=12364 loops=3)
                                                                                                        Index Cond: (keyword_id = k.id)
                                                                                      ->  Sort  (cost=135086.00..135086.00 rows=135086 width=12) (actual time=38.289..45.055 rows=138007 loops=1)
                                                                                            Sort Key: cc.movie_id
                                                                                            Sort Method: quicksort  Memory: 12477kB
                                                                                            ->  Seq Scan on complete_cast cc  (cost=0.00..135086.00 rows=135086 width=12) (actual time=0.006..13.151 rows=135086 loops=1)
                                                                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=1 width=12) (actual time=0.003..0.006 rows=3 loops=10536)
                                                                          Index Cond: (movie_id = mk.movie_id)
                                                                          Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                                                          Rows Removed by Filter: 8
                                                              ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.001..0.001 rows=0 loops=33990)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2005)
                                                                    Rows Removed by Filter: 1
                                            ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=10440)
                                                  Index Cond: (id = mc.company_id)
                                                  Filter: ((country_code)::text <> '[us]'::text)
                                                  Rows Removed by Filter: 0
                                      ->  Hash  (cost=4.00..4.00 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                            ->  Seq Scan on comp_cast_type cct1  (cost=0.00..4.00 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'cast'::text)
                                                  Rows Removed by Filter: 3
                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..6.00 rows=3 width=13) (actual time=0.002..0.002 rows=3 loops=8286)
                                      Index Cond: (movie_id = t.id)
                                      Filter: (info < '8.5'::text)
                                      Rows Removed by Filter: 0
                          ->  Hash  (cost=113.00..113.00 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=1)
                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                ->  Seq Scan on info_type it2  (cost=0.00..113.00 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                      Filter: ((info)::text = 'rating'::text)
                                      Rows Removed by Filter: 112
                    ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=2 width=8) (actual time=0.055..0.066 rows=1 loops=8156)
                          Index Cond: (movie_id = t.id)
                          Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                          Rows Removed by Filter: 206
              ->  Index Scan using info_type_pkey on info_type it1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=9489)
                    Index Cond: (id = mi.info_type_id)
                    Filter: ((info)::text = 'countries'::text)
                    Rows Removed by Filter: 0
        ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=8373)
              Index Cond: (id = mc.company_type_id)
              Heap Fetches: 8373
Planning time: 54.538 ms
Execution time: 845.058 ms
