Aggregate  (cost=285761.00..285762.00 rows=1 width=96) (actual time=1575.042..1575.042 rows=1 loops=1)
  ->  Nested Loop  (cost=211124.00..285761.00 rows=1 width=41) (actual time=118.408..1573.273 rows=4803 loops=1)
        ->  Nested Loop  (cost=211124.00..285759.00 rows=1 width=26) (actual time=118.403..1562.721 rows=4955 loops=1)
              ->  Nested Loop  (cost=211124.00..285755.00 rows=1 width=30) (actual time=118.306..1547.653 rows=15789 loops=1)
                    ->  Nested Loop  (cost=211124.00..285751.00 rows=1 width=34) (actual time=118.303..1530.516 rows=17598 loops=1)
                          ->  Nested Loop  (cost=211124.00..285407.00 rows=4 width=50) (actual time=118.246..315.119 rows=14590 loops=1)
                                ->  Hash Join  (cost=211124.00..285344.00 rows=7 width=37) (actual time=118.239..299.874 rows=4858 loops=1)
                                      Hash Cond: (cc.subject_id = cct1.id)
                                      ->  Hash Join  (cost=211119.00..285318.00 rows=28 width=41) (actual time=117.295..297.176 rows=22691 loops=1)
                                            Hash Cond: (cc.status_id = cct2.id)
                                            ->  Nested Loop  (cost=211112.00..285283.00 rows=37 width=45) (actual time=117.219..290.949 rows=39147 loops=1)
                                                  ->  Hash Join  (cost=211112.00..281113.00 rows=695 width=33) (actual time=116.892..214.031 rows=52456 loops=1)
                                                        Hash Cond: (mc.company_type_id = ct.id)
                                                        ->  Nested Loop  (cost=211104.00..280584.00 rows=695 width=37) (actual time=116.886..204.167 rows=52456 loops=1)
                                                              ->  Merge Join  (cost=211104.00..216894.00 rows=5790 width=25) (actual time=116.878..120.978 rows=11686 loops=1)
                                                                    Merge Cond: (t.kind_id = kt.id)
                                                                    ->  Sort  (cost=211097.00..211097.00 rows=20266 width=29) (actual time=116.865..118.193 rows=14771 loops=1)
                                                                          Sort Key: t.kind_id
                                                                          Sort Method: quicksort  Memory: 1572kB
                                                                          ->  Nested Loop  (cost=0.00..211097.00 rows=20266 width=29) (actual time=0.801..113.741 rows=14771 loops=1)
                                                                                ->  Nested Loop  (cost=0.00..136915.00 rows=37091 width=4) (actual time=0.797..39.676 rows=37091 loops=1)
                                                                                      ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=3 width=4) (actual time=0.790..15.705 rows=3 loops=1)
                                                                                            Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                            Rows Removed by Filter: 134167
                                                                                      ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.006..6.485 rows=12364 loops=3)
                                                                                            Index Cond: (keyword_id = k.id)
                                                                                ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=37091)
                                                                                      Index Cond: (id = mk.movie_id)
                                                                                      Filter: (production_year > 2000)
                                                                                      Rows Removed by Filter: 1
                                                                    ->  Sort  (cost=7.00..7.00 rows=2 width=4) (actual time=0.010..0.010 rows=2 loops=1)
                                                                          Sort Key: kt.id
                                                                          Sort Method: quicksort  Memory: 25kB
                                                                          ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=2 width=4) (actual time=0.004..0.005 rows=2 loops=1)
                                                                                Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                                Rows Removed by Filter: 5
                                                              ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=1 width=12) (actual time=0.004..0.006 rows=4 loops=11686)
                                                                    Index Cond: (movie_id = t.id)
                                                                    Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                                                    Rows Removed by Filter: 6
                                                        ->  Hash  (cost=4.00..4.00 rows=4 width=4) (actual time=0.003..0.003 rows=4 loops=1)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                              ->  Seq Scan on company_type ct  (cost=0.00..4.00 rows=4 width=4) (actual time=0.002..0.002 rows=4 loops=1)
                                                  ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..4.00 rows=2 width=12) (actual time=0.001..0.001 rows=1 loops=52456)
                                                        Index Cond: (movie_id = t.id)
                                            ->  Hash  (cost=4.00..4.00 rows=3 width=4) (actual time=0.003..0.003 rows=3 loops=1)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                  ->  Seq Scan on comp_cast_type cct2  (cost=0.00..4.00 rows=3 width=4) (actual time=0.001..0.002 rows=3 loops=1)
                                                        Filter: ((kind)::text <> 'complete+verified'::text)
                                                        Rows Removed by Filter: 1
                                      ->  Hash  (cost=4.00..4.00 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                            ->  Seq Scan on comp_cast_type cct1  (cost=0.00..4.00 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'crew'::text)
                                                  Rows Removed by Filter: 3
                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..6.00 rows=3 width=13) (actual time=0.002..0.003 rows=3 loops=4858)
                                      Index Cond: (movie_id = t.id)
                                      Filter: (info < '8.5'::text)
                                      Rows Removed by Filter: 0
                          ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=2 width=8) (actual time=0.072..0.083 rows=1 loops=14590)
                                Index Cond: (movie_id = t.id)
                                Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                Rows Removed by Filter: 267
                    ->  Index Scan using info_type_pkey on info_type it1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=17598)
                          Index Cond: (id = mi.info_type_id)
                          Filter: ((info)::text = 'countries'::text)
                          Rows Removed by Filter: 0
              ->  Index Scan using info_type_pkey on info_type it2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=15789)
                    Index Cond: (id = mi_idx.info_type_id)
                    Filter: ((info)::text = 'rating'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=4955)
              Index Cond: (id = mc.company_id)
              Filter: ((country_code)::text <> '[us]'::text)
              Rows Removed by Filter: 0
Planning time: 54.742 ms
Execution time: 1575.123 ms
