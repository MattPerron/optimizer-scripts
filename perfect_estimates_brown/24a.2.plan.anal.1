Aggregate  (cost=69672.18..69672.19 rows=1 width=96) (actual time=621.547..621.547 rows=1 loops=1)
  ->  Nested Loop  (cost=10.33..69672.18 rows=1 width=48) (actual time=57.870..621.330 rows=275 loops=1)
        Join Filter: (n.id = an.person_id)
        ->  Nested Loop  (cost=9.91..69670.07 rows=1 width=56) (actual time=24.431..620.715 rows=141 loops=1)
              Join Filter: (rt.id = ci.role_id)
              ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                    Filter: ((role)::text = 'actress'::text)
                    Rows Removed by Filter: 11
              ->  Nested Loop  (cost=9.91..69668.91 rows=1 width=60) (actual time=24.424..620.654 rows=141 loops=1)
                    ->  Nested Loop  (cost=9.48..69667.17 rows=1 width=48) (actual time=24.416..620.098 rows=143 loops=1)
                          ->  Nested Loop  (cost=9.05..69665.31 rows=1 width=29) (actual time=1.224..576.146 rows=13758 loops=1)
                                Join Filter: (t.id = ci.movie_id)
                                ->  Nested Loop  (cost=8.48..69625.50 rows=1 width=33) (actual time=0.950..157.793 rows=3406 loops=1)
                                      ->  Nested Loop  (cost=8.06..69622.55 rows=2 width=37) (actual time=0.942..115.693 rows=13560 loops=1)
                                            Join Filter: (t.id = mc.movie_id)
                                            ->  Nested Loop  (cost=7.63..69615.63 rows=2 width=29) (actual time=0.934..103.387 rows=738 loops=1)
                                                  Join Filter: (it.id = mi.info_type_id)
                                                  ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.018 rows=1 loops=1)
                                                        Filter: ((info)::text = 'release dates'::text)
                                                        Rows Removed by Filter: 112
                                                  ->  Nested Loop  (cost=7.63..69610.98 rows=179 width=33) (actual time=0.928..103.126 rows=738 loops=1)
                                                        Join Filter: (t.id = mi.movie_id)
                                                        ->  Nested Loop  (cost=7.20..21637.52 rows=1502 width=25) (actual time=0.917..81.212 rows=495 loops=1)
                                                              ->  Nested Loop  (cost=6.77..6093.36 rows=9696 width=4) (actual time=0.859..42.763 rows=9696 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.015..26.833 rows=3 loops=1)
                                                                          Filter: (keyword = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                          Rows Removed by Filter: 134167
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.77..1096.83 rows=301 width=8) (actual time=0.838..4.723 rows=3232 loops=3)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=7446
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.69 rows=301 width=0) (actual time=0.449..0.449 rows=3232 loops=3)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=9696)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2010)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..31.93 rows=1 width=8) (actual time=0.015..0.043 rows=1 loops=495)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                              Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%201%'::text) OR (info ~~ 'USA:%201%'::text)))
                                                              Rows Removed by Filter: 70
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.40 rows=5 width=8) (actual time=0.004..0.011 rows=18 loops=738)
                                                  Index Cond: (movie_id = mk.movie_id)
                                      ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=13560)
                                            Index Cond: (id = mc.company_id)
                                            Filter: ((country_code)::text = '[us]'::text)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.80 rows=1 width=16) (actual time=0.080..0.121 rows=4 loops=3406)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                      Rows Removed by Filter: 169
                          ->  Index Scan using name_pkey on name n  (cost=0.43..1.85 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=13758)
                                Index Cond: (id = ci.person_id)
                                Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                Rows Removed by Filter: 1
                    ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.74 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=143)
                          Index Cond: (id = ci.person_role_id)
        ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.003..0.003 rows=2 loops=141)
              Index Cond: (person_id = ci.person_id)
              Heap Fetches: 275
Planning time: 73.608 ms
Execution time: 621.661 ms
