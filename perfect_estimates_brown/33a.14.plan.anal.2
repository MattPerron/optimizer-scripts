Aggregate  (cost=5697.86..5697.87 rows=1 width=192) (actual time=11.351..11.352 rows=1 loops=1)
  ->  Nested Loop  (cost=42.51..5697.74 rows=8 width=84) (actual time=0.883..11.337 rows=8 loops=1)
        Join Filter: (it1.id = mi_idx1.info_type_id)
        Rows Removed by Join Filter: 16
        ->  Nested Loop  (cost=42.08..5693.45 rows=8 width=94) (actual time=0.878..11.306 rows=8 loops=1)
              ->  Nested Loop  (cost=41.66..5680.52 rows=29 width=79) (actual time=0.871..11.220 rows=29 loops=1)
                    ->  Nested Loop  (cost=41.23..5673.82 rows=11 width=71) (actual time=0.867..11.169 rows=11 loops=1)
                          ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..14.12 rows=1 width=4) (actual time=0.025..0.027 rows=1 loops=1)
                                Filter: ((info)::text = 'rating'::text)
                                Rows Removed by Filter: 112
                          ->  Nested Loop  (cost=41.09..5659.59 rows=11 width=67) (actual time=0.841..11.137 rows=11 loops=1)
                                ->  Nested Loop  (cost=40.67..5654.72 rows=11 width=52) (actual time=0.836..11.100 rows=11 loops=1)
                                      Join Filter: ((ml.linked_movie_id = t2.id) AND (kt2.id = t2.kind_id))
                                      ->  Nested Loop  (cost=40.24..5623.60 rows=58 width=51) (actual time=0.832..10.918 rows=58 loops=1)
                                            ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..12.26 rows=1 width=4) (actual time=0.002..0.004 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'tv series'::text)
                                                  Rows Removed by Filter: 6
                                            ->  Nested Loop  (cost=40.11..5610.76 rows=58 width=47) (actual time=0.829..10.897 rows=58 loops=1)
                                                  Join Filter: (t1.kind_id = kt1.id)
                                                  Rows Removed by Join Filter: 10
                                                  ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                        Filter: ((kind)::text = 'tv series'::text)
                                                        Rows Removed by Filter: 6
                                                  ->  Nested Loop  (cost=40.11..5608.83 rows=68 width=51) (actual time=0.826..10.875 rows=68 loops=1)
                                                        ->  Nested Loop  (cost=39.68..5304.86 rows=68 width=26) (actual time=0.821..10.678 rows=68 loops=1)
                                                              Join Filter: (ml.linked_movie_id = mc2.movie_id)
                                                              ->  Nested Loop  (cost=39.25..5279.78 rows=34 width=18) (actual time=0.816..10.525 rows=34 loops=1)
                                                                    Join Filter: (mi_idx2.info_type_id = it2.id)
                                                                    Rows Removed by Join Filter: 2910
                                                                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                                    ->  Nested Loop  (cost=39.25..5240.56 rows=2944 width=22) (actual time=0.086..10.180 rows=2944 loops=1)
                                                                          ->  Nested Loop  (cost=38.82..470.30 rows=2315 width=8) (actual time=0.078..1.171 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.003..0.008 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.072..0.365 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.057..0.057 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.002..0.003 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.0'::text)
                                                                                Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.003..0.003 rows=2 loops=34)
                                                                    Index Cond: (movie_id = mi_idx2.movie_id)
                                                        ->  Index Scan using title_pkey on title t1  (cost=0.43..4.47 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=68)
                                                              Index Cond: (id = ml.movie_id)
                                      ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=58)
                                            Index Cond: (id = mc2.movie_id)
                                            Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                            Rows Removed by Filter: 1
                                ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=11)
                                      Index Cond: (id = mc2.company_id)
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.003..0.003 rows=3 loops=11)
                          Index Cond: (movie_id = t1.id)
              ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=29)
                    Index Cond: (id = mc1.company_id)
                    Filter: ((country_code)::text = '[us]'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..0.50 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=8)
              Index Cond: (movie_id = t1.id)
Planning time: 89.351 ms
Execution time: 11.468 ms
