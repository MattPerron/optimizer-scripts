Aggregate  (cost=3108.97..3108.98 rows=1 width=192) (actual time=144.612..144.612 rows=1 loops=1)
  ->  Nested Loop  (cost=604.51..3108.96 rows=1 width=84) (actual time=19.948..144.444 rows=114 loops=1)
        ->  Nested Loop  (cost=604.09..3108.51 rows=1 width=69) (actual time=19.945..144.118 rows=114 loops=1)
              ->  Nested Loop  (cost=603.66..3107.85 rows=1 width=77) (actual time=19.940..143.902 rows=46 loops=1)
                    ->  Nested Loop  (cost=603.52..3107.66 rows=1 width=81) (actual time=2.487..136.954 rows=4086 loops=1)
                          ->  Hash Join  (cost=603.39..3106.90 rows=5 width=85) (actual time=2.483..129.514 rows=4086 loops=1)
                                Hash Cond: (t2.kind_id = kt2.id)
                                ->  Nested Loop  (cost=602.27..3105.58 rows=19 width=89) (actual time=1.577..127.366 rows=4939 loops=1)
                                      Join Filter: (ml.linked_movie_id = t2.id)
                                      ->  Nested Loop  (cost=601.84..3071.75 rows=47 width=64) (actual time=1.571..99.432 rows=9968 loops=1)
                                            ->  Nested Loop  (cost=601.42..3007.56 rows=31 width=50) (actual time=1.566..68.632 rows=7279 loops=1)
                                                  ->  Nested Loop  (cost=601.00..2982.15 rows=57 width=35) (actual time=1.561..41.498 rows=9674 loops=1)
                                                        ->  Nested Loop  (cost=600.57..2948.68 rows=55 width=43) (actual time=1.556..30.899 rows=2064 loops=1)
                                                              Join Filter: (ml.movie_id = t1.id)
                                                              ->  Nested Loop  (cost=600.14..2916.20 rows=55 width=18) (actual time=1.549..24.435 rows=2064 loops=1)
                                                                    Join Filter: (it1.id = mi_idx1.info_type_id)
                                                                    Rows Removed by Join Filter: 4128
                                                                    ->  Merge Join  (cost=600.14..2820.91 rows=6192 width=22) (actual time=1.526..21.788 rows=6192 loops=1)
                                                                          Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43810.54 rows=1380035 width=14) (actual time=0.008..11.146 rows=63901 loops=1)
                                                                          ->  Sort  (cost=599.67..605.46 rows=2315 width=8) (actual time=1.487..2.221 rows=6443 loops=1)
                                                                                Sort Key: ml.movie_id
                                                                                Sort Method: quicksort  Memory: 205kB
                                                                                ->  Nested Loop  (cost=38.82..470.30 rows=2315 width=8) (actual time=0.080..1.003 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.003..0.008 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.073..0.320 rows=1158 loops=2)
                                                                                            Recheck Cond: (link_type_id = lt.id)
                                                                                            Heap Blocks: exact=191
                                                                                            ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.059..0.059 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                    ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6192)
                                                                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                              ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=2064)
                                                                    Index Cond: (id = mi_idx1.movie_id)
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.004 rows=5 loops=2064)
                                                              Index Cond: (movie_id = t1.id)
                                                  ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=9674)
                                                        Index Cond: (id = mc1.company_id)
                                                        Filter: ((country_code)::text <> '[us]'::text)
                                                        Rows Removed by Filter: 0
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=2 width=14) (actual time=0.002..0.004 rows=1 loops=7279)
                                                  Index Cond: (movie_id = ml.linked_movie_id)
                                                  Filter: (info < '3.5'::text)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using title_pkey on title t2  (cost=0.43..0.71 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=9968)
                                            Index Cond: (id = mi_idx2.movie_id)
                                            Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                            Rows Removed by Filter: 1
                                ->  Hash  (cost=1.09..1.09 rows=2 width=4) (actual time=0.010..0.010 rows=2 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                      ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.007..0.008 rows=2 loops=1)
                                            Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                            Rows Removed by Filter: 5
                          ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=4086)
                                Index Cond: (id = t1.kind_id)
                                Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                    ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=4086)
                          Index Cond: (id = mi_idx2.info_type_id)
                          Filter: ((info)::text = 'rating'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.003..0.004 rows=2 loops=46)
                    Index Cond: (movie_id = t2.id)
        ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=114)
              Index Cond: (id = mc2.company_id)
Planning time: 87.453 ms
Execution time: 144.745 ms
