Aggregate  (cost=40960.62..40960.63 rows=1 width=96) (actual time=107.937..107.938 rows=1 loops=1)
  ->  Nested Loop  (cost=11.18..40960.61 rows=1 width=48) (actual time=17.781..100.854 rows=16308 loops=1)
        Join Filter: (it3.id = pi.info_type_id)
        Rows Removed by Join Filter: 51519
        ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.018 rows=1 loops=1)
              Filter: ((info)::text = 'trivia'::text)
              Rows Removed by Filter: 112
        ->  Nested Loop  (cost=11.18..40958.19 rows=1 width=52) (actual time=17.723..94.378 rows=67827 loops=1)
              Join Filter: (n.id = pi.person_id)
              ->  Nested Loop  (cost=10.75..40938.66 rows=1 width=60) (actual time=17.711..64.915 rows=189 loops=1)
                    ->  Nested Loop  (cost=10.33..40936.63 rows=1 width=64) (actual time=17.687..62.476 rows=858 loops=1)
                          Join Filter: (t.id = mc.movie_id)
                          ->  Nested Loop  (cost=9.90..40931.77 rows=1 width=80) (actual time=17.680..61.919 rows=33 loops=1)
                                Join Filter: (mi.movie_id = t.id)
                                ->  Nested Loop  (cost=9.47..40925.32 rows=3 width=59) (actual time=17.669..61.778 rows=34 loops=1)
                                      Join Filter: (cct2.id = cc.status_id)
                                      Rows Removed by Join Filter: 60
                                      ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                            Filter: ((kind)::text = 'complete+verified'::text)
                                            Rows Removed by Filter: 3
                                      ->  Nested Loop  (cost=9.47..40924.11 rows=13 width=63) (actual time=5.835..61.755 rows=94 loops=1)
                                            Join Filter: (cct1.id = cc.subject_id)
                                            Rows Removed by Join Filter: 4
                                            ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'cast'::text)
                                                  Rows Removed by Filter: 3
                                            ->  Nested Loop  (cost=9.47..40922.40 rows=53 width=67) (actual time=5.833..61.721 rows=98 loops=1)
                                                  ->  Nested Loop  (cost=9.05..40530.28 rows=140 width=55) (actual time=5.039..61.298 rows=140 loops=1)
                                                        Join Filter: (mi.info_type_id = it.id)
                                                        ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.004..0.014 rows=1 loops=1)
                                                              Filter: ((info)::text = 'release dates'::text)
                                                              Rows Removed by Filter: 112
                                                        ->  Nested Loop  (cost=9.05..40526.12 rows=140 width=59) (actual time=5.034..61.243 rows=140 loops=1)
                                                              Join Filter: (ci.movie_id = mi.movie_id)
                                                              ->  Nested Loop  (cost=8.62..37624.61 rows=69 width=51) (actual time=2.765..55.353 rows=69 loops=1)
                                                                    ->  Nested Loop  (cost=8.19..32739.20 rows=2087 width=32) (actual time=0.819..48.930 rows=2087 loops=1)
                                                                          ->  Nested Loop  (cost=7.76..27307.27 rows=2418 width=20) (actual time=0.811..42.358 rows=2418 loops=1)
                                                                                ->  Nested Loop  (cost=7.33..23508.53 rows=1303 width=16) (actual time=0.196..36.883 rows=1303 loops=1)
                                                                                      Join Filter: (ci.role_id = rt.id)
                                                                                      Rows Removed by Join Filter: 3092
                                                                                      ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.002..0.004 rows=1 loops=1)
                                                                                            Filter: ((role)::text = 'actress'::text)
                                                                                            Rows Removed by Filter: 11
                                                                                      ->  Nested Loop  (cost=7.33..23452.44 rows=4395 width=20) (actual time=0.164..36.337 rows=4395 loops=1)
                                                                                            ->  Nested Loop  (cost=6.77..3739.98 rows=414 width=4) (actual time=0.151..15.670 rows=414 loops=1)
                                                                                                  ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.043..14.920 rows=1 loops=1)
                                                                                                        Filter: (keyword = 'computer-animation'::text)
                                                                                                        Rows Removed by Filter: 134169
                                                                                                  ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.77..1110.84 rows=301 width=8) (actual time=0.106..0.662 rows=414 loops=1)
                                                                                                        Recheck Cond: (keyword_id = k.id)
                                                                                                        Heap Blocks: exact=358
                                                                                                        ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.69 rows=301 width=0) (actual time=0.056..0.056 rows=414 loops=1)
                                                                                                              Index Cond: (keyword_id = k.id)
                                                                                            ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.60 rows=1 width=16) (actual time=0.013..0.048 rows=11 loops=414)
                                                                                                  Index Cond: (movie_id = mk.movie_id)
                                                                                                  Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                                  Rows Removed by Filter: 33
                                                                                ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.90 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=1303)
                                                                                      Index Cond: (person_id = ci.person_id)
                                                                                      Heap Fetches: 2418
                                                                          ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.25 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=2418)
                                                                                Index Cond: (id = ci.person_role_id)
                                                                    ->  Index Scan using name_pkey on name n  (cost=0.43..2.34 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=2087)
                                                                          Index Cond: (id = ci.person_id)
                                                                          Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                          Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.04 rows=1 width=8) (actual time=0.029..0.084 rows=2 loops=69)
                                                                    Index Cond: (movie_id = mk.movie_id)
                                                                    Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%200%'::text) OR (info ~~ 'USA:%200%'::text)))
                                                                    Rows Removed by Filter: 222
                                                  ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.78 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=140)
                                                        Index Cond: (movie_id = mi.movie_id)
                                ->  Index Scan using title_pkey on title t  (cost=0.43..2.14 rows=1 width=21) (actual time=0.003..0.003 rows=1 loops=34)
                                      Index Cond: (id = mk.movie_id)
                                      Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                      Rows Removed by Filter: 0
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.79 rows=5 width=8) (actual time=0.003..0.009 rows=26 loops=33)
                                Index Cond: (movie_id = mk.movie_id)
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=858)
                          Index Cond: (id = mc.company_id)
                          Filter: ((country_code)::text = '[us]'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.22 rows=25 width=8) (actual time=0.005..0.076 rows=359 loops=189)
                    Index Cond: (person_id = an.person_id)
Planning time: 117.386 ms
Execution time: 108.080 ms
