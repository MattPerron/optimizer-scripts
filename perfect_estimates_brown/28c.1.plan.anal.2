Aggregate  (cost=6329.59..6329.60 rows=1 width=96) (actual time=2567.141..2567.141 rows=1 loops=1)
  ->  Nested Loop  (cost=9.33..6329.58 rows=1 width=42) (actual time=5.186..2560.101 rows=8373 loops=1)
        Join Filter: (it2.id = mi_idx.info_type_id)
        Rows Removed by Join Filter: 16479
        ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.020 rows=1 loops=1)
              Filter: ((info)::text = 'rating'::text)
              Rows Removed by Filter: 112
        ->  Nested Loop  (cost=9.33..6327.16 rows=1 width=46) (actual time=5.167..2556.088 rows=24852 loops=1)
              Join Filter: (t.id = mi_idx.movie_id)
              ->  Nested Loop  (cost=8.90..6326.62 rows=1 width=56) (actual time=5.156..2508.371 rows=8493 loops=1)
                    Join Filter: (mi.info_type_id = it1.id)
                    Rows Removed by Join Filter: 1116
                    ->  Nested Loop  (cost=8.90..6324.20 rows=1 width=60) (actual time=5.151..2461.431 rows=9609 loops=1)
                          Join Filter: (cc.subject_id = cct1.id)
                          Rows Removed by Join Filter: 1777
                          ->  Nested Loop  (cost=8.90..6323.13 rows=1 width=64) (actual time=5.150..2448.666 rows=11386 loops=1)
                                Join Filter: (cc.status_id = cct2.id)
                                Rows Removed by Join Filter: 8016
                                ->  Nested Loop  (cost=8.90..6322.07 rows=1 width=68) (actual time=5.147..2415.294 rows=19402 loops=1)
                                      Join Filter: (t.id = mi.movie_id)
                                      ->  Nested Loop  (cost=8.47..6320.20 rows=1 width=60) (actual time=5.123..442.592 rows=15737 loops=1)
                                            Join Filter: (ct.id = mc.company_type_id)
                                            ->  Nested Loop  (cost=8.47..6319.11 rows=1 width=64) (actual time=5.120..421.052 rows=15737 loops=1)
                                                  ->  Nested Loop  (cost=8.05..6318.62 rows=1 width=49) (actual time=5.114..356.405 rows=16406 loops=1)
                                                        Join Filter: (t.id = mc.movie_id)
                                                        ->  Nested Loop  (cost=7.62..6318.04 rows=1 width=37) (actual time=5.103..306.619 rows=1558 loops=1)
                                                              ->  Nested Loop  (cost=7.20..6312.77 rows=11 width=25) (actual time=4.237..282.999 rows=8073 loops=1)
                                                                    Join Filter: (kt.id = t.kind_id)
                                                                    Rows Removed by Join Filter: 4332
                                                                    ->  Nested Loop  (cost=7.20..6310.54 rows=40 width=29) (actual time=4.208..277.584 rows=9739 loops=1)
                                                                          ->  Nested Loop  (cost=6.77..6261.07 rows=101 width=4) (actual time=4.195..96.030 rows=37091 loops=1)
                                                                                ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=3 width=4) (actual time=1.396..29.885 rows=3 loops=1)
                                                                                      Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                      Rows Removed by Filter: 134167
                                                                                ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.77..1096.83 rows=301 width=8) (actual time=3.235..19.809 rows=12364 loops=3)
                                                                                      Recheck Cond: (keyword_id = k.id)
                                                                                      Heap Blocks: exact=26312
                                                                                      ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.69 rows=301 width=0) (actual time=1.676..1.676 rows=12364 loops=3)
                                                                                            Index Cond: (keyword_id = k.id)
                                                                          ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=37091)
                                                                                Index Cond: (id = mk.movie_id)
                                                                                Filter: (production_year > 2005)
                                                                                Rows Removed by Filter: 1
                                                                    ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                                          ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.004..0.005 rows=2 loops=1)
                                                                                Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                                Rows Removed by Filter: 5
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.003 rows=0 loops=8073)
                                                                    Index Cond: (movie_id = t.id)
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.009..0.028 rows=11 loops=1558)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                              Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                                              Rows Removed by Filter: 11
                                                  ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=16406)
                                                        Index Cond: (id = mc.company_id)
                                                        Filter: ((country_code)::text <> '[us]'::text)
                                                        Rows Removed by Filter: 0
                                            ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=15737)
                                      ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.84 rows=2 width=8) (actual time=0.104..0.125 rows=1 loops=15737)
                                            Index Cond: (movie_id = mk.movie_id)
                                            Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                            Rows Removed by Filter: 252
                                ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=19402)
                                      Filter: ((kind)::text = 'complete'::text)
                                      Rows Removed by Filter: 2
                          ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=11386)
                                Filter: ((kind)::text = 'cast'::text)
                                Rows Removed by Filter: 0
                    ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=9609)
                          Filter: ((info)::text = 'countries'::text)
                          Rows Removed by Filter: 19
              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.003..0.005 rows=3 loops=8493)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (info < '8.5'::text)
                    Rows Removed by Filter: 0
Planning time: 89.100 ms
Execution time: 2567.273 ms
