Aggregate  (cost=76284.87..76284.88 rows=1 width=96) (actual time=258.847..258.847 rows=1 loops=1)
  ->  Nested Loop  (cost=7004.22..76284.86 rows=1 width=48) (actual time=94.184..258.609 rows=275 loops=1)
        ->  Nested Loop  (cost=7004.07..76284.35 rows=3 width=52) (actual time=94.177..258.124 rows=275 loops=1)
              Join Filter: (t.id = mi.movie_id)
              ->  Nested Loop  (cost=7003.64..75549.74 rows=23 width=64) (actual time=94.156..252.167 rows=125 loops=1)
                    Join Filter: (n.id = an.person_id)
                    ->  Hash Join  (cost=7003.21..75324.46 rows=107 width=72) (actual time=78.359..251.764 rows=107 loops=1)
                          Hash Cond: (ci.role_id = rt.id)
                          ->  Nested Loop  (cost=7002.05..75322.02 rows=107 width=76) (actual time=78.343..251.700 rows=107 loops=1)
                                ->  Hash Join  (cost=7001.62..61984.89 rows=7195 width=57) (actual time=67.835..228.682 rows=7195 loops=1)
                                      Hash Cond: (mc.company_id = cn.id)
                                      ->  Nested Loop  (cost=8.62..54801.01 rows=15119 width=61) (actual time=1.162..158.178 rows=15119 loops=1)
                                            Join Filter: (t.id = mc.movie_id)
                                            ->  Nested Loop  (cost=8.19..45914.71 rows=2568 width=53) (actual time=1.155..143.595 rows=2568 loops=1)
                                                  ->  Nested Loop  (cost=7.76..41345.74 rows=2625 width=41) (actual time=1.149..132.062 rows=2625 loops=1)
                                                        Join Filter: (t.id = ci.movie_id)
                                                        ->  Nested Loop  (cost=7.20..21637.52 rows=495 width=25) (actual time=0.926..81.392 rows=495 loops=1)
                                                              ->  Nested Loop  (cost=6.77..6093.36 rows=9696 width=4) (actual time=0.870..42.834 rows=9696 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.015..26.751 rows=3 loops=1)
                                                                          Filter: (keyword = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                          Rows Removed by Filter: 134167
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.77..1096.83 rows=301 width=8) (actual time=0.844..4.778 rows=3232 loops=3)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=7446
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.69 rows=301 width=0) (actual time=0.448..0.448 rows=3232 loops=3)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=9696)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2010)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.80 rows=1 width=16) (actual time=0.068..0.101 rows=5 loops=495)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                              Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                              Rows Removed by Filter: 83
                                                  ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.74 rows=1 width=20) (actual time=0.004..0.004 rows=1 loops=2625)
                                                        Index Cond: (id = ci.person_role_id)
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.40 rows=5 width=8) (actual time=0.002..0.004 rows=6 loops=2568)
                                                  Index Cond: (movie_id = mk.movie_id)
                                      ->  Hash  (cost=5932.46..5932.46 rows=84843 width=4) (actual time=66.533..66.533 rows=84843 loops=1)
                                            Buckets: 131072  Batches: 1  Memory Usage: 4007kB
                                            ->  Seq Scan on company_name cn  (cost=0.00..5932.46 rows=84843 width=4) (actual time=0.009..53.281 rows=84843 loops=1)
                                                  Filter: ((country_code)::text = '[us]'::text)
                                                  Rows Removed by Filter: 150154
                                ->  Index Scan using name_pkey on name n  (cost=0.43..1.85 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=7195)
                                      Index Cond: (id = ci.person_id)
                                      Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                      Rows Removed by Filter: 1
                          ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                                      Filter: ((role)::text = 'actress'::text)
                                      Rows Removed by Filter: 11
                    ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.003..0.003 rows=1 loops=107)
                          Index Cond: (person_id = ci.person_id)
                          Heap Fetches: 125
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..31.93 rows=1 width=8) (actual time=0.008..0.047 rows=2 loops=125)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%201%'::text) OR (info ~~ 'USA:%201%'::text)))
                    Rows Removed by Filter: 126
        ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=275)
              Index Cond: (id = mi.info_type_id)
              Filter: ((info)::text = 'release dates'::text)
Planning time: 73.563 ms
Execution time: 258.991 ms
