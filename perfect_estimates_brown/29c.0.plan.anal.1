Aggregate  (cost=4046.69..4046.70 rows=1 width=96) (actual time=90.405..90.406 rows=1 loops=1)
  ->  Nested Loop  (cost=11.18..4046.68 rows=1 width=48) (actual time=13.918..82.799 rows=16308 loops=1)
        Join Filter: (n.id = an.person_id)
        ->  Nested Loop  (cost=10.76..4043.79 rows=1 width=60) (actual time=13.910..65.699 rows=3822 loops=1)
              Join Filter: (it3.id = pi.info_type_id)
              Rows Removed by Join Filter: 11521
              ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.017 rows=1 loops=1)
                    Filter: ((info)::text = 'trivia'::text)
                    Rows Removed by Filter: 112
              ->  Nested Loop  (cost=10.76..4041.36 rows=1 width=64) (actual time=13.849..64.066 rows=15343 loops=1)
                    Join Filter: (n.id = pi.person_id)
                    ->  Nested Loop  (cost=10.33..4021.83 rows=1 width=56) (actual time=13.837..56.471 rows=46 loops=1)
                          Join Filter: (it.id = mi.info_type_id)
                          ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.004..0.013 rows=1 loops=1)
                                Filter: ((info)::text = 'release dates'::text)
                                Rows Removed by Filter: 112
                          ->  Nested Loop  (cost=10.33..4019.40 rows=1 width=60) (actual time=13.832..56.443 rows=46 loops=1)
                                Join Filter: (t.id = mi.movie_id)
                                ->  Nested Loop  (cost=9.89..3977.35 rows=1 width=76) (actual time=13.807..54.407 rows=17 loops=1)
                                      Join Filter: (rt.id = ci.role_id)
                                      ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.002..0.004 rows=1 loops=1)
                                            Filter: ((role)::text = 'actress'::text)
                                            Rows Removed by Filter: 11
                                      ->  Nested Loop  (cost=9.89..3976.19 rows=1 width=80) (actual time=13.804..54.394 rows=17 loops=1)
                                            ->  Nested Loop  (cost=9.46..3973.85 rows=1 width=61) (actual time=2.198..46.682 rows=2170 loops=1)
                                                  ->  Nested Loop  (cost=9.03..3971.61 rows=1 width=49) (actual time=2.192..39.312 rows=2666 loops=1)
                                                        Join Filter: (t.id = ci.movie_id)
                                                        ->  Nested Loop  (cost=8.47..3923.99 rows=1 width=33) (actual time=2.169..27.003 rows=92 loops=1)
                                                              ->  Nested Loop  (cost=8.05..3921.96 rows=1 width=37) (actual time=2.116..25.407 rows=415 loops=1)
                                                                    Join Filter: (cct1.id = cc.subject_id)
                                                                    Rows Removed by Join Filter: 23
                                                                    ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.003 rows=1 loops=1)
                                                                          Filter: ((kind)::text = 'cast'::text)
                                                                          Rows Removed by Filter: 3
                                                                    ->  Nested Loop  (cost=8.05..3920.90 rows=1 width=41) (actual time=2.114..25.297 rows=438 loops=1)
                                                                          Join Filter: (cct2.id = cc.status_id)
                                                                          Rows Removed by Join Filter: 963
                                                                          ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                                Filter: ((kind)::text = 'complete+verified'::text)
                                                                                Rows Removed by Filter: 3
                                                                          ->  Nested Loop  (cost=8.05..3919.84 rows=1 width=45) (actual time=1.895..25.075 rows=1401 loops=1)
                                                                                ->  Nested Loop  (cost=7.63..3880.67 rows=14 width=33) (actual time=0.164..19.652 rows=2435 loops=1)
                                                                                      Join Filter: (t.id = mc.movie_id)
                                                                                      ->  Nested Loop  (cost=7.20..3812.67 rows=14 width=25) (actual time=0.155..16.762 rows=249 loops=1)
                                                                                            ->  Nested Loop  (cost=6.77..3739.98 rows=34 width=4) (actual time=0.145..14.519 rows=414 loops=1)
                                                                                                  ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.044..13.853 rows=1 loops=1)
                                                                                                        Filter: (keyword = 'computer-animation'::text)
                                                                                                        Rows Removed by Filter: 134169
                                                                                                  ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.77..1110.84 rows=301 width=8) (actual time=0.099..0.589 rows=414 loops=1)
                                                                                                        Recheck Cond: (keyword_id = k.id)
                                                                                                        Heap Blocks: exact=358
                                                                                                        ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.69 rows=301 width=0) (actual time=0.052..0.052 rows=414 loops=1)
                                                                                                              Index Cond: (keyword_id = k.id)
                                                                                            ->  Index Scan using title_pkey on title t  (cost=0.43..2.14 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=414)
                                                                                                  Index Cond: (id = mk.movie_id)
                                                                                                  Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                                                  Rows Removed by Filter: 0
                                                                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.79 rows=5 width=8) (actual time=0.005..0.009 rows=10 loops=249)
                                                                                            Index Cond: (movie_id = mk.movie_id)
                                                                                ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.78 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=2435)
                                                                                      Index Cond: (movie_id = t.id)
                                                              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=415)
                                                                    Index Cond: (id = mc.company_id)
                                                                    Filter: ((country_code)::text = '[us]'::text)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.60 rows=1 width=16) (actual time=0.017..0.125 rows=29 loops=92)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                              Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                              Rows Removed by Filter: 130
                                                  ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.25 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=2666)
                                                        Index Cond: (id = ci.person_role_id)
                                            ->  Index Scan using name_pkey on name n  (cost=0.43..2.34 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=2170)
                                                  Index Cond: (id = ci.person_id)
                                                  Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                  Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.04 rows=1 width=8) (actual time=0.017..0.118 rows=3 loops=17)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%200%'::text) OR (info ~~ 'USA:%200%'::text)))
                                      Rows Removed by Filter: 327
                    ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.22 rows=25 width=8) (actual time=0.006..0.077 rows=334 loops=46)
                          Index Cond: (person_id = ci.person_id)
        ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.87 rows=2 width=4) (actual time=0.002..0.003 rows=4 loops=3822)
              Index Cond: (person_id = pi.person_id)
              Heap Fetches: 16308
Planning time: 117.323 ms
Execution time: 90.539 ms
