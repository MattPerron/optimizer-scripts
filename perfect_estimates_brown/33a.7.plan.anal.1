Aggregate  (cost=8306.21..8306.22 rows=1 width=192) (actual time=30.765..30.765 rows=1 loops=1)
  ->  Nested Loop  (cost=42.65..8306.19 rows=1 width=84) (actual time=2.360..30.750 rows=8 loops=1)
        ->  Nested Loop  (cost=42.51..8306.01 rows=1 width=88) (actual time=2.212..30.713 rows=24 loops=1)
              ->  Nested Loop  (cost=42.09..8305.56 rows=1 width=73) (actual time=2.208..30.647 rows=24 loops=1)
                    ->  Nested Loop  (cost=41.95..8303.11 rows=15 width=77) (actual time=0.999..27.240 rows=2445 loops=1)
                          Join Filter: (t2.id = mc2.movie_id)
                          ->  Nested Loop  (cost=41.52..8292.04 rows=15 width=85) (actual time=0.994..25.286 rows=288 loops=1)
                                ->  Nested Loop  (cost=41.10..8273.31 rows=42 width=70) (actual time=0.231..22.361 rows=1134 loops=1)
                                      ->  Nested Loop  (cost=40.67..8248.36 rows=41 width=78) (actual time=0.226..21.041 rows=285 loops=1)
                                            Join Filter: ((ml.movie_id = t1.id) AND (kt1.id = t1.kind_id))
                                            ->  Nested Loop  (cost=40.24..8079.39 rows=285 width=61) (actual time=0.223..20.215 rows=285 loops=1)
                                                  ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..12.26 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                                        Filter: ((kind)::text = 'tv series'::text)
                                                        Rows Removed by Filter: 6
                                                  ->  Nested Loop  (cost=40.10..8064.28 rows=285 width=57) (actual time=0.215..20.135 rows=285 loops=1)
                                                        Join Filter: (t2.kind_id = kt2.id)
                                                        Rows Removed by Join Filter: 543
                                                        ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'tv series'::text)
                                                              Rows Removed by Filter: 6
                                                        ->  Nested Loop  (cost=40.10..8052.84 rows=828 width=61) (actual time=0.211..19.990 rows=828 loops=1)
                                                              ->  Nested Loop  (cost=39.68..7414.33 rows=308 width=47) (actual time=0.207..18.850 rows=308 loops=1)
                                                                    Join Filter: (ml.linked_movie_id = t2.id)
                                                                    ->  Nested Loop  (cost=39.25..5240.56 rows=2944 width=22) (actual time=0.087..10.577 rows=2944 loops=1)
                                                                          ->  Nested Loop  (cost=38.82..470.30 rows=2315 width=8) (actual time=0.079..1.236 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.003..0.008 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.073..0.400 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.058..0.058 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.003..0.003 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.0'::text)
                                                                                Rows Removed by Filter: 1
                                                                    ->  Index Scan using title_pkey on title t2  (cost=0.43..0.73 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2944)
                                                                          Index Cond: (id = mi_idx2.movie_id)
                                                                          Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                                                          Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..2.04 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=308)
                                                                    Index Cond: (movie_id = ml.movie_id)
                                            ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=285)
                                                  Index Cond: (id = mi_idx1.movie_id)
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=4 loops=285)
                                            Index Cond: (movie_id = t1.id)
                                ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1134)
                                      Index Cond: (id = mc1.company_id)
                                      Filter: ((country_code)::text = '[us]'::text)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.002..0.004 rows=8 loops=288)
                                Index Cond: (movie_id = mi_idx2.movie_id)
                    ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=2445)
                          Index Cond: (id = mi_idx2.info_type_id)
                          Filter: ((info)::text = 'rating'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=24)
                    Index Cond: (id = mc2.company_id)
        ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=24)
              Index Cond: (id = mi_idx1.info_type_id)
              Filter: ((info)::text = 'rating'::text)
              Rows Removed by Filter: 1
Planning time: 89.733 ms
Execution time: 30.888 ms
