Aggregate  (cost=6169.79..6169.80 rows=1 width=192) (actual time=248.672..248.672 rows=1 loops=1)
  ->  Nested Loop  (cost=923.56..6169.78 rows=1 width=84) (actual time=29.949..248.512 rows=114 loops=1)
        Join Filter: ((t2.id = mi_idx2.movie_id) AND (it2.id = mi_idx2.info_type_id))
        Rows Removed by Join Filter: 20020
        ->  Nested Loop  (cost=923.13..6160.67 rows=17 width=94) (actual time=2.174..190.906 rows=15007 loops=1)
              Join Filter: (t1.kind_id = kt1.id)
              Rows Removed by Join Filter: 11480
              ->  Nested Loop  (cost=923.13..6157.92 rows=58 width=98) (actual time=2.169..181.340 rows=15007 loops=1)
                    Join Filter: (ml.movie_id = t1.id)
                    ->  Nested Loop  (cost=922.70..6127.24 rows=58 width=89) (actual time=2.164..143.875 rows=15007 loops=1)
                          ->  Nested Loop  (cost=922.28..6101.52 rows=58 width=74) (actual time=2.161..102.997 rows=15007 loops=1)
                                ->  Nested Loop  (cost=921.85..6064.24 rows=56 width=66) (actual time=2.156..86.710 rows=2996 loops=1)
                                      Join Filter: (kt2.id = t2.kind_id)
                                      Rows Removed by Join Filter: 3351
                                      ->  Nested Loop  (cost=921.85..6057.57 rows=195 width=70) (actual time=1.594..84.430 rows=3519 loops=1)
                                            ->  Nested Loop  (cost=921.42..3972.15 rows=466 width=45) (actual time=1.589..64.323 rows=7279 loops=1)
                                                  ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.025..0.029 rows=1 loops=1)
                                                        Filter: ((info)::text = 'rating'::text)
                                                        Rows Removed by Filter: 112
                                                  ->  Nested Loop  (cost=921.28..3953.37 rows=466 width=41) (actual time=1.563..62.710 rows=7279 loops=1)
                                                        ->  Nested Loop  (cost=920.86..3570.79 rows=858 width=26) (actual time=1.558..36.000 rows=9674 loops=1)
                                                              Join Filter: (ml.movie_id = mc1.movie_id)
                                                              ->  Nested Loop  (cost=920.43..3484.96 rows=131 width=18) (actual time=1.551..24.233 rows=2064 loops=1)
                                                                    Join Filter: (mi_idx1.info_type_id = it1.id)
                                                                    Rows Removed by Join Filter: 4128
                                                                    ->  Merge Join  (cost=920.43..3260.42 rows=14808 width=22) (actual time=1.528..21.682 rows=6192 loops=1)
                                                                          Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43810.54 rows=1380035 width=14) (actual time=0.006..11.248 rows=63901 loops=1)
                                                                          ->  Sort  (cost=919.92..932.42 rows=5000 width=8) (actual time=1.492..2.203 rows=6443 loops=1)
                                                                                Sort Key: ml.movie_id
                                                                                Sort Method: quicksort  Memory: 205kB
                                                                                ->  Nested Loop  (cost=37.49..612.73 rows=5000 width=8) (actual time=0.082..1.004 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.006..0.012 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Bitmap Heap Scan on movie_link ml  (cost=37.49..185.08 rows=1875 width=12) (actual time=0.073..0.318 rows=1158 loops=2)
                                                                                            Recheck Cond: (link_type_id = lt.id)
                                                                                            Heap Blocks: exact=191
                                                                                            ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..37.02 rows=1875 width=0) (actual time=0.058..0.058 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                    ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6192)
                                                                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.003..0.004 rows=5 loops=2064)
                                                                    Index Cond: (movie_id = mi_idx1.movie_id)
                                                        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=9674)
                                                              Index Cond: (id = mc1.company_id)
                                                              Filter: ((country_code)::text <> '[us]'::text)
                                                              Rows Removed by Filter: 0
                                            ->  Index Scan using title_pkey on title t2  (cost=0.43..4.48 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=7279)
                                                  Index Cond: (id = ml.linked_movie_id)
                                                  Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                  Rows Removed by Filter: 1
                                      ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=3519)
                                            ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=1)
                                                  Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                  Rows Removed by Filter: 5
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.002..0.004 rows=5 loops=2996)
                                      Index Cond: (movie_id = t2.id)
                          ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=15007)
                                Index Cond: (id = mc2.company_id)
                    ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=15007)
                          Index Cond: (id = mc1.movie_id)
              ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=15007)
                    ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=2 width=4) (actual time=0.003..0.005 rows=2 loops=1)
                          Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                          Rows Removed by Filter: 5
        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.51 rows=2 width=14) (actual time=0.002..0.003 rows=1 loops=15007)
              Index Cond: (movie_id = mc2.movie_id)
              Filter: (info < '3.5'::text)
              Rows Removed by Filter: 2
Planning time: 87.364 ms
Execution time: 248.799 ms
