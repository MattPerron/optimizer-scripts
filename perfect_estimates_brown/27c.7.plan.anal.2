Aggregate  (cost=3402.30..3402.31 rows=1 width=96) (actual time=21.696..21.696 rows=1 loops=1)
  ->  Nested Loop  (cost=602.65..3402.22 rows=10 width=48) (actual time=2.682..21.216 rows=743 loops=1)
        Join Filter: (ml.movie_id = mi.movie_id)
        ->  Nested Loop  (cost=602.22..3394.95 rows=4 width=68) (actual time=2.671..18.372 rows=172 loops=1)
              Join Filter: (cc.subject_id = cct1.id)
              Rows Removed by Join Filter: 57
              ->  Nested Loop  (cost=602.22..3393.66 rows=16 width=72) (actual time=2.666..18.253 rows=229 loops=1)
                    ->  Nested Loop  (cost=601.80..3358.00 rows=78 width=57) (actual time=1.978..16.619 rows=552 loops=1)
                          Join Filter: (mc.company_type_id = ct.id)
                          Rows Removed by Join Filter: 29
                          ->  Nested Loop  (cost=601.80..3352.26 rows=313 width=61) (actual time=1.975..16.355 rows=581 loops=1)
                                Join Filter: (ml.movie_id = mc.movie_id)
                                ->  Nested Loop  (cost=601.37..3295.62 rows=98 width=49) (actual time=1.968..15.691 rows=98 loops=1)
                                      Join Filter: (ml.movie_id = t.id)
                                      ->  Nested Loop  (cost=600.94..3246.15 rows=98 width=28) (actual time=1.963..15.378 rows=98 loops=1)
                                            Join Filter: (cc.status_id = cct2.id)
                                            Rows Removed by Join Filter: 21
                                            ->  Nested Loop  (cost=600.94..3242.39 rows=98 width=32) (actual time=1.957..15.308 rows=98 loops=1)
                                                  ->  Nested Loop  (cost=600.52..1683.80 rows=3532 width=36) (actual time=1.791..7.144 rows=3532 loops=1)
                                                        Join Filter: (ml.movie_id = mk.movie_id)
                                                        ->  Merge Join  (cost=600.09..937.47 rows=257 width=28) (actual time=1.783..4.767 rows=257 loops=1)
                                                              Merge Cond: (cc.movie_id = ml.movie_id)
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6346.28 rows=135086 width=12) (actual time=0.009..2.098 rows=5993 loops=1)
                                                              ->  Sort  (cost=599.65..605.43 rows=2315 width=16) (actual time=1.547..1.732 rows=2341 loops=1)
                                                                    Sort Key: ml.movie_id
                                                                    Sort Method: quicksort  Memory: 205kB
                                                                    ->  Nested Loop  (cost=38.82..470.28 rows=2315 width=16) (actual time=0.080..0.975 rows=2315 loops=1)
                                                                          ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=16) (actual time=0.004..0.009 rows=2 loops=1)
                                                                                Filter: ((link)::text ~~ '%follow%'::text)
                                                                                Rows Removed by Filter: 16
                                                                          ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=8) (actual time=0.072..0.306 rows=1158 loops=2)
                                                                                Recheck Cond: (link_type_id = lt.id)
                                                                                Heap Blocks: exact=191
                                                                                ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.057..0.057 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                        ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..2.33 rows=46 width=8) (actual time=0.003..0.005 rows=14 loops=257)
                                                              Index Cond: (movie_id = cc.movie_id)
                                                  ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=3532)
                                                        Index Cond: (id = mk.keyword_id)
                                                        Filter: (keyword = 'sequel'::text)
                                                        Rows Removed by Filter: 1
                                            ->  Materialize  (cost=0.00..1.06 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=98)
                                                  ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=1)
                                                        Filter: ((kind)::text ~~ 'complete%'::text)
                                                        Rows Removed by Filter: 2
                                      ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.003..0.003 rows=1 loops=98)
                                            Index Cond: (id = mk.movie_id)
                                            Filter: ((production_year >= 1950) AND (production_year <= 2010))
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.003..0.005 rows=6 loops=98)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: (note IS NULL)
                                      Rows Removed by Filter: 1
                          ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=581)
                                ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                      Filter: ((kind)::text = 'production companies'::text)
                                      Rows Removed by Filter: 3
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=552)
                          Index Cond: (id = mc.company_id)
                          Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                          Rows Removed by Filter: 1
              ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=229)
                    ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                          Filter: ((kind)::text = 'cast'::text)
                          Rows Removed by Filter: 3
        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.79 rows=2 width=4) (actual time=0.012..0.015 rows=4 loops=172)
              Index Cond: (movie_id = mk.movie_id)
              Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
              Rows Removed by Filter: 15
Planning time: 70.206 ms
Execution time: 21.807 ms
