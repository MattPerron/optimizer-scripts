Aggregate  (cost=46339.33..46339.34 rows=1 width=96) (actual time=133.825..133.826 rows=1 loops=1)
  ->  Nested Loop  (cost=10.33..46337.27 rows=275 width=48) (actual time=15.195..133.598 rows=275 loops=1)
        ->  Nested Loop  (cost=9.91..45022.13 rows=892 width=52) (actual time=15.187..131.202 rows=892 loops=1)
              Join Filter: (t.id = mc.movie_id)
              ->  Nested Loop  (cost=9.48..44797.21 rows=65 width=64) (actual time=15.178..130.520 rows=65 loops=1)
                    Join Filter: (it.id = mi.info_type_id)
                    ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.022 rows=1 loops=1)
                          Filter: ((info)::text = 'release dates'::text)
                          Rows Removed by Filter: 112
                    ->  Nested Loop  (cost=9.48..44793.98 rows=65 width=68) (actual time=15.165..130.478 rows=65 loops=1)
                          Join Filter: (t.id = mi.movie_id)
                          ->  Nested Loop  (cost=9.05..43580.27 rows=38 width=60) (actual time=15.153..129.148 rows=38 loops=1)
                                Join Filter: (n.id = an.person_id)
                                ->  Nested Loop  (cost=8.62..43519.21 rows=29 width=68) (actual time=6.772..128.994 rows=29 loops=1)
                                      ->  Nested Loop  (cost=8.19..42429.26 rows=588 width=49) (actual time=1.140..126.464 rows=588 loops=1)
                                            ->  Nested Loop  (cost=7.76..41379.70 rows=603 width=37) (actual time=1.132..123.816 rows=603 loops=1)
                                                  Join Filter: (rt.id = ci.role_id)
                                                  Rows Removed by Join Filter: 2022
                                                  ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.002..0.004 rows=1 loops=1)
                                                        Filter: ((role)::text = 'actress'::text)
                                                        Rows Removed by Filter: 11
                                                  ->  Nested Loop  (cost=7.76..41345.74 rows=2625 width=41) (actual time=1.123..123.506 rows=2625 loops=1)
                                                        Join Filter: (t.id = ci.movie_id)
                                                        ->  Nested Loop  (cost=7.20..21637.52 rows=495 width=25) (actual time=0.909..77.374 rows=495 loops=1)
                                                              ->  Nested Loop  (cost=6.77..6093.36 rows=9696 width=4) (actual time=0.855..41.649 rows=9696 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.015..26.559 rows=3 loops=1)
                                                                          Filter: (keyword = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                          Rows Removed by Filter: 134167
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.77..1096.83 rows=301 width=8) (actual time=0.831..4.448 rows=3232 loops=3)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=7446
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.69 rows=301 width=0) (actual time=0.442..0.442 rows=3232 loops=3)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=9696)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2010)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.80 rows=1 width=16) (actual time=0.062..0.092 rows=5 loops=495)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                              Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                              Rows Removed by Filter: 83
                                            ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.74 rows=1 width=20) (actual time=0.004..0.004 rows=1 loops=603)
                                                  Index Cond: (id = ci.person_role_id)
                                      ->  Index Scan using name_pkey on name n  (cost=0.43..1.85 rows=1 width=19) (actual time=0.004..0.004 rows=0 loops=588)
                                            Index Cond: (id = ci.person_id)
                                            Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                            Rows Removed by Filter: 1
                                ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.004..0.004 rows=1 loops=29)
                                      Index Cond: (person_id = ci.person_id)
                                      Heap Fetches: 38
                          ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..31.93 rows=1 width=8) (actual time=0.008..0.034 rows=2 loops=38)
                                Index Cond: (movie_id = mk.movie_id)
                                Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%201%'::text) OR (info ~~ 'USA:%201%'::text)))
                                Rows Removed by Filter: 78
              ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.40 rows=5 width=8) (actual time=0.003..0.007 rows=14 loops=65)
                    Index Cond: (movie_id = mk.movie_id)
        ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=892)
              Index Cond: (id = mc.company_id)
              Filter: ((country_code)::text = '[us]'::text)
              Rows Removed by Filter: 1
Planning time: 72.902 ms
Execution time: 133.940 ms
