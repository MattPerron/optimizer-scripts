Aggregate  (cost=25235.69..25235.70 rows=1 width=96) (actual time=278.837..278.837 rows=1 loops=1)
  ->  Nested Loop  (cost=8.91..25235.68 rows=1 width=42) (actual time=9.421..278.788 rows=31 loops=1)
        Join Filter: (mi.info_type_id = it1.id)
        Rows Removed by Join Filter: 3
        ->  Nested Loop  (cost=8.91..25233.26 rows=1 width=46) (actual time=9.415..278.589 rows=34 loops=1)
              Join Filter: (t.id = mi.movie_id)
              ->  Nested Loop  (cost=8.47..25231.69 rows=1 width=58) (actual time=9.383..276.662 rows=50 loops=1)
                    ->  Nested Loop  (cost=8.05..25231.20 rows=1 width=43) (actual time=9.375..276.208 rows=78 loops=1)
                          Join Filter: (mc.company_type_id = ct.id)
                          Rows Removed by Join Filter: 234
                          ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.004..0.006 rows=4 loops=1)
                          ->  Materialize  (cost=8.05..25230.05 rows=2 width=47) (actual time=2.343..69.035 rows=78 loops=4)
                                ->  Nested Loop  (cost=8.05..25230.04 rows=2 width=47) (actual time=9.368..276.063 rows=78 loops=1)
                                      Join Filter: (t.id = mc.movie_id)
                                      ->  Nested Loop  (cost=7.62..25228.31 rows=3 width=35) (actual time=5.577..256.159 rows=1615 loops=1)
                                            Join Filter: (mi_idx.info_type_id = it2.id)
                                            Rows Removed by Join Filter: 4362
                                            ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.018 rows=1 loops=1)
                                                  Filter: ((info)::text = 'rating'::text)
                                                  Rows Removed by Filter: 112
                                            ->  Nested Loop  (cost=7.62..25161.82 rows=5126 width=39) (actual time=4.268..255.180 rows=5977 loops=1)
                                                  Join Filter: (t.id = mi_idx.movie_id)
                                                  ->  Nested Loop  (cost=7.20..24544.01 rows=1154 width=25) (actual time=4.257..234.775 rows=3517 loops=1)
                                                        Join Filter: (t.kind_id = kt.id)
                                                        Rows Removed by Join Filter: 1618
                                                        ->  Nested Loop  (cost=7.20..24427.48 rows=4040 width=29) (actual time=4.249..232.609 rows=4040 loops=1)
                                                              ->  Nested Loop  (cost=6.77..6261.07 rows=37091 width=4) (actual time=4.220..92.055 rows=37091 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=3 width=4) (actual time=1.384..30.074 rows=3 loops=1)
                                                                          Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                          Rows Removed by Filter: 134167
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.77..1096.83 rows=301 width=8) (actual time=3.255..18.492 rows=12364 loops=3)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=26312
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.69 rows=301 width=0) (actual time=1.671..1.671 rows=12364 loops=3)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=37091)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2009)
                                                                    Rows Removed by Filter: 1
                                                        ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=4040)
                                                              ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.005..0.006 rows=2 loops=1)
                                                                    Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                    Rows Removed by Filter: 5
                                                  ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.004..0.005 rows=2 loops=3517)
                                                        Index Cond: (movie_id = mk.movie_id)
                                                        Filter: (info < '7.0'::text)
                                                        Rows Removed by Filter: 0
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.012..0.012 rows=0 loops=1615)
                                            Index Cond: (movie_id = mk.movie_id)
                                            Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                            Rows Removed by Filter: 12
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=23) (actual time=0.005..0.005 rows=1 loops=78)
                          Index Cond: (id = mc.company_id)
                          Filter: ((country_code)::text <> '[us]'::text)
                          Rows Removed by Filter: 0
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.54 rows=2 width=8) (actual time=0.035..0.038 rows=1 loops=50)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (info = ANY ('{Germany,German,USA,American}'::text[]))
                    Rows Removed by Filter: 53
        ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=34)
              Filter: ((info)::text = 'countries'::text)
              Rows Removed by Filter: 16
Planning time: 29.765 ms
Execution time: 278.942 ms
