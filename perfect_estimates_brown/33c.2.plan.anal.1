Aggregate  (cost=3024.96..3024.97 rows=1 width=192) (actual time=75.811..75.811 rows=1 loops=1)
  ->  Nested Loop  (cost=603.27..3024.94 rows=1 width=84) (actual time=9.479..75.648 rows=114 loops=1)
        ->  Nested Loop  (cost=602.85..3024.50 rows=1 width=69) (actual time=9.476..75.330 rows=114 loops=1)
              ->  Nested Loop  (cost=602.42..3023.83 rows=1 width=77) (actual time=9.468..75.121 rows=46 loops=1)
                    ->  Nested Loop  (cost=602.27..3023.49 rows=2 width=81) (actual time=1.927..68.657 rows=4086 loops=1)
                          ->  Nested Loop  (cost=601.85..3022.15 rows=3 width=66) (actual time=1.922..56.390 rows=4518 loops=1)
                                ->  Nested Loop  (cost=601.42..3020.33 rows=3 width=74) (actual time=1.917..51.228 rows=1064 loops=1)
                                      Join Filter: (kt2.id = t2.kind_id)
                                      Rows Removed by Join Filter: 1080
                                      ->  Nested Loop  (cost=601.42..3018.92 rows=11 width=78) (actual time=1.599..50.412 rows=1238 loops=1)
                                            Join Filter: (ml.linked_movie_id = t2.id)
                                            ->  Nested Loop  (cost=600.99..3000.21 rows=26 width=53) (actual time=1.594..41.609 rows=2904 loops=1)
                                                  ->  Nested Loop  (cost=600.57..2965.01 rows=17 width=39) (actual time=1.587..31.959 rows=2064 loops=1)
                                                        Join Filter: (t1.kind_id = kt1.id)
                                                        Rows Removed by Join Filter: 844
                                                        ->  Nested Loop  (cost=600.57..2962.18 rows=61 width=43) (actual time=1.582..30.783 rows=2064 loops=1)
                                                              Join Filter: (ml.movie_id = t1.id)
                                                              ->  Nested Loop  (cost=600.14..2926.16 rows=61 width=18) (actual time=1.570..24.136 rows=2064 loops=1)
                                                                    Join Filter: (mi_idx1.info_type_id = it1.id)
                                                                    Rows Removed by Join Filter: 4128
                                                                    ->  Merge Join  (cost=600.14..2820.91 rows=6856 width=22) (actual time=1.548..21.604 rows=6192 loops=1)
                                                                          Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43810.54 rows=1380035 width=14) (actual time=0.009..11.113 rows=63901 loops=1)
                                                                          ->  Sort  (cost=599.67..605.46 rows=2315 width=8) (actual time=1.505..2.210 rows=6443 loops=1)
                                                                                Sort Key: ml.movie_id
                                                                                Sort Method: quicksort  Memory: 205kB
                                                                                ->  Nested Loop  (cost=38.82..470.30 rows=2315 width=8) (actual time=0.080..1.023 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.004..0.010 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.073..0.323 rows=1158 loops=2)
                                                                                            Recheck Cond: (link_type_id = lt.id)
                                                                                            Heap Blocks: exact=191
                                                                                            ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.058..0.058 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                    ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6192)
                                                                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                              ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=2064)
                                                                    Index Cond: (id = mi_idx1.movie_id)
                                                        ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=2064)
                                                              ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=2 width=4) (actual time=0.003..0.005 rows=2 loops=1)
                                                                    Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                                    Rows Removed by Filter: 5
                                                  ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=2 width=14) (actual time=0.003..0.004 rows=1 loops=2064)
                                                        Index Cond: (movie_id = ml.linked_movie_id)
                                                        Filter: (info < '3.5'::text)
                                                        Rows Removed by Filter: 1
                                            ->  Index Scan using title_pkey on title t2  (cost=0.43..0.71 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=2904)
                                                  Index Cond: (id = mi_idx2.movie_id)
                                                  Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                  Rows Removed by Filter: 1
                                      ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=1238)
                                            ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.002..0.003 rows=2 loops=1)
                                                  Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                  Rows Removed by Filter: 5
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=4 loops=1064)
                                      Index Cond: (movie_id = t1.id)
                          ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=4518)
                                Index Cond: (id = mc1.company_id)
                                Filter: ((country_code)::text <> '[us]'::text)
                                Rows Removed by Filter: 0
                    ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=4086)
                          Index Cond: (id = mi_idx2.info_type_id)
                          Filter: ((info)::text = 'rating'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.002..0.004 rows=2 loops=46)
                    Index Cond: (movie_id = t2.id)
        ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=114)
              Index Cond: (id = mc2.company_id)
Planning time: 87.296 ms
Execution time: 75.937 ms
