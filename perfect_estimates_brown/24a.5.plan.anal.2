Aggregate  (cost=60519.81..60519.82 rows=1 width=96) (actual time=225.146..225.146 rows=1 loops=1)
  ->  Nested Loop  (cost=10.33..60519.80 rows=1 width=48) (actual time=30.237..224.923 rows=275 loops=1)
        Join Filter: (it.id = mi.info_type_id)
        ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.020 rows=1 loops=1)
              Filter: ((info)::text = 'release dates'::text)
              Rows Removed by Filter: 112
        ->  Nested Loop  (cost=10.33..60517.38 rows=1 width=52) (actual time=30.226..224.841 rows=275 loops=1)
              Join Filter: (t.id = mi.movie_id)
              ->  Nested Loop  (cost=9.90..60485.44 rows=1 width=64) (actual time=30.213..218.922 rows=125 loops=1)
                    Join Filter: (n.id = an.person_id)
                    ->  Nested Loop  (cost=9.47..60483.33 rows=1 width=72) (actual time=12.566..218.534 rows=107 loops=1)
                          Join Filter: (ci.role_id = rt.id)
                          ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.002..0.006 rows=1 loops=1)
                                Filter: ((role)::text = 'actress'::text)
                                Rows Removed by Filter: 11
                          ->  Nested Loop  (cost=9.47..60482.05 rows=11 width=76) (actual time=12.563..218.490 rows=107 loops=1)
                                ->  Nested Loop  (cost=9.04..58708.09 rows=957 width=57) (actual time=1.175..195.075 rows=7195 loops=1)
                                      ->  Nested Loop  (cost=8.62..54801.01 rows=2650 width=61) (actual time=1.153..155.236 rows=15119 loops=1)
                                            Join Filter: (t.id = mc.movie_id)
                                            ->  Nested Loop  (cost=8.19..45914.71 rows=2568 width=53) (actual time=1.145..140.046 rows=2568 loops=1)
                                                  ->  Nested Loop  (cost=7.76..41345.74 rows=2625 width=41) (actual time=1.139..128.475 rows=2625 loops=1)
                                                        Join Filter: (t.id = ci.movie_id)
                                                        ->  Nested Loop  (cost=7.20..21637.52 rows=495 width=25) (actual time=0.914..79.512 rows=495 loops=1)
                                                              ->  Nested Loop  (cost=6.77..6093.36 rows=9696 width=4) (actual time=0.858..42.269 rows=9696 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.015..26.702 rows=3 loops=1)
                                                                          Filter: (keyword = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                          Rows Removed by Filter: 134167
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.77..1096.83 rows=301 width=8) (actual time=0.835..4.602 rows=3232 loops=3)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=7446
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.69 rows=301 width=0) (actual time=0.446..0.446 rows=3232 loops=3)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=9696)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2010)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.80 rows=1 width=16) (actual time=0.065..0.097 rows=5 loops=495)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                              Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                              Rows Removed by Filter: 83
                                                  ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.74 rows=1 width=20) (actual time=0.004..0.004 rows=1 loops=2625)
                                                        Index Cond: (id = ci.person_role_id)
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.40 rows=5 width=8) (actual time=0.002..0.004 rows=6 loops=2568)
                                                  Index Cond: (movie_id = mk.movie_id)
                                      ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=15119)
                                            Index Cond: (id = mc.company_id)
                                            Filter: ((country_code)::text = '[us]'::text)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using name_pkey on name n  (cost=0.43..1.85 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=7195)
                                      Index Cond: (id = ci.person_id)
                                      Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                      Rows Removed by Filter: 1
                    ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.002..0.003 rows=1 loops=107)
                          Index Cond: (person_id = ci.person_id)
                          Heap Fetches: 125
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..31.93 rows=1 width=8) (actual time=0.008..0.046 rows=2 loops=125)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%201%'::text) OR (info ~~ 'USA:%201%'::text)))
                    Rows Removed by Filter: 126
Planning time: 74.075 ms
Execution time: 225.272 ms
