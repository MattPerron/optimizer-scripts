Aggregate  (cost=5527.17..5527.18 rows=1 width=192) (actual time=12.491..12.491 rows=1 loops=1)
  ->  Nested Loop  (cost=42.38..5527.15 rows=1 width=84) (actual time=0.894..12.325 rows=114 loops=1)
        Join Filter: (it1.id = mi_idx1.info_type_id)
        Rows Removed by Join Filter: 228
        ->  Nested Loop  (cost=41.95..5526.08 rows=2 width=94) (actual time=0.888..11.904 rows=121 loops=1)
              ->  Nested Loop  (cost=41.53..5524.74 rows=3 width=79) (actual time=0.884..11.492 rows=138 loops=1)
                    ->  Nested Loop  (cost=41.10..5522.92 rows=3 width=71) (actual time=0.879..11.269 rows=48 loops=1)
                          Join Filter: (t2.kind_id = kt2.id)
                          Rows Removed by Join Filter: 14
                          ->  Nested Loop  (cost=41.10..5521.56 rows=9 width=75) (actual time=0.876..11.235 rows=55 loops=1)
                                Join Filter: (kt1.id = t1.kind_id)
                                ->  Nested Loop  (cost=41.10..5519.61 rows=30 width=79) (actual time=0.869..11.195 rows=55 loops=1)
                                      ->  Nested Loop  (cost=40.67..5385.51 rows=30 width=54) (actual time=0.865..11.028 rows=55 loops=1)
                                            ->  Nested Loop  (cost=40.25..5372.21 rows=30 width=39) (actual time=0.861..10.854 rows=55 loops=1)
                                                  ->  Nested Loop  (cost=39.82..5352.86 rows=29 width=47) (actual time=0.856..10.728 rows=29 loops=1)
                                                        ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..14.12 rows=1 width=4) (actual time=0.025..0.028 rows=1 loops=1)
                                                              Filter: ((info)::text = 'rating'::text)
                                                              Rows Removed by Filter: 112
                                                        ->  Nested Loop  (cost=39.68..5338.45 rows=29 width=43) (actual time=0.830..10.690 rows=29 loops=1)
                                                              Join Filter: (ml.linked_movie_id = t2.id)
                                                              ->  Nested Loop  (cost=39.25..5304.63 rows=47 width=18) (actual time=0.816..10.511 rows=47 loops=1)
                                                                    Join Filter: (mi_idx2.info_type_id = it2.id)
                                                                    Rows Removed by Join Filter: 3033
                                                                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.015 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                                    ->  Nested Loop  (cost=39.25..5263.71 rows=3080 width=22) (actual time=0.086..10.140 rows=3080 loops=1)
                                                                          ->  Nested Loop  (cost=38.82..470.30 rows=2315 width=8) (actual time=0.079..1.145 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.003..0.008 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.072..0.369 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.058..0.058 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=2 width=14) (actual time=0.002..0.003 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.5'::text)
                                                                                Rows Removed by Filter: 1
                                                              ->  Index Scan using title_pkey on title t2  (cost=0.43..0.71 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=47)
                                                                    Index Cond: (id = mi_idx2.movie_id)
                                                                    Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                    Rows Removed by Filter: 0
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.003..0.003 rows=2 loops=29)
                                                        Index Cond: (movie_id = t2.id)
                                            ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=55)
                                                  Index Cond: (id = mc2.company_id)
                                      ->  Index Scan using title_pkey on title t1  (cost=0.43..4.47 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=55)
                                            Index Cond: (id = ml.movie_id)
                                ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=55)
                                      ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=2 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                            Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                            Rows Removed by Filter: 1
                          ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=55)
                                ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.002..0.004 rows=2 loops=1)
                                      Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                      Rows Removed by Filter: 5
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.004 rows=3 loops=48)
                          Index Cond: (movie_id = t1.id)
              ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=138)
                    Index Cond: (id = mc1.company_id)
                    Filter: ((country_code)::text <> '[us]'::text)
                    Rows Removed by Filter: 0
        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..0.50 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=121)
              Index Cond: (movie_id = t1.id)
Planning time: 86.892 ms
Execution time: 12.611 ms
