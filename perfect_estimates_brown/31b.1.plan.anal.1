Aggregate  (cost=9403.56..9403.57 rows=1 width=128) (actual time=257.013..257.013 rows=1 loops=1)
  ->  Nested Loop  (cost=3.57..9403.55 rows=1 width=82) (actual time=3.924..256.874 rows=84 loops=1)
        ->  Nested Loop  (cost=3.14..9402.20 rows=1 width=71) (actual time=3.913..256.535 rows=84 loops=1)
              ->  Nested Loop  (cost=2.72..9401.09 rows=1 width=75) (actual time=1.538..245.959 rows=2686 loops=1)
                    Join Filter: (mi.info_type_id = it1.id)
                    ->  Nested Loop  (cost=2.72..9398.66 rows=1 width=79) (actual time=1.532..235.935 rows=2686 loops=1)
                          Join Filter: (t.id = mi.movie_id)
                          ->  Nested Loop  (cost=2.28..9375.80 rows=1 width=51) (actual time=1.438..100.351 rows=1591 loops=1)
                                Join Filter: (t.id = ci.movie_id)
                                ->  Nested Loop  (cost=1.72..9342.78 rows=1 width=43) (actual time=1.355..47.390 rows=894 loops=1)
                                      Join Filter: (t.id = mk.movie_id)
                                      ->  Nested Loop  (cost=1.29..9340.19 rows=1 width=35) (actual time=1.335..46.531 rows=7 loops=1)
                                            ->  Nested Loop  (cost=0.86..9338.98 rows=1 width=14) (actual time=0.858..45.824 rows=134 loops=1)
                                                  Join Filter: (mi_idx.info_type_id = it2.id)
                                                  Rows Removed by Join Filter: 278
                                                  ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.019..0.025 rows=1 loops=1)
                                                        Filter: ((info)::text = 'votes'::text)
                                                        Rows Removed by Filter: 112
                                                  ->  Nested Loop  (cost=0.86..9336.53 rows=3 width=18) (actual time=0.837..45.734 rows=412 loops=1)
                                                        ->  Nested Loop  (cost=0.43..9331.54 rows=1 width=4) (actual time=0.824..44.328 rows=135 loops=1)
                                                              ->  Seq Scan on company_name cn  (cost=0.00..5932.46 rows=10 width=4) (actual time=0.772..39.916 rows=10 loops=1)
                                                                    Filter: (name ~~ 'Lionsgate%'::text)
                                                                    Rows Removed by Filter: 234987
                                                              ->  Index Scan using company_id_movie_companies on movie_companies mc  (cost=0.43..339.90 rows=1 width=8) (actual time=0.096..0.437 rows=14 loops=10)
                                                                    Index Cond: (company_id = cn.id)
                                                                    Filter: (note ~~ '%(Blu-ray)%'::text)
                                                                    Rows Removed by Filter: 168
                                                        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..4.96 rows=3 width=14) (actual time=0.008..0.009 rows=3 loops=135)
                                                              Index Cond: (movie_id = mc.movie_id)
                                            ->  Index Scan using title_pkey on title t  (cost=0.43..1.21 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=134)
                                                  Index Cond: (id = mi_idx.movie_id)
                                                  Filter: ((production_year > 2000) AND ((title ~~ '%Freddy%'::text) OR (title ~~ '%Jason%'::text) OR (title ~~ 'Saw%'::text)))
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..2.02 rows=46 width=8) (actual time=0.009..0.074 rows=128 loops=7)
                                            Index Cond: (movie_id = mi_idx.movie_id)
                                ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.00 rows=1 width=8) (actual time=0.043..0.058 rows=2 loops=894)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: (note = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                      Rows Removed by Filter: 86
                          ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..22.85 rows=1 width=52) (actual time=0.084..0.084 rows=2 loops=1591)
                                Index Cond: (movie_id = mk.movie_id)
                                Filter: (info = ANY ('{Horror,Thriller}'::text[]))
                                Rows Removed by Filter: 275
                    ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=2686)
                          Filter: ((info)::text = 'genres'::text)
                          Rows Removed by Filter: 2
              ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.97 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=2686)
                    Index Cond: (id = mk.keyword_id)
                    Filter: (keyword = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                    Rows Removed by Filter: 1
        ->  Index Scan using name_pkey on name n  (cost=0.43..1.35 rows=1 width=19) (actual time=0.003..0.003 rows=1 loops=84)
              Index Cond: (id = ci.person_id)
              Filter: ((gender)::text = 'm'::text)
Planning time: 44.445 ms
Execution time: 257.154 ms
