Aggregate  (cost=5442.94..5442.95 rows=1 width=192) (actual time=12.660..12.661 rows=1 loops=1)
  ->  Nested Loop  (cost=42.51..5442.92 rows=1 width=84) (actual time=0.913..12.493 rows=114 loops=1)
        ->  Nested Loop  (cost=42.09..5442.48 rows=1 width=69) (actual time=0.910..12.195 rows=114 loops=1)
              ->  Nested Loop  (cost=41.67..5442.03 rows=1 width=54) (actual time=0.905..11.799 rows=131 loops=1)
                    ->  Nested Loop  (cost=41.24..5441.42 rows=1 width=62) (actual time=0.901..11.582 rows=44 loops=1)
                          ->  Nested Loop  (cost=41.11..5441.26 rows=1 width=66) (actual time=0.898..11.484 rows=44 loops=1)
                                Join Filter: (ml.movie_id = t1.id)
                                ->  Nested Loop  (cost=40.68..5440.67 rows=1 width=41) (actual time=0.893..11.347 rows=44 loops=1)
                                      Join Filter: (it1.id = mi_idx1.info_type_id)
                                      Rows Removed by Join Filter: 88
                                      ->  Nested Loop  (cost=40.25..5407.38 rows=16 width=35) (actual time=0.887..11.165 rows=48 loops=1)
                                            Join Filter: (kt2.id = t2.kind_id)
                                            Rows Removed by Join Filter: 14
                                            ->  Nested Loop  (cost=40.25..5404.71 rows=55 width=39) (actual time=0.880..11.117 rows=55 loops=1)
                                                  Join Filter: (ml.linked_movie_id = t2.id)
                                                  ->  Nested Loop  (cost=39.82..5352.92 rows=97 width=30) (actual time=0.863..10.811 rows=97 loops=1)
                                                        Join Filter: (ml.linked_movie_id = mc2.movie_id)
                                                        ->  Nested Loop  (cost=39.39..5318.76 rows=47 width=22) (actual time=0.858..10.591 rows=47 loops=1)
                                                              Join Filter: (it2.id = mi_idx2.info_type_id)
                                                              Rows Removed by Join Filter: 3033
                                                              ->  Nested Loop  (cost=0.14..16.54 rows=1 width=8) (actual time=0.039..0.043 rows=1 loops=1)
                                                                    ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..14.12 rows=1 width=4) (actual time=0.025..0.028 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                              ->  Nested Loop  (cost=39.25..5263.71 rows=3080 width=22) (actual time=0.093..10.187 rows=3080 loops=1)
                                                                    ->  Nested Loop  (cost=38.82..470.30 rows=2315 width=8) (actual time=0.086..1.163 rows=2315 loops=1)
                                                                          ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.003..0.008 rows=2 loops=1)
                                                                                Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                Rows Removed by Filter: 16
                                                                          ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.076..0.374 rows=1158 loops=2)
                                                                                Recheck Cond: (link_type_id = lt.id)
                                                                                Heap Blocks: exact=191
                                                                                ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.061..0.061 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=2 width=14) (actual time=0.002..0.003 rows=1 loops=2315)
                                                                          Index Cond: (movie_id = ml.linked_movie_id)
                                                                          Filter: (info < '3.5'::text)
                                                                          Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.66 rows=5 width=8) (actual time=0.003..0.004 rows=2 loops=47)
                                                              Index Cond: (movie_id = mi_idx2.movie_id)
                                                  ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=97)
                                                        Index Cond: (id = mc2.movie_id)
                                                        Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                        Rows Removed by Filter: 0
                                            ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=55)
                                                  ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.004..0.006 rows=2 loops=1)
                                                        Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                        Rows Removed by Filter: 5
                                      ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..2.04 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=48)
                                            Index Cond: (movie_id = ml.movie_id)
                                ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=44)
                                      Index Cond: (id = mi_idx1.movie_id)
                          ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=44)
                                Index Cond: (id = t1.kind_id)
                                Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.004 rows=3 loops=44)
                          Index Cond: (movie_id = t1.id)
              ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=131)
                    Index Cond: (id = mc1.company_id)
                    Filter: ((country_code)::text <> '[us]'::text)
                    Rows Removed by Filter: 0
        ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=114)
              Index Cond: (id = mc2.company_id)
Planning time: 87.247 ms
Execution time: 12.779 ms
