Aggregate  (cost=22177.04..22177.05 rows=1 width=68) (actual time=0.166..0.166 rows=1 loops=1)
  ->  Hash Join  (cost=6464.17..22172.12 rows=656 width=45) (actual time=0.152..0.157 rows=3 loops=1)
        Hash Cond: (mc.company_type_id = ct.id)
        ->  Nested Loop  (cost=6463.11..22170.76 rows=28 width=49) (actual time=0.059..0.131 rows=66 loops=1)
              Join Filter: (t.id = mc.movie_id)
              ->  Nested Loop  (cost=6462.68..22168.19 rows=4 width=29) (actual time=0.050..0.067 rows=4 loops=1)
                    ->  Nested Loop  (cost=6462.25..22162.36 rows=10 width=4) (actual time=0.022..0.027 rows=10 loops=1)
                          ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=1)
                                Filter: ((info)::text = 'bottom 10 rank'::text)
                                Rows Removed by Filter: 112
                          ->  Bitmap Heap Scan on movie_info_idx mi_idx  (cost=6462.25..18709.86 rows=345009 width=8) (actual time=0.008..0.010 rows=10 loops=1)
                                Recheck Cond: (info_type_id = it.id)
                                Heap Blocks: exact=1
                                ->  Bitmap Index Scan on info_type_id_movie_info_idx  (cost=0.00..6375.99 rows=345009 width=0) (actual time=0.005..0.005 rows=10 loops=1)
                                      Index Cond: (info_type_id = it.id)
                    ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=10)
                          Index Cond: (id = mi_idx.movie_id)
                          Filter: ((production_year >= 2005) AND (production_year <= 2010))
                          Rows Removed by Filter: 1
              ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.61 rows=3 width=32) (actual time=0.004..0.012 rows=16 loops=4)
                    Index Cond: (movie_id = mi_idx.movie_id)
                    Filter: (note !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text)
                    Rows Removed by Filter: 2
        ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                    Filter: ((kind)::text = 'production companies'::text)
                    Rows Removed by Filter: 3
Planning time: 1.273 ms
Execution time: 0.253 ms
