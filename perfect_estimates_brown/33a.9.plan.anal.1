Aggregate  (cost=5505.00..5505.01 rows=1 width=192) (actual time=11.207..11.207 rows=1 loops=1)
  ->  Nested Loop  (cost=42.51..5504.99 rows=1 width=84) (actual time=0.892..11.192 rows=8 loops=1)
        Join Filter: ((ml.movie_id = t1.id) AND (kt1.id = t1.kind_id))
        ->  Nested Loop  (cost=42.08..5504.45 rows=1 width=83) (actual time=0.888..11.169 rows=8 loops=1)
              ->  Nested Loop  (cost=41.66..5504.01 rows=1 width=68) (actual time=0.884..11.143 rows=8 loops=1)
                    Join Filter: (t2.id = mc2.movie_id)
                    ->  Nested Loop  (cost=41.23..5503.27 rows=1 width=76) (actual time=0.878..11.127 rows=2 loops=1)
                          Join Filter: (kt2.id = t2.kind_id)
                          ->  Nested Loop  (cost=0.13..13.35 rows=1 width=8) (actual time=0.011..0.013 rows=1 loops=1)
                                ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..12.26 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                      Filter: ((kind)::text = 'tv series'::text)
                                      Rows Removed by Filter: 6
                                ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                      Filter: ((kind)::text = 'tv series'::text)
                                      Rows Removed by Filter: 6
                          ->  Nested Loop  (cost=41.10..5489.90 rows=2 width=76) (actual time=0.866..11.112 rows=2 loops=1)
                                Join Filter: (ml.linked_movie_id = t2.id)
                                ->  Nested Loop  (cost=40.67..5478.82 rows=15 width=51) (actual time=0.861..11.063 rows=15 loops=1)
                                      Join Filter: ((ml.movie_id = mi_idx1.movie_id) AND (it1.id = mi_idx1.info_type_id))
                                      Rows Removed by Join Filter: 30
                                      ->  Nested Loop  (cost=40.24..5470.68 rows=15 width=45) (actual time=0.856..11.003 rows=15 loops=1)
                                            ->  Nested Loop  (cost=39.82..5429.21 rows=93 width=30) (actual time=0.848..10.728 rows=93 loops=1)
                                                  ->  Nested Loop  (cost=39.39..5294.24 rows=34 width=22) (actual time=0.843..10.566 rows=34 loops=1)
                                                        ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..14.12 rows=1 width=4) (actual time=0.021..0.023 rows=1 loops=1)
                                                              Filter: ((info)::text = 'rating'::text)
                                                              Rows Removed by Filter: 112
                                                        ->  Nested Loop  (cost=39.25..5279.78 rows=34 width=18) (actual time=0.822..10.534 rows=34 loops=1)
                                                              Join Filter: (it2.id = mi_idx2.info_type_id)
                                                              Rows Removed by Join Filter: 2910
                                                              ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                                                                    Filter: ((info)::text = 'rating'::text)
                                                                    Rows Removed by Filter: 112
                                                              ->  Nested Loop  (cost=39.25..5240.56 rows=2944 width=22) (actual time=0.086..10.166 rows=2944 loops=1)
                                                                    ->  Nested Loop  (cost=38.82..470.30 rows=2315 width=8) (actual time=0.078..1.138 rows=2315 loops=1)
                                                                          ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.003..0.008 rows=2 loops=1)
                                                                                Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                Rows Removed by Filter: 16
                                                                          ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.072..0.366 rows=1158 loops=2)
                                                                                Recheck Cond: (link_type_id = lt.id)
                                                                                Heap Blocks: exact=191
                                                                                ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.058..0.058 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.002..0.003 rows=1 loops=2315)
                                                                          Index Cond: (movie_id = ml.linked_movie_id)
                                                                          Filter: (info < '3.0'::text)
                                                                          Rows Removed by Filter: 1
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..3.92 rows=5 width=8) (actual time=0.003..0.004 rows=3 loops=34)
                                                        Index Cond: (movie_id = ml.movie_id)
                                            ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=93)
                                                  Index Cond: (id = mc1.company_id)
                                                  Filter: ((country_code)::text = '[us]'::text)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..0.50 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=15)
                                            Index Cond: (movie_id = mc1.movie_id)
                                ->  Index Scan using title_pkey on title t2  (cost=0.43..0.73 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=15)
                                      Index Cond: (id = mi_idx2.movie_id)
                                      Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                      Rows Removed by Filter: 1
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.004..0.006 rows=4 loops=2)
                          Index Cond: (movie_id = mi_idx2.movie_id)
              ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=8)
                    Index Cond: (id = mc2.company_id)
        ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=8)
              Index Cond: (id = mc1.movie_id)
Planning time: 89.272 ms
Execution time: 11.327 ms
