Aggregate  (cost=5346.42..5346.43 rows=1 width=96) (actual time=18.045..18.045 rows=1 loops=1)
  ->  Nested Loop  (cost=11.18..5346.41 rows=1 width=48) (actual time=1.488..18.029 rows=15 loops=1)
        Join Filter: (it3.id = pi.info_type_id)
        Rows Removed by Join Filter: 2430
        ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.017 rows=1 loops=1)
              Filter: ((info)::text = 'height'::text)
              Rows Removed by Filter: 112
        ->  Nested Loop  (cost=11.18..5343.99 rows=1 width=52) (actual time=1.417..17.819 rows=2445 loops=1)
              Join Filter: (n.id = pi.person_id)
              ->  Nested Loop  (cost=10.75..5324.46 rows=1 width=60) (actual time=1.412..16.705 rows=15 loops=1)
                    ->  Nested Loop  (cost=10.32..5322.11 rows=1 width=41) (actual time=1.407..16.654 rows=15 loops=1)
                          ->  Nested Loop  (cost=9.89..5140.04 rows=80 width=29) (actual time=1.402..16.424 rows=80 loops=1)
                                Join Filter: (cc.subject_id = cct1.id)
                                ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                      Filter: ((kind)::text = 'cast'::text)
                                      Rows Removed by Filter: 3
                                ->  Nested Loop  (cost=9.89..5137.99 rows=80 width=33) (actual time=1.400..16.403 rows=80 loops=1)
                                      ->  Nested Loop  (cost=9.47..4977.57 rows=55 width=29) (actual time=1.394..16.186 rows=55 loops=1)
                                            Join Filter: (rt.id = ci.role_id)
                                            Rows Removed by Join Filter: 135
                                            ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                  Filter: ((role)::text = 'actress'::text)
                                                  Rows Removed by Filter: 11
                                            ->  Nested Loop  (cost=9.47..4974.05 rows=190 width=33) (actual time=1.366..16.160 rows=190 loops=1)
                                                  Join Filter: (t.id = ci.movie_id)
                                                  ->  Nested Loop  (cost=8.90..4736.19 rows=5 width=41) (actual time=1.359..15.282 rows=5 loops=1)
                                                        Join Filter: (cct2.id = cc.status_id)
                                                        ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'complete+verified'::text)
                                                              Rows Removed by Filter: 3
                                                        ->  Nested Loop  (cost=8.90..4735.08 rows=5 width=45) (actual time=1.357..15.278 rows=5 loops=1)
                                                              Join Filter: (t.id = cc.movie_id)
                                                              ->  Nested Loop  (cost=8.48..4721.08 rows=5 width=33) (actual time=1.352..15.257 rows=5 loops=1)
                                                                    ->  Nested Loop  (cost=8.06..4676.49 rows=22 width=37) (actual time=1.346..15.184 rows=22 loops=1)
                                                                          Join Filter: (t.id = mc.movie_id)
                                                                          ->  Nested Loop  (cost=7.63..4671.63 rows=1 width=29) (actual time=1.341..15.165 rows=1 loops=1)
                                                                                Join Filter: (it.id = mi.info_type_id)
                                                                                ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.004..0.013 rows=1 loops=1)
                                                                                      Filter: ((info)::text = 'release dates'::text)
                                                                                      Rows Removed by Filter: 112
                                                                                ->  Nested Loop  (cost=7.63..4669.21 rows=1 width=33) (actual time=1.336..15.152 rows=1 loops=1)
                                                                                      Join Filter: (t.id = mi.movie_id)
                                                                                      ->  Nested Loop  (cost=7.20..4627.26 rows=1 width=25) (actual time=1.314..15.023 rows=1 loops=1)
                                                                                            ->  Nested Loop  (cost=6.77..3739.98 rows=414 width=4) (actual time=0.144..13.837 rows=414 loops=1)
                                                                                                  ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.043..13.332 rows=1 loops=1)
                                                                                                        Filter: (keyword = 'computer-animation'::text)
                                                                                                        Rows Removed by Filter: 134169
                                                                                                  ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.77..1110.84 rows=301 width=8) (actual time=0.100..0.431 rows=414 loops=1)
                                                                                                        Recheck Cond: (keyword_id = k.id)
                                                                                                        Heap Blocks: exact=358
                                                                                                        ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.69 rows=301 width=0) (actual time=0.052..0.052 rows=414 loops=1)
                                                                                                              Index Cond: (keyword_id = k.id)
                                                                                            ->  Index Scan using title_pkey on title t  (cost=0.43..2.14 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=414)
                                                                                                  Index Cond: (id = mk.movie_id)
                                                                                                  Filter: ((production_year >= 2000) AND (production_year <= 2005) AND (title = 'Shrek 2'::text))
                                                                                                  Rows Removed by Filter: 1
                                                                                      ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..41.94 rows=1 width=8) (actual time=0.020..0.128 rows=1 loops=1)
                                                                                            Index Cond: (movie_id = mk.movie_id)
                                                                                            Filter: (info ~~ 'USA:%200%'::text)
                                                                                            Rows Removed by Filter: 456
                                                                          ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.79 rows=5 width=8) (actual time=0.004..0.011 rows=22 loops=1)
                                                                                Index Cond: (movie_id = mk.movie_id)
                                                                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=22)
                                                                          Index Cond: (id = mc.company_id)
                                                                          Filter: ((country_code)::text = '[us]'::text)
                                                                          Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.78 rows=2 width=12) (actual time=0.003..0.003 rows=1 loops=5)
                                                                    Index Cond: (movie_id = mk.movie_id)
                                                  ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.56 rows=1 width=16) (actual time=0.005..0.166 rows=38 loops=5)
                                                        Index Cond: (movie_id = mk.movie_id)
                                                        Filter: (note = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                        Rows Removed by Filter: 191
                                      ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.90 rows=2 width=4) (actual time=0.003..0.003 rows=1 loops=55)
                                            Index Cond: (person_id = ci.person_id)
                                            Heap Fetches: 80
                          ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.25 rows=1 width=20) (actual time=0.003..0.003 rows=0 loops=80)
                                Index Cond: (id = ci.person_role_id)
                                Filter: (name = 'Queen'::text)
                                Rows Removed by Filter: 1
                    ->  Index Scan using name_pkey on name n  (cost=0.43..2.35 rows=1 width=19) (actual time=0.003..0.003 rows=1 loops=15)
                          Index Cond: (id = ci.person_id)
                          Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
              ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.22 rows=25 width=8) (actual time=0.002..0.038 rows=163 loops=15)
                    Index Cond: (person_id = an.person_id)
Planning time: 117.543 ms
Execution time: 18.173 ms
