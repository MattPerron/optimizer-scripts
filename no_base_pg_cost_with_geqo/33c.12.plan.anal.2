Aggregate  (cost=14137.89..14137.90 rows=1 width=192) (actual time=16.057..16.057 rows=1 loops=1)
  ->  Nested Loop  (cost=40.90..14137.53 rows=24 width=84) (actual time=1.006..15.980 rows=114 loops=1)
        ->  Nested Loop  (cost=40.48..14117.46 rows=45 width=69) (actual time=1.003..15.703 rows=131 loops=1)
              ->  Nested Loop  (cost=40.05..14090.69 rows=44 width=77) (actual time=0.999..15.548 rows=44 loops=1)
                    Join Filter: (mi_idx1.info_type_id = it1.id)
                    Rows Removed by Join Filter: 88
                    ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.012 rows=1 loops=1)
                          Filter: ((info)::text = 'rating'::text)
                          Rows Removed by Filter: 112
                    ->  Nested Loop  (cost=40.05..14086.62 rows=132 width=81) (actual time=0.948..15.515 rows=132 loops=1)
                          ->  Nested Loop  (cost=39.63..14028.10 rows=132 width=66) (actual time=0.943..15.226 rows=132 loops=1)
                                ->  Nested Loop  (cost=39.20..13990.10 rows=57 width=74) (actual time=0.937..15.036 rows=57 loops=1)
                                      Join Filter: (kt1.id = t1.kind_id)
                                      ->  Nested Loop  (cost=39.20..13987.38 rows=57 width=78) (actual time=0.934..15.010 rows=57 loops=1)
                                            Join Filter: (ml.movie_id = t1.id)
                                            ->  Nested Loop  (cost=38.77..13953.73 rows=57 width=53) (actual time=0.929..14.882 rows=57 loops=1)
                                                  Join Filter: (mi_idx2.info_type_id = it2.id)
                                                  Rows Removed by Join Filter: 3135
                                                  ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                        Filter: ((info)::text = 'rating'::text)
                                                        Rows Removed by Filter: 112
                                                  ->  Nested Loop  (cost=38.77..13911.42 rows=3192 width=57) (actual time=0.090..14.580 rows=3192 loops=1)
                                                        ->  Nested Loop  (cost=38.34..12690.44 rows=2211 width=43) (actual time=0.086..9.250 rows=2211 loops=1)
                                                              ->  Nested Loop  (cost=37.92..11000.87 rows=815 width=29) (actual time=0.081..7.129 rows=815 loops=1)
                                                                    Join Filter: (kt2.id = t2.kind_id)
                                                                    Rows Removed by Join Filter: 768
                                                                    ->  Nested Loop  (cost=37.92..10972.75 rows=946 width=33) (actual time=0.068..6.642 rows=946 loops=1)
                                                                          ->  Nested Loop  (cost=37.49..612.73 rows=2315 width=8) (actual time=0.061..1.047 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.002..0.007 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=37.49..185.08 rows=1875 width=12) (actual time=0.053..0.330 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..37.02 rows=1875 width=0) (actual time=0.041..0.041 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using title_pkey on title t2  (cost=0.43..4.48 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2315)
                                                                                Index Cond: (id = ml.linked_movie_id)
                                                                                Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                                Rows Removed by Filter: 1
                                                                    ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=946)
                                                                          ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.002..0.003 rows=2 loops=1)
                                                                                Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                                                Rows Removed by Filter: 5
                                                              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..2.04 rows=3 width=14) (actual time=0.001..0.002 rows=3 loops=815)
                                                                    Index Cond: (movie_id = ml.movie_id)
                                                        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.53 rows=2 width=14) (actual time=0.001..0.002 rows=1 loops=2211)
                                                              Index Cond: (movie_id = t2.id)
                                                              Filter: (info < '3.5'::text)
                                                              Rows Removed by Filter: 1
                                            ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=57)
                                                  Index Cond: (id = mi_idx1.movie_id)
                                      ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=57)
                                            ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=2 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                  Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                  Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.002..0.003 rows=2 loops=57)
                                      Index Cond: (movie_id = t2.id)
                          ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=132)
                                Index Cond: (id = mc2.company_id)
              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=3 loops=44)
                    Index Cond: (movie_id = t1.id)
        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=131)
              Index Cond: (id = mc1.company_id)
              Filter: ((country_code)::text <> '[us]'::text)
              Rows Removed by Filter: 0
Planning time: 59.165 ms
Execution time: 16.159 ms
