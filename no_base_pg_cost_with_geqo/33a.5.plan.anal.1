Aggregate  (cost=5546.88..5546.89 rows=1 width=192) (actual time=9.590..9.590 rows=1 loops=1)
  ->  Nested Loop  (cost=41.03..5546.86 rows=1 width=84) (actual time=0.773..9.578 rows=8 loops=1)
        Join Filter: ((ml.movie_id = t1.id) AND (kt1.id = t1.kind_id))
        ->  Nested Loop  (cost=40.60..5546.33 rows=1 width=83) (actual time=0.768..9.560 rows=8 loops=1)
              Join Filter: (kt2.id = t2.kind_id)
              ->  Nested Loop  (cost=0.13..13.35 rows=1 width=8) (actual time=0.008..0.011 rows=1 loops=1)
                    ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..12.26 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                          Filter: ((kind)::text = 'tv series'::text)
                          Rows Removed by Filter: 6
                    ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=1 width=4) (actual time=0.002..0.004 rows=1 loops=1)
                          Filter: ((kind)::text = 'tv series'::text)
                          Rows Removed by Filter: 6
              ->  Nested Loop  (cost=40.47..5532.94 rows=3 width=83) (actual time=0.759..9.545 rows=8 loops=1)
                    Join Filter: (ml.linked_movie_id = t2.id)
                    ->  Nested Loop  (cost=40.04..5523.86 rows=17 width=74) (actual time=0.753..9.444 rows=38 loops=1)
                          ->  Nested Loop  (cost=39.62..5502.46 rows=48 width=59) (actual time=0.746..9.055 rows=179 loops=1)
                                Join Filter: (ml.movie_id = mc1.movie_id)
                                ->  Nested Loop  (cost=39.19..5499.19 rows=5 width=51) (actual time=0.741..8.830 rows=58 loops=1)
                                      ->  Nested Loop  (cost=38.77..5496.97 rows=5 width=36) (actual time=0.735..8.668 rows=58 loops=1)
                                            Join Filter: (ml.linked_movie_id = mc2.movie_id)
                                            ->  Nested Loop  (cost=38.34..5496.23 rows=1 width=28) (actual time=0.729..8.515 rows=30 loops=1)
                                                  Join Filter: (mi_idx1.info_type_id = it1.id)
                                                  Rows Removed by Join Filter: 60
                                                  ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                        Filter: ((info)::text = 'rating'::text)
                                                        Rows Removed by Filter: 112
                                                  ->  Nested Loop  (cost=38.34..5492.69 rows=90 width=32) (actual time=0.719..8.491 rows=90 loops=1)
                                                        ->  Nested Loop  (cost=37.91..5422.21 rows=34 width=18) (actual time=0.714..8.382 rows=34 loops=1)
                                                              Join Filter: (it2.id = mi_idx2.info_type_id)
                                                              Rows Removed by Join Filter: 2910
                                                              ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                                    Filter: ((info)::text = 'rating'::text)
                                                                    Rows Removed by Filter: 112
                                                              ->  Nested Loop  (cost=37.91..5382.99 rows=2944 width=22) (actual time=0.070..8.099 rows=2944 loops=1)
                                                                    ->  Nested Loop  (cost=37.49..612.73 rows=2315 width=8) (actual time=0.061..1.127 rows=2315 loops=1)
                                                                          ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.002..0.007 rows=2 loops=1)
                                                                                Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                Rows Removed by Filter: 16
                                                                          ->  Bitmap Heap Scan on movie_link ml  (cost=37.49..185.08 rows=1875 width=12) (actual time=0.057..0.363 rows=1158 loops=2)
                                                                                Recheck Cond: (link_type_id = lt.id)
                                                                                Heap Blocks: exact=191
                                                                                ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..37.02 rows=1875 width=0) (actual time=0.044..0.044 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.002..0.003 rows=1 loops=2315)
                                                                          Index Cond: (movie_id = ml.linked_movie_id)
                                                                          Filter: (info < '3.0'::text)
                                                                          Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..2.04 rows=3 width=14) (actual time=0.002..0.002 rows=3 loops=34)
                                                              Index Cond: (movie_id = ml.movie_id)
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.003..0.004 rows=2 loops=30)
                                                  Index Cond: (movie_id = mi_idx2.movie_id)
                                      ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=58)
                                            Index Cond: (id = mc2.company_id)
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.002..0.003 rows=3 loops=58)
                                      Index Cond: (movie_id = mi_idx1.movie_id)
                          ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=179)
                                Index Cond: (id = mc1.company_id)
                                Filter: ((country_code)::text = '[us]'::text)
                                Rows Removed by Filter: 1
                    ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=38)
                          Index Cond: (id = mc2.movie_id)
                          Filter: ((production_year >= 2005) AND (production_year <= 2008))
                          Rows Removed by Filter: 1
        ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=8)
              Index Cond: (id = mc1.movie_id)
Planning time: 61.482 ms
Execution time: 9.688 ms
