Aggregate  (cost=5503.93..5503.94 rows=1 width=192) (actual time=8.245..8.245 rows=1 loops=1)
  ->  Nested Loop  (cost=41.17..5503.91 rows=1 width=84) (actual time=0.756..8.233 rows=8 loops=1)
        ->  Nested Loop  (cost=40.75..5503.47 rows=1 width=69) (actual time=0.753..8.210 rows=8 loops=1)
              Join Filter: ((ml.movie_id = t1.id) AND (kt1.id = t1.kind_id))
              ->  Nested Loop  (cost=40.32..5499.22 rows=8 width=68) (actual time=0.748..8.190 rows=8 loops=1)
                    Join Filter: (mi_idx1.info_type_id = it1.id)
                    Rows Removed by Join Filter: 16
                    ->  Nested Loop  (cost=40.32..5496.44 rows=24 width=72) (actual time=0.734..8.169 rows=24 loops=1)
                          ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..12.26 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                                Filter: ((kind)::text = 'tv series'::text)
                                Rows Removed by Filter: 6
                          ->  Nested Loop  (cost=40.18..5483.95 rows=24 width=68) (actual time=0.728..8.156 rows=24 loops=1)
                                Join Filter: (ml.movie_id = mi_idx1.movie_id)
                                ->  Nested Loop  (cost=39.76..5479.66 rows=8 width=54) (actual time=0.723..8.128 rows=8 loops=1)
                                      Join Filter: (t2.id = mc2.movie_id)
                                      ->  Nested Loop  (cost=39.33..5478.19 rows=2 width=62) (actual time=0.719..8.116 rows=2 loops=1)
                                            ->  Nested Loop  (cost=39.19..5477.86 rows=2 width=66) (actual time=0.715..8.111 rows=2 loops=1)
                                                  ->  Nested Loop  (cost=38.77..5471.17 rows=15 width=51) (actual time=0.706..8.061 rows=15 loops=1)
                                                        ->  Nested Loop  (cost=38.34..5447.35 rows=6 width=43) (actual time=0.700..8.024 rows=6 loops=1)
                                                              Join Filter: (ml.linked_movie_id = t2.id)
                                                              ->  Nested Loop  (cost=37.91..5422.21 rows=34 width=18) (actual time=0.694..7.894 rows=34 loops=1)
                                                                    Join Filter: (mi_idx2.info_type_id = it2.id)
                                                                    Rows Removed by Join Filter: 2910
                                                                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                                    ->  Nested Loop  (cost=37.91..5382.99 rows=2944 width=22) (actual time=0.069..7.617 rows=2944 loops=1)
                                                                          ->  Nested Loop  (cost=37.49..612.73 rows=2315 width=8) (actual time=0.061..1.067 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.002..0.007 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=37.49..185.08 rows=1875 width=12) (actual time=0.059..0.337 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..37.02 rows=1875 width=0) (actual time=0.047..0.047 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.0'::text)
                                                                                Rows Removed by Filter: 1
                                                              ->  Index Scan using title_pkey on title t2  (cost=0.43..0.73 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=34)
                                                                    Index Cond: (id = mi_idx2.movie_id)
                                                                    Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..3.92 rows=5 width=8) (actual time=0.004..0.005 rows=2 loops=6)
                                                              Index Cond: (movie_id = ml.movie_id)
                                                  ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=15)
                                                        Index Cond: (id = mc1.company_id)
                                                        Filter: ((country_code)::text = '[us]'::text)
                                                        Rows Removed by Filter: 1
                                            ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=2)
                                                  Index Cond: (id = t2.kind_id)
                                                  Filter: ((kind)::text = 'tv series'::text)
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=2)
                                            Index Cond: (movie_id = mi_idx2.movie_id)
                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..0.50 rows=3 width=14) (actual time=0.002..0.002 rows=3 loops=8)
                                      Index Cond: (movie_id = mc1.movie_id)
                    ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.001 rows=1 loops=24)
                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                Filter: ((info)::text = 'rating'::text)
                                Rows Removed by Filter: 112
              ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=8)
                    Index Cond: (id = mc1.movie_id)
        ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=8)
              Index Cond: (id = mc2.company_id)
Planning time: 60.833 ms
Execution time: 8.347 ms
