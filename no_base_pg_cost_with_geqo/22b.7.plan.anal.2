Aggregate  (cost=27766.06..27766.07 rows=1 width=96) (actual time=185.664..185.664 rows=1 loops=1)
  ->  Nested Loop  (cost=8.88..27766.06 rows=1 width=42) (actual time=6.388..185.625 rows=31 loops=1)
        ->  Nested Loop  (cost=8.46..27761.66 rows=8 width=27) (actual time=6.379..185.429 rows=39 loops=1)
              Join Filter: (mi.info_type_id = it1.id)
              Rows Removed by Join Filter: 3
              ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.015 rows=1 loops=1)
                    Filter: ((info)::text = 'countries'::text)
                    Rows Removed by Filter: 112
              ->  Nested Loop  (cost=8.46..27712.61 rows=3731 width=31) (actual time=6.370..185.395 rows=42 loops=1)
                    Join Filter: (t.id = mi.movie_id)
                    ->  Nested Loop  (cost=8.03..27667.32 rows=29 width=43) (actual time=6.342..183.324 rows=78 loops=1)
                          Join Filter: (mc.company_type_id = ct.id)
                          ->  Nested Loop  (cost=8.03..27662.31 rows=78 width=47) (actual time=6.335..183.269 rows=78 loops=1)
                                Join Filter: (mi_idx.info_type_id = it2.id)
                                Rows Removed by Join Filter: 168
                                ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                                      Filter: ((info)::text = 'rating'::text)
                                      Rows Removed by Filter: 112
                                ->  Nested Loop  (cost=8.03..27656.83 rows=246 width=51) (actual time=6.324..183.209 rows=246 loops=1)
                                      Join Filter: (t.id = mi_idx.movie_id)
                                      ->  Nested Loop  (cost=7.60..27605.97 rows=95 width=37) (actual time=6.313..182.600 rows=95 loops=1)
                                            Join Filter: (t.id = mc.movie_id)
                                            ->  Nested Loop  (cost=7.17..25573.34 rows=3517 width=25) (actual time=2.769..160.424 rows=3517 loops=1)
                                                  Join Filter: (t.kind_id = kt.id)
                                                  Rows Removed by Join Filter: 1618
                                                  ->  Nested Loop  (cost=7.17..25456.82 rows=4040 width=29) (actual time=2.747..158.751 rows=4040 loops=1)
                                                        ->  Nested Loop  (cost=6.74..7290.41 rows=37091 width=4) (actual time=2.721..62.289 rows=37091 loops=1)
                                                              ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.826..15.538 rows=3 loops=1)
                                                                    Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                    Rows Removed by Filter: 134167
                                                              ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.74..1079.23 rows=298 width=8) (actual time=2.290..13.693 rows=12364 loops=3)
                                                                    Recheck Cond: (keyword_id = k.id)
                                                                    Heap Blocks: exact=26312
                                                                    ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=298 width=0) (actual time=1.191..1.191 rows=12364 loops=3)
                                                                          Index Cond: (keyword_id = k.id)
                                                        ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=37091)
                                                              Index Cond: (id = mk.movie_id)
                                                              Filter: (production_year > 2009)
                                                              Rows Removed by Filter: 1
                                                  ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=4040)
                                                        ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.006..0.008 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                              Rows Removed by Filter: 5
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.006..0.006 rows=0 loops=3517)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                                  Rows Removed by Filter: 8
                                      ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.004..0.005 rows=3 loops=95)
                                            Index Cond: (movie_id = mk.movie_id)
                                            Filter: (info < '7.0'::text)
                                            Rows Removed by Filter: 0
                          ->  Materialize  (cost=0.00..1.06 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=78)
                                ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                    ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.54 rows=2 width=8) (actual time=0.024..0.026 rows=1 loops=78)
                          Index Cond: (movie_id = mk.movie_id)
                          Filter: (info = ANY ('{Germany,German,USA,American}'::text[]))
                          Rows Removed by Filter: 49
        ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=39)
              Index Cond: (id = mc.company_id)
              Filter: ((country_code)::text <> '[us]'::text)
              Rows Removed by Filter: 0
Planning time: 20.478 ms
Execution time: 185.777 ms
