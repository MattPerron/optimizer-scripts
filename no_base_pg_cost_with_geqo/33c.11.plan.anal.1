Aggregate  (cost=15302.22..15302.23 rows=1 width=192) (actual time=56.546..56.546 rows=1 loops=1)
  ->  Nested Loop  (cost=7720.75..15301.91 rows=21 width=84) (actual time=20.883..56.461 rows=114 loops=1)
        ->  Nested Loop  (cost=7720.33..15284.52 rows=39 width=69) (actual time=20.877..56.188 rows=131 loops=1)
              ->  Nested Loop  (cost=7719.90..15261.39 rows=38 width=77) (actual time=20.872..56.033 rows=44 loops=1)
                    Join Filter: (mi_idx2.info_type_id = it2.id)
                    Rows Removed by Join Filter: 4270
                    ->  Nested Loop  (cost=7719.90..15194.27 rows=4314 width=81) (actual time=16.816..54.413 rows=4314 loops=1)
                          Join Filter: (t1.kind_id = kt1.id)
                          Rows Removed by Join Filter: 3078
                          ->  Nested Loop  (cost=7719.90..15069.91 rows=4314 width=85) (actual time=16.810..52.429 rows=4314 loops=1)
                                Join Filter: (ml.movie_id = t1.id)
                                ->  Nested Loop  (cost=7719.47..12522.92 rows=4314 width=60) (actual time=16.805..45.401 rows=4314 loops=1)
                                      ->  Nested Loop  (cost=7719.05..10610.12 rows=4314 width=45) (actual time=16.798..37.682 rows=4314 loops=1)
                                            ->  Nested Loop  (cost=7718.62..9900.95 rows=1064 width=53) (actual time=16.790..33.916 rows=1064 loops=1)
                                                  Join Filter: (mi_idx1.info_type_id = it1.id)
                                                  Rows Removed by Join Filter: 2128
                                                  ->  Merge Join  (cost=7718.62..9850.66 rows=3192 width=57) (actual time=16.769..32.773 rows=3192 loops=1)
                                                        Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43804.18 rows=1380035 width=14) (actual time=0.007..9.403 rows=63901 loops=1)
                                                        ->  Sort  (cost=7718.20..7721.02 rows=1130 width=43) (actual time=16.574..16.814 rows=3258 loops=1)
                                                              Sort Key: ml.movie_id
                                                              Sort Method: quicksort  Memory: 172kB
                                                              ->  Nested Loop  (cost=38.34..7660.89 rows=1130 width=43) (actual time=0.103..16.209 rows=1130 loops=1)
                                                                    Join Filter: (kt2.id = t2.kind_id)
                                                                    Rows Removed by Join Filter: 1112
                                                                    ->  Nested Loop  (cost=38.34..7622.14 rows=1318 width=47) (actual time=0.079..15.560 rows=1318 loops=1)
                                                                          Join Filter: (ml.linked_movie_id = t2.id)
                                                                          ->  Nested Loop  (cost=37.91..5406.14 rows=3080 width=22) (actual time=0.072..8.347 rows=3080 loops=1)
                                                                                ->  Nested Loop  (cost=37.49..612.73 rows=2315 width=8) (actual time=0.064..1.164 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.004..0.010 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Bitmap Heap Scan on movie_link ml  (cost=37.49..185.08 rows=1875 width=12) (actual time=0.057..0.369 rows=1158 loops=2)
                                                                                            Recheck Cond: (link_type_id = lt.id)
                                                                                            Heap Blocks: exact=191
                                                                                            ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..37.02 rows=1875 width=0) (actual time=0.044..0.044 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=2 width=14) (actual time=0.002..0.003 rows=1 loops=2315)
                                                                                      Index Cond: (movie_id = ml.linked_movie_id)
                                                                                      Filter: (info < '3.5'::text)
                                                                                      Rows Removed by Filter: 1
                                                                          ->  Index Scan using title_pkey on title t2  (cost=0.43..0.71 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=3080)
                                                                                Index Cond: (id = mi_idx2.movie_id)
                                                                                Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                                Rows Removed by Filter: 1
                                                                    ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=1318)
                                                                          ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.002..0.003 rows=2 loops=1)
                                                                                Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                                                Rows Removed by Filter: 5
                                                  ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=3192)
                                                        ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                              Filter: ((info)::text = 'rating'::text)
                                                              Rows Removed by Filter: 112
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.002..0.003 rows=4 loops=1064)
                                                  Index Cond: (movie_id = t2.id)
                                      ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=4314)
                                            Index Cond: (id = mc2.company_id)
                                ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=4314)
                                      Index Cond: (id = mi_idx1.movie_id)
                          ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=4314)
                                ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=2 width=4) (actual time=0.004..0.007 rows=2 loops=1)
                                      Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                      Rows Removed by Filter: 5
                    ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=4314)
                          ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                Filter: ((info)::text = 'rating'::text)
                                Rows Removed by Filter: 112
              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=3 loops=44)
                    Index Cond: (movie_id = t1.id)
        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=131)
              Index Cond: (id = mc1.company_id)
              Filter: ((country_code)::text <> '[us]'::text)
              Rows Removed by Filter: 0
Planning time: 58.592 ms
Execution time: 56.658 ms
