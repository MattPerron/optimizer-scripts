Aggregate  (cost=4068.00..4068.01 rows=1 width=96) (actual time=16.636..16.637 rows=1 loops=1)
  ->  Nested Loop  (cost=377.61..4063.82 rows=558 width=48) (actual time=2.478..16.410 rows=743 loops=1)
        Join Filter: (ml.movie_id = t.id)
        ->  Nested Loop  (cost=377.18..3688.77 rows=743 width=51) (actual time=2.472..15.275 rows=743 loops=1)
              Join Filter: (ml.movie_id = mi.movie_id)
              ->  Nested Loop  (cost=376.74..3373.93 rows=172 width=47) (actual time=2.459..13.584 rows=172 loops=1)
                    Join Filter: (cc.subject_id = cct1.id)
                    Rows Removed by Join Filter: 57
                    ->  Nested Loop  (cost=376.74..3369.44 rows=229 width=51) (actual time=2.457..13.502 rows=229 loops=1)
                          Join Filter: (ct.id = mc.company_type_id)
                          Rows Removed by Join Filter: 19
                          ->  Nested Loop  (cost=376.74..3364.67 rows=248 width=55) (actual time=2.453..13.411 rows=248 loops=1)
                                ->  Nested Loop  (cost=376.32..3099.06 rows=581 width=40) (actual time=1.877..12.377 rows=581 loops=1)
                                      Join Filter: (ml.movie_id = mc.movie_id)
                                      ->  Nested Loop  (cost=375.89..3042.42 rows=98 width=28) (actual time=1.869..11.942 rows=98 loops=1)
                                            ->  Nested Loop  (cost=375.47..1483.82 rows=3532 width=32) (actual time=1.715..6.254 rows=3532 loops=1)
                                                  Join Filter: (ml.movie_id = mk.movie_id)
                                                  ->  Nested Loop  (cost=375.04..737.50 rows=257 width=24) (actual time=1.708..4.483 rows=257 loops=1)
                                                        Join Filter: (cc.status_id = cct2.id)
                                                        Rows Removed by Join Filter: 68
                                                        ->  Merge Join  (cost=375.04..732.59 rows=257 width=28) (actual time=1.703..4.378 rows=257 loops=1)
                                                              Merge Cond: (cc.movie_id = ml.movie_id)
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6332.07 rows=135086 width=12) (actual time=0.006..1.881 rows=5993 loops=1)
                                                              ->  Sort  (cost=374.60..380.39 rows=2315 width=16) (actual time=1.477..1.641 rows=2341 loops=1)
                                                                    Sort Key: ml.movie_id
                                                                    Sort Method: quicksort  Memory: 205kB
                                                                    ->  Nested Loop  (cost=38.82..245.23 rows=2315 width=16) (actual time=0.065..0.967 rows=2315 loops=1)
                                                                          ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=16) (actual time=0.003..0.006 rows=2 loops=1)
                                                                                Filter: ((link)::text ~~ '%follow%'::text)
                                                                                Rows Removed by Filter: 16
                                                                          ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.057..0.293 rows=1158 loops=2)
                                                                                Recheck Cond: (link_type_id = lt.id)
                                                                                Heap Blocks: exact=191
                                                                                ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.045..0.045 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                        ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=257)
                                                              ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=2 loops=1)
                                                                    Filter: ((kind)::text ~~ 'complete%'::text)
                                                                    Rows Removed by Filter: 2
                                                  ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..2.33 rows=46 width=8) (actual time=0.002..0.004 rows=14 loops=257)
                                                        Index Cond: (movie_id = cc.movie_id)
                                            ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=3532)
                                                  Index Cond: (id = mk.keyword_id)
                                                  Filter: (keyword = 'sequel'::text)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.002..0.003 rows=6 loops=98)
                                            Index Cond: (movie_id = mk.movie_id)
                                            Filter: (note IS NULL)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.001..0.001 rows=0 loops=581)
                                      Index Cond: (id = mc.company_id)
                                      Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                                      Rows Removed by Filter: 1
                          ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=248)
                                ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                      Filter: ((kind)::text = 'production companies'::text)
                                      Rows Removed by Filter: 3
                    ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=229)
                          ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                Filter: ((kind)::text = 'cast'::text)
                                Rows Removed by Filter: 3
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.79 rows=3 width=4) (actual time=0.007..0.009 rows=4 loops=172)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
                    Rows Removed by Filter: 15
        ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=743)
              Index Cond: (id = mk.movie_id)
              Filter: ((production_year >= 1950) AND (production_year <= 2010))
Planning time: 46.111 ms
Execution time: 16.728 ms
