Aggregate  (cost=48411.01..48411.02 rows=1 width=96) (actual time=88.814..88.814 rows=1 loops=1)
  ->  Nested Loop  (cost=11.16..48410.99 rows=2 width=48) (actual time=15.426..84.887 rows=16308 loops=1)
        Join Filter: (it3.id = pi.info_type_id)
        Rows Removed by Join Filter: 51519
        ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.013 rows=1 loops=1)
              Filter: ((info)::text = 'trivia'::text)
              Rows Removed by Filter: 112
        ->  Nested Loop  (cost=11.16..48405.80 rows=222 width=52) (actual time=15.374..78.669 rows=67827 loops=1)
              Join Filter: (n.id = pi.person_id)
              ->  Nested Loop  (cost=10.73..42306.30 rows=312 width=60) (actual time=15.362..56.139 rows=189 loops=1)
                    ->  Nested Loop  (cost=10.31..40567.42 rows=858 width=64) (actual time=15.336..54.599 rows=858 loops=1)
                          Join Filter: (t.id = mc.movie_id)
                          ->  Nested Loop  (cost=9.88..40406.79 rows=33 width=80) (actual time=15.327..54.213 rows=33 loops=1)
                                Join Filter: (cc.status_id = cct2.id)
                                Rows Removed by Join Filter: 57
                                ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                      Filter: ((kind)::text = 'complete+verified'::text)
                                      Rows Removed by Filter: 3
                                ->  Nested Loop  (cost=9.88..40404.62 rows=90 width=84) (actual time=2.575..54.193 rows=90 loops=1)
                                      ->  Nested Loop  (cost=9.45..40162.41 rows=108 width=72) (actual time=2.567..53.952 rows=108 loops=1)
                                            Join Filter: (mi.movie_id = t.id)
                                            ->  Nested Loop  (cost=9.02..39921.56 rows=112 width=51) (actual time=2.559..53.662 rows=112 loops=1)
                                                  Join Filter: (mi.info_type_id = it.id)
                                                  ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.009 rows=1 loops=1)
                                                        Filter: ((info)::text = 'release dates'::text)
                                                        Rows Removed by Filter: 112
                                                  ->  Nested Loop  (cost=9.02..39917.75 rows=112 width=55) (actual time=2.555..53.623 rows=112 loops=1)
                                                        ->  Nested Loop  (cost=8.59..33280.76 rows=2842 width=36) (actual time=2.449..47.724 rows=2842 loops=1)
                                                              ->  Nested Loop  (cost=8.16..31396.47 rows=1465 width=32) (actual time=2.435..43.845 rows=1465 loops=1)
                                                                    Join Filter: (cc.subject_id = cct1.id)
                                                                    Rows Removed by Join Filter: 141
                                                                    ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                          Filter: ((kind)::text = 'cast'::text)
                                                                          Rows Removed by Filter: 3
                                                                    ->  Nested Loop  (cost=8.16..31375.34 rows=1606 width=36) (actual time=2.434..43.514 rows=1606 loops=1)
                                                                          Join Filter: (rt.id = ci.role_id)
                                                                          Rows Removed by Join Filter: 4347
                                                                          ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.002..0.004 rows=1 loops=1)
                                                                                Filter: ((role)::text = 'actress'::text)
                                                                                Rows Removed by Filter: 11
                                                                          ->  Nested Loop  (cost=8.16..31299.78 rows=5953 width=40) (actual time=2.370..42.765 rows=5953 loops=1)
                                                                                Join Filter: (mi.movie_id = ci.movie_id)
                                                                                ->  Nested Loop  (cost=7.60..22208.28 rows=196 width=24) (actual time=1.481..22.195 rows=196 loops=1)
                                                                                      ->  Nested Loop  (cost=7.18..21163.50 rows=374 width=12) (actual time=0.348..21.259 rows=374 loops=1)
                                                                                            ->  Nested Loop  (cost=6.74..3729.38 rows=414 width=4) (actual time=0.110..9.074 rows=414 loops=1)
                                                                                                  ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.028..8.405 rows=1 loops=1)
                                                                                                        Filter: (keyword = 'computer-animation'::text)
                                                                                                        Rows Removed by Filter: 134169
                                                                                                  ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.74..1100.27 rows=298 width=8) (actual time=0.080..0.597 rows=414 loops=1)
                                                                                                        Recheck Cond: (keyword_id = k.id)
                                                                                                        Heap Blocks: exact=358
                                                                                                        ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=298 width=0) (actual time=0.043..0.043 rows=414 loops=1)
                                                                                                              Index Cond: (keyword_id = k.id)
                                                                                            ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.09 rows=2 width=8) (actual time=0.014..0.029 rows=1 loops=414)
                                                                                                  Index Cond: (movie_id = mk.movie_id)
                                                                                                  Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%200%'::text) OR (info ~~ 'USA:%200%'::text)))
                                                                                                  Rows Removed by Filter: 70
                                                                                      ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=374)
                                                                                            Index Cond: (movie_id = mi.movie_id)
                                                                                ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..46.37 rows=1 width=16) (actual time=0.009..0.098 rows=30 loops=196)
                                                                                      Index Cond: (movie_id = mk.movie_id)
                                                                                      Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                      Rows Removed by Filter: 133
                                                              ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.27 rows=2 width=4) (actual time=0.002..0.002 rows=2 loops=1465)
                                                                    Index Cond: (person_id = ci.person_id)
                                                                    Heap Fetches: 0
                                                        ->  Index Scan using name_pkey on name n  (cost=0.43..2.34 rows=1 width=19) (actual time=0.002..0.002 rows=0 loops=2842)
                                                              Index Cond: (id = ci.person_id)
                                                              Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                              Rows Removed by Filter: 1
                                            ->  Index Scan using title_pkey on title t  (cost=0.43..2.14 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=112)
                                                  Index Cond: (id = mk.movie_id)
                                                  Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                  Rows Removed by Filter: 0
                                      ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.24 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=108)
                                            Index Cond: (id = ci.person_role_id)
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.80 rows=5 width=8) (actual time=0.002..0.006 rows=26 loops=33)
                                Index Cond: (movie_id = mk.movie_id)
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=858)
                          Index Cond: (id = mc.company_id)
                          Filter: ((country_code)::text = '[us]'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.24 rows=25 width=8) (actual time=0.003..0.056 rows=359 loops=189)
                    Index Cond: (person_id = an.person_id)
Planning time: 77.403 ms
Execution time: 88.943 ms
