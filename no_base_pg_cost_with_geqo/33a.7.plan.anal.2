Aggregate  (cost=5906.93..5906.94 rows=1 width=192) (actual time=9.204..9.204 rows=1 loops=1)
  ->  Nested Loop  (cost=41.18..5906.91 rows=1 width=84) (actual time=0.825..9.192 rows=8 loops=1)
        ->  Nested Loop  (cost=41.03..5906.73 rows=1 width=88) (actual time=0.749..9.162 rows=24 loops=1)
              ->  Nested Loop  (cost=40.90..5905.81 rows=6 width=92) (actual time=0.747..9.131 rows=24 loops=1)
                    Join Filter: (kt2.id = t2.kind_id)
                    ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                          Filter: ((kind)::text = 'tv series'::text)
                          Rows Removed by Filter: 6
                    ->  Nested Loop  (cost=40.90..5904.17 rows=44 width=96) (actual time=0.742..9.119 rows=24 loops=1)
                          Join Filter: (ml.linked_movie_id = t2.id)
                          ->  Nested Loop  (cost=40.47..5772.81 rows=246 width=87) (actual time=0.737..8.901 rows=114 loops=1)
                                ->  Nested Loop  (cost=40.05..5663.74 rows=246 width=72) (actual time=0.734..8.677 rows=114 loops=1)
                                      Join Filter: (ml.linked_movie_id = mc2.movie_id)
                                      ->  Nested Loop  (cost=39.62..5630.51 rows=45 width=64) (actual time=0.729..8.530 rows=45 loops=1)
                                            Join Filter: (ml.movie_id = t1.id)
                                            ->  Nested Loop  (cost=39.19..5606.71 rows=45 width=55) (actual time=0.723..8.434 rows=45 loops=1)
                                                  Join Filter: (ml.movie_id = mi_idx1.movie_id)
                                                  ->  Nested Loop  (cost=38.76..5598.68 rows=15 width=41) (actual time=0.718..8.380 rows=15 loops=1)
                                                        ->  Nested Loop  (cost=38.34..5557.21 rows=93 width=26) (actual time=0.708..8.147 rows=93 loops=1)
                                                              ->  Nested Loop  (cost=37.91..5422.21 rows=34 width=18) (actual time=0.701..7.999 rows=34 loops=1)
                                                                    Join Filter: (it2.id = mi_idx2.info_type_id)
                                                                    Rows Removed by Join Filter: 2910
                                                                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                                    ->  Nested Loop  (cost=37.91..5382.99 rows=2944 width=22) (actual time=0.070..7.728 rows=2944 loops=1)
                                                                          ->  Nested Loop  (cost=37.49..612.73 rows=2315 width=8) (actual time=0.061..1.087 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.002..0.007 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=37.49..185.08 rows=1875 width=12) (actual time=0.055..0.342 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..37.02 rows=1875 width=0) (actual time=0.043..0.043 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.0'::text)
                                                                                Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..3.92 rows=5 width=8) (actual time=0.003..0.004 rows=3 loops=34)
                                                                    Index Cond: (movie_id = ml.movie_id)
                                                        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=93)
                                                              Index Cond: (id = mc1.company_id)
                                                              Filter: ((country_code)::text = '[us]'::text)
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..0.50 rows=3 width=14) (actual time=0.002..0.002 rows=3 loops=15)
                                                        Index Cond: (movie_id = mc1.movie_id)
                                            ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=45)
                                                  Index Cond: (id = mc1.movie_id)
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.002..0.002 rows=3 loops=45)
                                            Index Cond: (movie_id = mi_idx2.movie_id)
                                ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=114)
                                      Index Cond: (id = mc2.company_id)
                          ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=114)
                                Index Cond: (id = mc2.movie_id)
                                Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                Rows Removed by Filter: 1
              ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=24)
                    Index Cond: (id = t1.kind_id)
                    Filter: ((kind)::text = 'tv series'::text)
        ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=24)
              Index Cond: (id = mi_idx1.info_type_id)
              Filter: ((info)::text = 'rating'::text)
              Rows Removed by Filter: 1
Planning time: 61.174 ms
Execution time: 9.304 ms
