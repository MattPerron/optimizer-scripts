Aggregate  (cost=50488.15..50488.16 rows=1 width=128) (actual time=728.438..728.438 rows=1 loops=1)
  ->  Nested Loop  (cost=3780.80..50488.14 rows=1 width=80) (actual time=45.584..727.816 rows=757 loops=1)
        ->  Nested Loop  (cost=3780.37..50487.06 rows=1 width=69) (actual time=45.574..722.971 rows=1021 loops=1)
              Join Filter: (t.id = ci.movie_id)
              ->  Nested Loop  (cost=3779.80..50458.74 rows=1 width=85) (actual time=45.419..579.189 rows=1161 loops=1)
                    ->  Nested Loop  (cost=3779.67..50458.57 rows=1 width=89) (actual time=45.413..577.454 rows=1161 loops=1)
                          ->  Nested Loop  (cost=3779.53..50457.90 rows=4 width=93) (actual time=45.407..575.633 rows=1161 loops=1)
                                Join Filter: (t.id = mi.movie_id)
                                ->  Hash Join  (cost=3779.10..48163.01 rows=130 width=43) (actual time=43.066..433.168 rows=2023 loops=1)
                                      Hash Cond: (cc.status_id = cct2.id)
                                      ->  Nested Loop  (cost=3778.03..48156.53 rows=520 width=47) (actual time=43.008..431.848 rows=6946 loops=1)
                                            Join Filter: (mi_idx.movie_id = t.id)
                                            ->  Nested Loop  (cost=3777.60..47340.22 rows=947 width=26) (actual time=42.819..332.526 rows=35346 loops=1)
                                                  Join Filter: (it2.id = mi_idx.info_type_id)
                                                  Rows Removed by Join Filter: 71655
                                                  ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                                        Filter: ((info)::text = 'votes'::text)
                                                        Rows Removed by Filter: 112
                                                  ->  Nested Loop  (cost=3777.60..46000.30 rows=107001 width=30) (actual time=42.808..318.562 rows=107001 loops=1)
                                                        ->  Hash Join  (cost=3777.18..16798.27 rows=36010 width=16) (actual time=42.794..188.988 rows=36010 loops=1)
                                                              Hash Cond: (mk.movie_id = cc.movie_id)
                                                              ->  Nested Loop  (cost=6.74..10917.30 rows=76714 width=4) (actual time=2.989..120.903 rows=76714 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..3464.69 rows=7 width=4) (actual time=0.641..20.999 rows=7 loops=1)
                                                                          Filter: (keyword = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                          Rows Removed by Filter: 134163
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.74..1061.68 rows=298 width=8) (actual time=2.031..12.479 rows=10959 loops=7)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=53234
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=298 width=0) (actual time=1.044..1.044 rows=10959 loops=7)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Hash  (cost=2081.86..2081.86 rows=135086 width=12) (actual time=39.484..39.484 rows=135086 loops=1)
                                                                    Buckets: 262144  Batches: 1  Memory Usage: 7853kB
                                                                    ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.006..17.938 rows=135086 loops=1)
                                                        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=36010)
                                                              Index Cond: (movie_id = mk.movie_id)
                                            ->  Index Scan using title_pkey on title t  (cost=0.43..0.85 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=35346)
                                                  Index Cond: (id = mk.movie_id)
                                                  Filter: (production_year > 2000)
                                                  Rows Removed by Filter: 1
                                      ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                            ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'complete+verified'::text)
                                                  Rows Removed by Filter: 3
                                ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..17.64 rows=1 width=50) (actual time=0.070..0.070 rows=1 loops=2023)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: (info = ANY ('{Horror,Thriller}'::text[]))
                                      Rows Removed by Filter: 224
                          ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1161)
                                Index Cond: (id = mi.info_type_id)
                                Filter: ((info)::text = 'genres'::text)
                    ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1161)
                          Index Cond: (id = cc.subject_id)
                          Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
              ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.31 rows=1 width=8) (actual time=0.079..0.123 rows=1 loops=1161)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (note = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                    Rows Removed by Filter: 126
        ->  Index Scan using name_pkey on name n  (cost=0.43..1.08 rows=1 width=19) (actual time=0.004..0.004 rows=1 loops=1021)
              Index Cond: (id = ci.person_id)
              Filter: ((gender)::text = 'm'::text)
              Rows Removed by Filter: 0
Planning time: 47.757 ms
Execution time: 728.559 ms
