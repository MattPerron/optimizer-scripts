Aggregate  (cost=7581.02..7581.03 rows=1 width=192) (actual time=29.461..29.461 rows=1 loops=1)
  ->  Nested Loop  (cost=5188.40..7581.01 rows=1 width=84) (actual time=11.541..29.449 rows=4 loops=1)
        ->  Nested Loop  (cost=5187.98..7580.56 rows=1 width=69) (actual time=11.537..29.411 rows=14 loops=1)
              ->  Nested Loop  (cost=5187.55..7579.95 rows=1 width=77) (actual time=11.532..29.386 rows=6 loops=1)
                    ->  Nested Loop  (cost=5187.41..7579.78 rows=1 width=81) (actual time=11.526..29.373 rows=6 loops=1)
                          Join Filter: (ml.linked_movie_id = t2.id)
                          ->  Nested Loop  (cost=5186.98..7577.12 rows=5 width=72) (actual time=11.520..29.233 rows=54 loops=1)
                                ->  Nested Loop  (cost=5186.56..7574.90 rows=5 width=57) (actual time=11.513..29.069 rows=54 loops=1)
                                      Join Filter: (ml.linked_movie_id = mc2.movie_id)
                                      ->  Nested Loop  (cost=5186.13..7574.17 rows=1 width=49) (actual time=11.505..28.934 rows=28 loops=1)
                                            ->  Nested Loop  (cost=5185.99..7572.36 rows=11 width=53) (actual time=11.489..28.838 rows=84 loops=1)
                                                  Join Filter: (kt1.id = t1.kind_id)
                                                  Rows Removed by Join Filter: 6
                                                  ->  Nested Loop  (cost=5185.99..7570.16 rows=74 width=57) (actual time=11.483..28.799 rows=90 loops=1)
                                                        Join Filter: (ml.movie_id = t1.id)
                                                        ->  Nested Loop  (cost=5185.56..7526.47 rows=74 width=32) (actual time=11.474..28.596 rows=90 loops=1)
                                                              Join Filter: (mi_idx2.info_type_id = it2.id)
                                                              Rows Removed by Join Filter: 8268
                                                              ->  Merge Join  (cost=5185.56..7398.68 rows=8358 width=36) (actual time=8.679..25.733 rows=8358 loops=1)
                                                                    Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43804.18 rows=1380035 width=14) (actual time=0.007..9.150 rows=63901 loops=1)
                                                                    ->  Sort  (cost=5185.12..5192.48 rows=2944 width=22) (actual time=8.643..9.206 rows=8516 loops=1)
                                                                          Sort Key: ml.movie_id
                                                                          Sort Method: quicksort  Memory: 327kB
                                                                          ->  Nested Loop  (cost=39.25..5015.50 rows=2944 width=22) (actual time=0.072..7.871 rows=2944 loops=1)
                                                                                ->  Nested Loop  (cost=38.82..245.23 rows=2315 width=8) (actual time=0.063..1.113 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.003..0.009 rows=2 loops=1)
                                                                                            Filter: ((link)::text ~~ '%follow%'::text)
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=12) (actual time=0.056..0.352 rows=1158 loops=2)
                                                                                            Recheck Cond: (link_type_id = lt.id)
                                                                                            Heap Blocks: exact=191
                                                                                            ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.044..0.044 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=2315)
                                                                                      Index Cond: (movie_id = ml.linked_movie_id)
                                                                                      Filter: (info < '3.0'::text)
                                                                                      Rows Removed by Filter: 1
                                                              ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=8358)
                                                                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                        ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=90)
                                                              Index Cond: (id = mi_idx1.movie_id)
                                                  ->  Materialize  (cost=0.00..1.09 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=90)
                                                        ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'tv series'::text)
                                                              Rows Removed by Filter: 6
                                            ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=84)
                                                  Index Cond: (id = mi_idx1.info_type_id)
                                                  Filter: ((info)::text = 'rating'::text)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.003..0.004 rows=2 loops=28)
                                            Index Cond: (movie_id = mi_idx2.movie_id)
                                ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=54)
                                      Index Cond: (id = mc2.company_id)
                          ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=54)
                                Index Cond: (id = mc2.movie_id)
                                Filter: (production_year = 2007)
                                Rows Removed by Filter: 1
                    ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=6)
                          Index Cond: (id = t2.kind_id)
                          Filter: ((kind)::text = 'tv series'::text)
              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=2 loops=6)
                    Index Cond: (movie_id = t1.id)
        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=14)
              Index Cond: (id = mc1.company_id)
              Filter: ((country_code)::text = '[nl]'::text)
              Rows Removed by Filter: 1
Planning time: 61.695 ms
Execution time: 29.575 ms
