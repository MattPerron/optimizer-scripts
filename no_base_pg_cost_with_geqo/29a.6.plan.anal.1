Aggregate  (cost=10173.85..10173.86 rows=1 width=96) (actual time=31.959..31.959 rows=1 loops=1)
  ->  Nested Loop  (cost=11.16..10173.84 rows=1 width=48) (actual time=4.938..31.540 rows=1620 loops=1)
        ->  Nested Loop  (cost=10.73..10169.77 rows=1 width=36) (actual time=4.931..29.004 rows=1620 loops=1)
              Join Filter: (ci.role_id = rt.id)
              ->  Nested Loop  (cost=10.73..10168.61 rows=1 width=40) (actual time=4.927..27.634 rows=1620 loops=1)
                    Join Filter: (cc.status_id = cct2.id)
                    ->  Nested Loop  (cost=10.73..10167.54 rows=1 width=44) (actual time=4.926..26.217 rows=1620 loops=1)
                          Join Filter: (mi.info_type_id = it.id)
                          ->  Nested Loop  (cost=10.73..10165.12 rows=1 width=48) (actual time=4.921..22.829 rows=1620 loops=1)
                                Join Filter: (cc.subject_id = cct1.id)
                                ->  Nested Loop  (cost=10.73..10164.06 rows=1 width=52) (actual time=4.917..21.586 rows=1620 loops=1)
                                      Join Filter: (it3.id = pi.info_type_id)
                                      Rows Removed by Join Filter: 3270
                                      ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.006..0.012 rows=1 loops=1)
                                            Filter: ((info)::text = 'trivia'::text)
                                            Rows Removed by Filter: 112
                                      ->  Nested Loop  (cost=10.73..10161.63 rows=1 width=56) (actual time=4.904..21.030 rows=4890 loops=1)
                                            Join Filter: (n.id = pi.person_id)
                                            ->  Nested Loop  (cost=10.30..10142.08 rows=1 width=64) (actual time=4.897..19.198 rows=30 loops=1)
                                                  ->  Nested Loop  (cost=9.87..10137.39 rows=2 width=45) (actual time=4.676..18.018 rows=660 loops=1)
                                                        ->  Nested Loop  (cost=9.44..10136.11 rows=1 width=41) (actual time=4.657..17.219 rows=380 loops=1)
                                                              Join Filter: (t.id = ci.movie_id)
                                                              ->  Nested Loop  (cost=8.88..10043.43 rows=2 width=49) (actual time=4.648..15.976 rows=10 loops=1)
                                                                    Join Filter: (t.id = mi.movie_id)
                                                                    ->  Nested Loop  (cost=8.44..9832.85 rows=5 width=41) (actual time=4.625..15.478 rows=5 loops=1)
                                                                          Join Filter: (mc.movie_id = t.id)
                                                                          ->  Nested Loop  (cost=8.01..8904.93 rows=431 width=20) (actual time=0.197..14.586 rows=431 loops=1)
                                                                                ->  Nested Loop  (cost=7.59..5321.77 rows=1768 width=24) (actual time=0.191..11.014 rows=1768 loops=1)
                                                                                      ->  Nested Loop  (cost=7.16..4884.83 rows=90 width=16) (actual time=0.184..9.958 rows=90 loops=1)
                                                                                            ->  Nested Loop  (cost=6.74..3729.38 rows=414 width=4) (actual time=0.109..9.049 rows=414 loops=1)
                                                                                                  ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.029..8.430 rows=1 loops=1)
                                                                                                        Filter: (keyword = 'computer-animation'::text)
                                                                                                        Rows Removed by Filter: 134169
                                                                                                  ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.74..1100.27 rows=298 width=8) (actual time=0.079..0.555 rows=414 loops=1)
                                                                                                        Recheck Cond: (keyword_id = k.id)
                                                                                                        Heap Blocks: exact=358
                                                                                                        ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=298 width=0) (actual time=0.042..0.042 rows=414 loops=1)
                                                                                                              Index Cond: (keyword_id = k.id)
                                                                                            ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=414)
                                                                                                  Index Cond: (movie_id = mk.movie_id)
                                                                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.80 rows=5 width=8) (actual time=0.004..0.008 rows=20 loops=90)
                                                                                            Index Cond: (movie_id = mk.movie_id)
                                                                                ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=1768)
                                                                                      Index Cond: (id = mc.company_id)
                                                                                      Filter: ((country_code)::text = '[us]'::text)
                                                                                      Rows Removed by Filter: 1
                                                                          ->  Index Scan using title_pkey on title t  (cost=0.43..2.14 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=431)
                                                                                Index Cond: (id = mk.movie_id)
                                                                                Filter: ((production_year >= 2000) AND (production_year <= 2010) AND (title = 'Shrek 2'::text))
                                                                                Rows Removed by Filter: 1
                                                                    ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.09 rows=2 width=8) (actual time=0.012..0.099 rows=2 loops=5)
                                                                          Index Cond: (movie_id = mk.movie_id)
                                                                          Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%200%'::text) OR (info ~~ 'USA:%200%'::text)))
                                                                          Rows Removed by Filter: 455
                                                              ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..46.33 rows=1 width=16) (actual time=0.003..0.117 rows=38 loops=10)
                                                                    Index Cond: (movie_id = mk.movie_id)
                                                                    Filter: (note = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                    Rows Removed by Filter: 191
                                                        ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.27 rows=2 width=4) (actual time=0.001..0.002 rows=2 loops=380)
                                                              Index Cond: (person_id = ci.person_id)
                                                              Heap Fetches: 0
                                                  ->  Index Scan using name_pkey on name n  (cost=0.43..2.34 rows=1 width=19) (actual time=0.002..0.002 rows=0 loops=660)
                                                        Index Cond: (id = ci.person_id)
                                                        Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                        Rows Removed by Filter: 1
                                            ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.24 rows=25 width=8) (actual time=0.002..0.029 rows=163 loops=30)
                                                  Index Cond: (person_id = an.person_id)
                                ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=1620)
                                      Filter: ((kind)::text = 'cast'::text)
                          ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1620)
                                Filter: ((info)::text = 'release dates'::text)
                                Rows Removed by Filter: 15
                    ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=1620)
                          Filter: ((kind)::text = 'complete+verified'::text)
                          Rows Removed by Filter: 3
              ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=1620)
                    Filter: ((role)::text = 'actress'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.25 rows=1 width=20) (actual time=0.001..0.001 rows=1 loops=1620)
              Index Cond: (id = ci.person_role_id)
              Filter: (name = 'Queen'::text)
Planning time: 78.582 ms
Execution time: 32.082 ms
