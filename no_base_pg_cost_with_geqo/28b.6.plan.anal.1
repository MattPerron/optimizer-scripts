Aggregate  (cost=18486.73..18486.74 rows=1 width=96) (actual time=230.176..230.176 rows=1 loops=1)
  ->  Nested Loop  (cost=3782.98..18486.73 rows=1 width=42) (actual time=42.960..230.095 rows=148 loops=1)
        ->  Nested Loop  (cost=3782.84..18486.56 rows=1 width=46) (actual time=42.953..229.860 rows=161 loops=1)
              ->  Nested Loop  (cost=3782.70..18486.38 rows=1 width=50) (actual time=42.948..229.577 rows=238 loops=1)
                    ->  Nested Loop  (cost=3782.56..18484.57 rows=11 width=54) (actual time=42.942..229.238 rows=253 loops=1)
                          ->  Hash Join  (cost=3782.14..18473.59 rows=20 width=39) (actual time=42.932..228.428 rows=255 loops=1)
                                Hash Cond: (mc.company_type_id = ct.id)
                                ->  Nested Loop  (cost=3781.05..18472.29 rows=20 width=43) (actual time=42.919..228.335 rows=255 loops=1)
                                      Join Filter: (t.id = mc.movie_id)
                                      ->  Nested Loop  (cost=3780.62..18267.70 rows=354 width=55) (actual time=42.910..227.784 rows=36 loops=1)
                                            Join Filter: (mi.movie_id = t.id)
                                            ->  Nested Loop  (cost=3780.19..17829.21 rows=873 width=30) (actual time=42.899..226.462 rows=378 loops=1)
                                                  ->  Nested Loop  (cost=3779.75..14347.59 rows=2251 width=22) (actual time=42.663..137.693 rows=2251 loops=1)
                                                        ->  Hash Join  (cost=3779.33..12401.45 rows=3832 width=8) (actual time=42.644..121.873 rows=3832 loops=1)
                                                              Hash Cond: (cc.subject_id = cct1.id)
                                                              ->  Hash Join  (cost=3778.26..12290.75 rows=10536 width=12) (actual time=42.603..120.090 rows=10536 loops=1)
                                                                    Hash Cond: (cc.status_id = cct2.id)
                                                                    ->  Hash Join  (cost=3777.18..12081.28 rows=20024 width=16) (actual time=42.595..116.368 rows=20024 loops=1)
                                                                          Hash Cond: (mk.movie_id = cc.movie_id)
                                                                          ->  Nested Loop  (cost=6.74..7290.41 rows=37091 width=4) (actual time=2.861..63.013 rows=37091 loops=1)
                                                                                ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.811..15.538 rows=3 loops=1)
                                                                                      Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                      Rows Removed by Filter: 134167
                                                                                ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.74..1079.23 rows=298 width=8) (actual time=2.300..13.919 rows=12364 loops=3)
                                                                                      Recheck Cond: (keyword_id = k.id)
                                                                                      Heap Blocks: exact=26312
                                                                                      ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=298 width=0) (actual time=1.179..1.179 rows=12364 loops=3)
                                                                                            Index Cond: (keyword_id = k.id)
                                                                          ->  Hash  (cost=2081.86..2081.86 rows=135086 width=12) (actual time=39.364..39.364 rows=135086 loops=1)
                                                                                Buckets: 262144  Batches: 1  Memory Usage: 7853kB
                                                                                ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.005..17.898 rows=135086 loops=1)
                                                                    ->  Hash  (cost=1.05..1.05 rows=3 width=4) (actual time=0.002..0.002 rows=3 loops=1)
                                                                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                          ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.001..0.001 rows=3 loops=1)
                                                                                Filter: ((kind)::text <> 'complete+verified'::text)
                                                                                Rows Removed by Filter: 1
                                                              ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                                          Filter: ((kind)::text = 'crew'::text)
                                                                          Rows Removed by Filter: 3
                                                        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.004..0.004 rows=1 loops=3832)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                              Filter: (info > '6.5'::text)
                                                              Rows Removed by Filter: 2
                                                  ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.54 rows=1 width=8) (actual time=0.036..0.039 rows=0 loops=2251)
                                                        Index Cond: (movie_id = mk.movie_id)
                                                        Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                                        Rows Removed by Filter: 103
                                            ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=378)
                                                  Index Cond: (id = mk.movie_id)
                                                  Filter: (production_year > 2005)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.007..0.013 rows=7 loops=36)
                                            Index Cond: (movie_id = mk.movie_id)
                                            Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                            Rows Removed by Filter: 13
                                ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.007..0.007 rows=4 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                      ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.003..0.004 rows=4 loops=1)
                          ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=255)
                                Index Cond: (id = mc.company_id)
                                Filter: ((country_code)::text <> '[us]'::text)
                                Rows Removed by Filter: 0
                    ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=253)
                          Index Cond: (id = mi.info_type_id)
                          Filter: ((info)::text = 'countries'::text)
                          Rows Removed by Filter: 0
              ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=238)
                    Index Cond: (id = mi_idx.info_type_id)
                    Filter: ((info)::text = 'rating'::text)
                    Rows Removed by Filter: 0
        ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=161)
              Index Cond: (id = t.kind_id)
              Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
              Rows Removed by Filter: 0
Planning time: 58.671 ms
Execution time: 230.303 ms
