Aggregate  (cost=4836.18..4836.19 rows=1 width=96) (actual time=14.690..14.690 rows=1 loops=1)
  ->  Nested Loop  (cost=11.16..4836.18 rows=1 width=48) (actual time=1.881..14.304 rows=1620 loops=1)
        Join Filter: (it3.id = pi.info_type_id)
        Rows Removed by Join Filter: 3270
        ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.012 rows=1 loops=1)
              Filter: ((info)::text = 'trivia'::text)
              Rows Removed by Filter: 112
        ->  Nested Loop  (cost=11.16..4833.75 rows=1 width=52) (actual time=1.868..13.755 rows=4890 loops=1)
              Join Filter: (n.id = pi.person_id)
              ->  Nested Loop  (cost=10.73..4814.20 rows=1 width=60) (actual time=1.861..11.886 rows=30 loops=1)
                    ->  Nested Loop  (cost=10.30..4810.13 rows=1 width=48) (actual time=1.854..11.825 rows=30 loops=1)
                          Join Filter: (n.id = an.person_id)
                          ->  Nested Loop  (cost=9.87..4808.84 rows=1 width=44) (actual time=1.832..11.776 rows=10 loops=1)
                                Join Filter: (it.id = mi.info_type_id)
                                ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.008 rows=1 loops=1)
                                      Filter: ((info)::text = 'release dates'::text)
                                      Rows Removed by Filter: 112
                                ->  Nested Loop  (cost=9.87..4806.41 rows=1 width=48) (actual time=1.829..11.765 rows=10 loops=1)
                                      Join Filter: (t.id = mi.movie_id)
                                      ->  Nested Loop  (cost=9.44..4764.30 rows=1 width=64) (actual time=1.810..11.232 rows=5 loops=1)
                                            ->  Nested Loop  (cost=9.02..4762.27 rows=1 width=68) (actual time=1.804..11.157 rows=22 loops=1)
                                                  Join Filter: (t.id = mc.movie_id)
                                                  ->  Nested Loop  (cost=8.59..4757.40 rows=1 width=60) (actual time=1.797..11.139 rows=1 loops=1)
                                                        Join Filter: (rt.id = ci.role_id)
                                                        ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.003..0.005 rows=1 loops=1)
                                                              Filter: ((role)::text = 'actress'::text)
                                                              Rows Removed by Filter: 11
                                                        ->  Nested Loop  (cost=8.59..4756.24 rows=1 width=64) (actual time=1.793..11.133 rows=1 loops=1)
                                                              ->  Nested Loop  (cost=8.16..4667.21 rows=38 width=45) (actual time=1.677..11.001 rows=38 loops=1)
                                                                    Join Filter: (t.id = ci.movie_id)
                                                                    ->  Nested Loop  (cost=7.59..4620.87 rows=1 width=29) (actual time=1.667..10.749 rows=1 loops=1)
                                                                          Join Filter: (cct2.id = cc.status_id)
                                                                          ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                                                Filter: ((kind)::text = 'complete+verified'::text)
                                                                                Rows Removed by Filter: 3
                                                                          ->  Nested Loop  (cost=7.59..4619.80 rows=1 width=33) (actual time=1.665..10.745 rows=1 loops=1)
                                                                                Join Filter: (cct1.id = cc.subject_id)
                                                                                ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                                      Filter: ((kind)::text = 'cast'::text)
                                                                                      Rows Removed by Filter: 3
                                                                                ->  Nested Loop  (cost=7.59..4618.74 rows=1 width=37) (actual time=1.664..10.742 rows=1 loops=1)
                                                                                      Join Filter: (t.id = cc.movie_id)
                                                                                      ->  Nested Loop  (cost=7.17..4615.95 rows=1 width=25) (actual time=1.656..10.733 rows=1 loops=1)
                                                                                            ->  Nested Loop  (cost=6.74..3729.38 rows=414 width=4) (actual time=0.112..9.195 rows=414 loops=1)
                                                                                                  ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.029..8.576 rows=1 loops=1)
                                                                                                        Filter: (keyword = 'computer-animation'::text)
                                                                                                        Rows Removed by Filter: 134169
                                                                                                  ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.74..1100.27 rows=298 width=8) (actual time=0.082..0.555 rows=414 loops=1)
                                                                                                        Recheck Cond: (keyword_id = k.id)
                                                                                                        Heap Blocks: exact=358
                                                                                                        ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=298 width=0) (actual time=0.044..0.044 rows=414 loops=1)
                                                                                                              Index Cond: (keyword_id = k.id)
                                                                                            ->  Index Scan using title_pkey on title t  (cost=0.43..2.14 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=414)
                                                                                                  Index Cond: (id = mk.movie_id)
                                                                                                  Filter: ((production_year >= 2000) AND (production_year <= 2010) AND (title = 'Shrek 2'::text))
                                                                                                  Rows Removed by Filter: 1
                                                                                      ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.007..0.007 rows=1 loops=1)
                                                                                            Index Cond: (movie_id = mk.movie_id)
                                                                    ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..46.33 rows=1 width=16) (actual time=0.009..0.244 rows=38 loops=1)
                                                                          Index Cond: (movie_id = mk.movie_id)
                                                                          Filter: (note = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                          Rows Removed by Filter: 191
                                                              ->  Index Scan using name_pkey on name n  (cost=0.43..2.34 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=38)
                                                                    Index Cond: (id = ci.person_id)
                                                                    Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                    Rows Removed by Filter: 1
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.80 rows=5 width=8) (actual time=0.006..0.012 rows=22 loops=1)
                                                        Index Cond: (movie_id = mk.movie_id)
                                            ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=22)
                                                  Index Cond: (id = mc.company_id)
                                                  Filter: ((country_code)::text = '[us]'::text)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.09 rows=2 width=8) (actual time=0.012..0.106 rows=2 loops=5)
                                            Index Cond: (movie_id = mk.movie_id)
                                            Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%200%'::text) OR (info ~~ 'USA:%200%'::text)))
                                            Rows Removed by Filter: 455
                          ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.27 rows=2 width=4) (actual time=0.003..0.004 rows=3 loops=10)
                                Index Cond: (person_id = ci.person_id)
                                Heap Fetches: 0
                    ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.25 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=30)
                          Index Cond: (id = ci.person_role_id)
                          Filter: (name = 'Queen'::text)
              ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.24 rows=25 width=8) (actual time=0.002..0.030 rows=163 loops=30)
                    Index Cond: (person_id = an.person_id)
Planning time: 78.953 ms
Execution time: 14.821 ms
