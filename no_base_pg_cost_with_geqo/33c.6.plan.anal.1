Aggregate  (cost=13990.39..13990.40 rows=1 width=192) (actual time=140.403..140.403 rows=1 loops=1)
  ->  Nested Loop  (cost=745.65..13990.38 rows=1 width=84) (actual time=18.516..140.309 rows=114 loops=1)
        ->  Nested Loop  (cost=745.23..13989.93 rows=1 width=69) (actual time=18.512..140.056 rows=114 loops=1)
              ->  Nested Loop  (cost=744.80..13989.27 rows=1 width=77) (actual time=18.505..139.875 rows=46 loops=1)
                    ->  Nested Loop  (cost=744.67..13989.10 rows=1 width=81) (actual time=15.362..139.737 rows=72 loops=1)
                          Join Filter: (ml.linked_movie_id = t2.id)
                          ->  Nested Loop  (cost=744.24..13988.38 rows=1 width=56) (actual time=15.353..139.443 rows=91 loops=1)
                                ->  Nested Loop  (cost=743.82..13987.94 rows=1 width=41) (actual time=15.345..139.056 rows=117 loops=1)
                                      ->  Nested Loop  (cost=743.39..13987.33 rows=1 width=49) (actual time=15.339..138.822 rows=41 loops=1)
                                            Join Filter: (mi_idx1.info_type_id = it1.id)
                                            Rows Removed by Join Filter: 82
                                            ->  Nested Loop  (cost=743.39..13984.52 rows=26 width=53) (actual time=15.322..138.748 rows=123 loops=1)
                                                  ->  Nested Loop  (cost=742.96..13959.68 rows=47 width=39) (actual time=15.315..138.570 rows=47 loops=1)
                                                        Join Filter: (it2.id = mi_idx2.info_type_id)
                                                        Rows Removed by Join Filter: 3033
                                                        ->  Nested Loop  (cost=742.96..13911.07 rows=3080 width=43) (actual time=1.703..137.320 rows=3080 loops=1)
                                                              ->  Nested Loop  (cost=742.53..9117.65 rows=2315 width=29) (actual time=1.693..129.802 rows=2315 loops=1)
                                                                    Join Filter: (kt1.id = t1.kind_id)
                                                                    Rows Removed by Join Filter: 861
                                                                    ->  Merge Join  (cost=742.53..9050.42 rows=2315 width=33) (actual time=1.685..128.793 rows=2315 loops=1)
                                                                          Merge Cond: (t1.id = ml.movie_id)
                                                                          ->  Index Scan using title_pkey on title t1  (cost=0.43..110298.67 rows=2528312 width=25) (actual time=0.005..107.652 rows=186176 loops=1)
                                                                          ->  Sort  (cost=742.10..747.89 rows=2315 width=8) (actual time=1.364..1.632 rows=2315 loops=1)
                                                                                Sort Key: ml.movie_id
                                                                                Sort Method: quicksort  Memory: 205kB
                                                                                ->  Nested Loop  (cost=37.49..612.73 rows=2315 width=8) (actual time=0.063..0.959 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.004..0.007 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Bitmap Heap Scan on movie_link ml  (cost=37.49..185.08 rows=1875 width=12) (actual time=0.054..0.287 rows=1158 loops=2)
                                                                                            Recheck Cond: (link_type_id = lt.id)
                                                                                            Heap Blocks: exact=191
                                                                                            ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..37.02 rows=1875 width=0) (actual time=0.042..0.042 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                    ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=2315)
                                                                          ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=2 width=4) (actual time=0.005..0.008 rows=2 loops=1)
                                                                                Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                                                Rows Removed by Filter: 5
                                                              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=2 width=14) (actual time=0.002..0.003 rows=1 loops=2315)
                                                                    Index Cond: (movie_id = ml.linked_movie_id)
                                                                    Filter: (info < '3.5'::text)
                                                                    Rows Removed by Filter: 1
                                                        ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=3080)
                                                              ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                                    Filter: ((info)::text = 'rating'::text)
                                                                    Rows Removed by Filter: 112
                                                  ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..0.50 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=47)
                                                        Index Cond: (movie_id = t1.id)
                                            ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=123)
                                                  ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                        Filter: ((info)::text = 'rating'::text)
                                                        Rows Removed by Filter: 112
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.003..0.004 rows=3 loops=41)
                                            Index Cond: (movie_id = t1.id)
                                ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=117)
                                      Index Cond: (id = mc1.company_id)
                                      Filter: ((country_code)::text <> '[us]'::text)
                                      Rows Removed by Filter: 0
                          ->  Index Scan using title_pkey on title t2  (cost=0.43..0.71 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=91)
                                Index Cond: (id = mi_idx2.movie_id)
                                Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                Rows Removed by Filter: 0
                    ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=72)
                          Index Cond: (id = t2.kind_id)
                          Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                          Rows Removed by Filter: 0
              ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.002..0.003 rows=2 loops=46)
                    Index Cond: (movie_id = t2.id)
        ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=114)
              Index Cond: (id = mc2.company_id)
Planning time: 59.178 ms
Execution time: 140.515 ms
