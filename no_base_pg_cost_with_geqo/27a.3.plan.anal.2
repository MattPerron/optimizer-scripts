Aggregate  (cost=1337.66..1337.67 rows=1 width=96) (actual time=26.153..26.153 rows=1 loops=1)
  ->  Nested Loop  (cost=377.74..1337.65 rows=1 width=48) (actual time=2.212..25.975 rows=477 loops=1)
        Join Filter: (ml.movie_id = t.id)
        ->  Nested Loop  (cost=377.31..1337.15 rows=1 width=51) (actual time=2.206..25.141 rows=477 loops=1)
              ->  Nested Loop  (cost=376.89..1296.53 rows=92 width=55) (actual time=2.195..15.342 rows=6483 loops=1)
                    Join Filter: (ml.movie_id = mk.movie_id)
                    ->  Nested Loop  (cost=376.46..1292.67 rows=2 width=47) (actual time=2.188..12.030 rows=705 loops=1)
                          ->  Nested Loop  (cost=376.33..1291.92 rows=5 width=51) (actual time=2.185..11.268 rows=705 loops=1)
                                Join Filter: (ct.id = mc.company_type_id)
                                Rows Removed by Join Filter: 57
                                ->  Nested Loop  (cost=376.33..1290.58 rows=19 width=55) (actual time=2.182..11.009 rows=762 loops=1)
                                      ->  Nested Loop  (cost=375.91..1239.38 rows=112 width=40) (actual time=2.175..7.866 rows=1737 loops=1)
                                            Join Filter: (ml.movie_id = mc.movie_id)
                                            ->  Nested Loop  (cost=375.48..1207.99 rows=24 width=28) (actual time=2.168..6.757 rows=213 loops=1)
                                                  Join Filter: (ml.movie_id = mi.movie_id)
                                                  ->  Nested Loop  (cost=375.04..737.50 rows=64 width=24) (actual time=1.692..4.396 rows=189 loops=1)
                                                        Join Filter: (cc.status_id = cct2.id)
                                                        Rows Removed by Join Filter: 68
                                                        ->  Merge Join  (cost=375.04..732.59 rows=257 width=28) (actual time=1.687..4.302 rows=257 loops=1)
                                                              Merge Cond: (cc.movie_id = ml.movie_id)
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6332.07 rows=135086 width=12) (actual time=0.006..1.827 rows=5993 loops=1)
                                                              ->  Sort  (cost=374.60..380.39 rows=2315 width=16) (actual time=1.470..1.635 rows=2341 loops=1)
                                                                    Sort Key: ml.movie_id
                                                                    Sort Method: quicksort  Memory: 205kB
                                                                    ->  Nested Loop  (cost=38.82..245.23 rows=2315 width=16) (actual time=0.065..0.973 rows=2315 loops=1)
                                                                          ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=16) (actual time=0.003..0.007 rows=2 loops=1)
                                                                                Filter: ((link)::text ~~ '%follow%'::text)
                                                                                Rows Removed by Filter: 16
                                                                          ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.056..0.298 rows=1158 loops=2)
                                                                                Recheck Cond: (link_type_id = lt.id)
                                                                                Heap Blocks: exact=191
                                                                                ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.045..0.045 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                        ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=257)
                                                              ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'complete'::text)
                                                                    Rows Removed by Filter: 3
                                                  ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..7.34 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=189)
                                                        Index Cond: (movie_id = cc.movie_id)
                                                        Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                                        Rows Removed by Filter: 29
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.27 rows=3 width=12) (actual time=0.002..0.004 rows=8 loops=213)
                                                  Index Cond: (movie_id = mi.movie_id)
                                                  Filter: (note IS NULL)
                                                  Rows Removed by Filter: 2
                                      ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1737)
                                            Index Cond: (id = mc.company_id)
                                            Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                                            Rows Removed by Filter: 1
                                ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=762)
                                      ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.004 rows=1 loops=1)
                                            Filter: ((kind)::text = 'production companies'::text)
                                            Rows Removed by Filter: 3
                          ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=705)
                                Index Cond: (id = cc.subject_id)
                                Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                    ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.35 rows=46 width=8) (actual time=0.001..0.003 rows=9 loops=705)
                          Index Cond: (movie_id = mc.movie_id)
              ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=6483)
                    Index Cond: (id = mk.keyword_id)
                    Filter: (keyword = 'sequel'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=477)
              Index Cond: (id = mk.movie_id)
              Filter: ((production_year >= 1950) AND (production_year <= 2000))
Planning time: 46.770 ms
Execution time: 26.243 ms
