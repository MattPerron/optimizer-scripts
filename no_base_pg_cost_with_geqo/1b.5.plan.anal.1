Aggregate  (cost=19329.23..19329.24 rows=1 width=68) (actual time=0.134..0.134 rows=1 loops=1)
  ->  Hash Join  (cost=5173.40..19329.21 rows=3 width=45) (actual time=0.123..0.127 rows=3 loops=1)
        Hash Cond: (mc.company_type_id = ct.id)
        ->  Nested Loop  (cost=5172.34..19327.45 rows=66 width=49) (actual time=0.045..0.107 rows=66 loops=1)
              Join Filter: (t.id = mc.movie_id)
              ->  Nested Loop  (cost=5171.91..19324.88 rows=4 width=29) (actual time=0.039..0.054 rows=4 loops=1)
                    ->  Nested Loop  (cost=5171.48..19319.05 rows=10 width=4) (actual time=0.015..0.018 rows=10 loops=1)
                          ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                Filter: ((info)::text = 'bottom 10 rank'::text)
                                Rows Removed by Filter: 112
                          ->  Bitmap Heap Scan on movie_info_idx mi_idx  (cost=5171.48..16556.57 rows=276007 width=8) (actual time=0.005..0.006 rows=10 loops=1)
                                Recheck Cond: (info_type_id = it.id)
                                Heap Blocks: exact=1
                                ->  Bitmap Index Scan on info_type_id_movie_info_idx  (cost=0.00..5102.48 rows=276007 width=0) (actual time=0.003..0.003 rows=10 loops=1)
                                      Index Cond: (info_type_id = it.id)
                    ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=10)
                          Index Cond: (id = mi_idx.movie_id)
                          Filter: ((production_year >= 2005) AND (production_year <= 2010))
                          Rows Removed by Filter: 1
              ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.61 rows=3 width=32) (actual time=0.004..0.010 rows=16 loops=4)
                    Index Cond: (movie_id = mi_idx.movie_id)
                    Filter: (note !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text)
                    Rows Removed by Filter: 2
        ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                    Filter: ((kind)::text = 'production companies'::text)
                    Rows Removed by Filter: 3
Planning time: 0.825 ms
Execution time: 0.194 ms
