Aggregate  (cost=3816.07..3816.08 rows=1 width=96) (actual time=18.438..18.439 rows=1 loops=1)
  ->  Nested Loop  (cost=377.74..3816.07 rows=1 width=48) (actual time=2.376..18.262 rows=477 loops=1)
        ->  Nested Loop  (cost=377.61..3815.90 rows=1 width=52) (actual time=2.372..17.688 rows=534 loops=1)
              Join Filter: (ml.movie_id = mi.movie_id)
              ->  Nested Loop  (cost=377.17..3814.35 rows=1 width=72) (actual time=2.360..15.847 rows=191 loops=1)
                    ->  Nested Loop  (cost=376.75..2323.71 rows=3378 width=76) (actual time=1.813..10.470 rows=3378 loops=1)
                          Join Filter: (ml.movie_id = mk.movie_id)
                          ->  Nested Loop  (cost=376.32..1764.25 rows=290 width=68) (actual time=1.808..8.733 rows=290 loops=1)
                                Join Filter: (ml.movie_id = t.id)
                                ->  Nested Loop  (cost=375.89..1585.68 rows=294 width=47) (actual time=1.802..8.156 rows=294 loops=1)
                                      Join Filter: (cc.status_id = cct2.id)
                                      Rows Removed by Join Filter: 65
                                      ->  Nested Loop  (cost=375.89..1579.24 rows=359 width=51) (actual time=1.799..8.017 rows=359 loops=1)
                                            ->  Nested Loop  (cost=375.47..1102.41 rows=1043 width=36) (actual time=1.648..5.888 rows=1043 loops=1)
                                                  Join Filter: (cc.subject_id = cct1.id)
                                                  Rows Removed by Join Filter: 179
                                                  ->  Nested Loop  (cost=375.47..1072.68 rows=1043 width=40) (actual time=1.643..5.489 rows=1043 loops=1)
                                                        Join Filter: (ml.movie_id = mc.movie_id)
                                                        ->  Merge Join  (cost=375.04..732.59 rows=257 width=28) (actual time=1.632..4.302 rows=257 loops=1)
                                                              Merge Cond: (cc.movie_id = ml.movie_id)
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6332.07 rows=135086 width=12) (actual time=0.007..1.858 rows=5993 loops=1)
                                                              ->  Sort  (cost=374.60..380.39 rows=2315 width=16) (actual time=1.416..1.590 rows=2341 loops=1)
                                                                    Sort Key: ml.movie_id
                                                                    Sort Method: quicksort  Memory: 205kB
                                                                    ->  Nested Loop  (cost=38.82..245.23 rows=2315 width=16) (actual time=0.065..0.965 rows=2315 loops=1)
                                                                          ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=16) (actual time=0.003..0.007 rows=2 loops=1)
                                                                                Filter: ((link)::text ~~ '%follow%'::text)
                                                                                Rows Removed by Filter: 16
                                                                          ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.056..0.295 rows=1158 loops=2)
                                                                                Recheck Cond: (link_type_id = lt.id)
                                                                                Heap Blocks: exact=191
                                                                                ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.045..0.045 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=3 width=12) (actual time=0.003..0.004 rows=4 loops=257)
                                                              Index Cond: (movie_id = cc.movie_id)
                                                              Filter: (note IS NULL)
                                                              Rows Removed by Filter: 3
                                                  ->  Materialize  (cost=0.00..1.06 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=1043)
                                                        ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.003..0.003 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                            ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1043)
                                                  Index Cond: (id = mc.company_id)
                                                  Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                                                  Rows Removed by Filter: 1
                                      ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=359)
                                            ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'complete'::text)
                                                  Rows Removed by Filter: 3
                                ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=294)
                                      Index Cond: (id = mc.movie_id)
                                      Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                      Rows Removed by Filter: 0
                          ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.35 rows=46 width=8) (actual time=0.002..0.003 rows=12 loops=290)
                                Index Cond: (movie_id = mc.movie_id)
                    ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=3378)
                          Index Cond: (id = mk.keyword_id)
                          Filter: (keyword = 'sequel'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.54 rows=1 width=4) (actual time=0.007..0.009 rows=3 loops=191)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                    Rows Removed by Filter: 17
        ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=534)
              Index Cond: (id = mc.company_type_id)
              Filter: ((kind)::text = 'production companies'::text)
              Rows Removed by Filter: 0
Planning time: 46.334 ms
Execution time: 18.528 ms
