Aggregate  (cost=17626.23..17626.24 rows=1 width=96) (actual time=269.016..269.016 rows=1 loops=1)
  ->  Nested Loop  (cost=3782.85..17626.23 rows=1 width=42) (actual time=43.139..268.933 rows=148 loops=1)
        ->  Nested Loop  (cost=3782.71..17626.04 rows=1 width=46) (actual time=43.134..268.726 rows=149 loops=1)
              Join Filter: (t.id = mi.movie_id)
              ->  Nested Loop  (cost=3782.28..17624.49 rows=1 width=62) (actual time=42.883..160.330 rows=1387 loops=1)
                    ->  Nested Loop  (cost=3782.15..17624.34 rows=1 width=66) (actual time=42.876..158.997 rows=1387 loops=1)
                          ->  Nested Loop  (cost=3781.73..17623.79 rows=1 width=51) (actual time=42.867..154.667 rows=1422 loops=1)
                                Join Filter: (t.id = mc.movie_id)
                                ->  Nested Loop  (cost=3781.30..17623.21 rows=1 width=39) (actual time=42.856..152.111 rows=179 loops=1)
                                      Join Filter: (it2.id = mi_idx.info_type_id)
                                      Rows Removed by Join Filter: 18
                                      ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                                            Filter: ((info)::text = 'rating'::text)
                                            Rows Removed by Filter: 112
                                      ->  Nested Loop  (cost=3781.30..17620.40 rows=32 width=43) (actual time=42.842..152.043 rows=197 loops=1)
                                            Join Filter: (t.id = mi_idx.movie_id)
                                            ->  Hash Join  (cost=3780.87..17481.07 rows=273 width=29) (actual time=42.828..150.665 rows=273 loops=1)
                                                  Hash Cond: (cc.subject_id = cct1.id)
                                                  ->  Hash Join  (cost=3779.81..17467.57 rows=1195 width=33) (actual time=42.819..150.466 rows=1195 loops=1)
                                                        Hash Cond: (t.kind_id = kt.id)
                                                        ->  Nested Loop  (cost=3778.69..17451.06 rows=1356 width=37) (actual time=42.811..150.082 rows=1356 loops=1)
                                                              ->  Hash Join  (cost=3778.26..12290.75 rows=10536 width=12) (actual time=42.731..119.265 rows=10536 loops=1)
                                                                    Hash Cond: (cc.status_id = cct2.id)
                                                                    ->  Hash Join  (cost=3777.18..12081.28 rows=20024 width=16) (actual time=42.722..115.675 rows=20024 loops=1)
                                                                          Hash Cond: (mk.movie_id = cc.movie_id)
                                                                          ->  Nested Loop  (cost=6.74..7290.41 rows=37091 width=4) (actual time=2.866..62.427 rows=37091 loops=1)
                                                                                ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.799..15.549 rows=3 loops=1)
                                                                                      Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                      Rows Removed by Filter: 134167
                                                                                ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.74..1079.23 rows=298 width=8) (actual time=2.285..13.722 rows=12364 loops=3)
                                                                                      Recheck Cond: (keyword_id = k.id)
                                                                                      Heap Blocks: exact=26312
                                                                                      ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=298 width=0) (actual time=1.178..1.178 rows=12364 loops=3)
                                                                                            Index Cond: (keyword_id = k.id)
                                                                          ->  Hash  (cost=2081.86..2081.86 rows=135086 width=12) (actual time=39.495..39.495 rows=135086 loops=1)
                                                                                Buckets: 262144  Batches: 1  Memory Usage: 7853kB
                                                                                ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.006..18.018 rows=135086 loops=1)
                                                                    ->  Hash  (cost=1.05..1.05 rows=3 width=4) (actual time=0.003..0.003 rows=3 loops=1)
                                                                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                          ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.001..0.002 rows=3 loops=1)
                                                                                Filter: ((kind)::text <> 'complete+verified'::text)
                                                                                Rows Removed by Filter: 1
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=10536)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2005)
                                                                    Rows Removed by Filter: 1
                                                        ->  Hash  (cost=1.09..1.09 rows=2 width=4) (actual time=0.004..0.004 rows=2 loops=1)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                              ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.002..0.003 rows=2 loops=1)
                                                                    Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                    Rows Removed by Filter: 5
                                                  ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'crew'::text)
                                                              Rows Removed by Filter: 3
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.004..0.005 rows=1 loops=273)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: (info > '6.5'::text)
                                                  Rows Removed by Filter: 2
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.006..0.012 rows=8 loops=179)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                      Rows Removed by Filter: 11
                          ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=1422)
                                Index Cond: (id = mc.company_id)
                                Filter: ((country_code)::text <> '[us]'::text)
                                Rows Removed by Filter: 0
                    ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=1387)
                          Index Cond: (id = mc.company_type_id)
                          Heap Fetches: 0
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.54 rows=1 width=8) (actual time=0.078..0.078 rows=0 loops=1387)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                    Rows Removed by Filter: 336
        ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=149)
              Index Cond: (id = mi.info_type_id)
              Filter: ((info)::text = 'countries'::text)
              Rows Removed by Filter: 0
Planning time: 58.765 ms
Execution time: 269.147 ms
