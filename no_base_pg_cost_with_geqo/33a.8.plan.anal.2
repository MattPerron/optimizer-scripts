Aggregate  (cost=8203.45..8203.46 rows=1 width=192) (actual time=30.172..30.172 rows=1 loops=1)
  ->  Nested Loop  (cost=5555.62..8203.43 rows=1 width=84) (actual time=11.391..30.158 rows=8 loops=1)
        ->  Nested Loop  (cost=5555.20..8202.99 rows=1 width=69) (actual time=11.335..30.093 rows=28 loops=1)
              Join Filter: ((ml.movie_id = t1.id) AND (kt1.id = t1.kind_id))
              ->  Nested Loop  (cost=5554.77..8200.33 rows=5 width=68) (actual time=11.329..30.031 rows=28 loops=1)
                    Join Filter: (kt2.id = t2.kind_id)
                    ->  Nested Loop  (cost=5554.77..8197.66 rows=32 width=68) (actual time=11.322..30.006 rows=28 loops=1)
                          Join Filter: (ml.linked_movie_id = t2.id)
                          ->  Nested Loop  (cost=5554.34..8102.08 rows=179 width=59) (actual time=11.315..29.666 rows=179 loops=1)
                                ->  Nested Loop  (cost=5553.92..8022.71 rows=179 width=44) (actual time=11.307..29.290 rows=179 loops=1)
                                      Join Filter: (ml.linked_movie_id = mc2.movie_id)
                                      ->  Nested Loop  (cost=5553.49..7959.22 rows=86 width=36) (actual time=11.302..29.019 rows=86 loops=1)
                                            Join Filter: (mi_idx1.info_type_id = it1.id)
                                            Rows Removed by Join Filter: 172
                                            ->  Nested Loop  (cost=5553.49..7952.94 rows=258 width=40) (actual time=11.268..28.920 rows=258 loops=1)
                                                  Join Filter: (ml.movie_id = mc1.movie_id)
                                                  ->  Nested Loop  (cost=5553.06..7893.97 rows=90 width=32) (actual time=11.260..28.621 rows=90 loops=1)
                                                        Join Filter: (mi_idx2.info_type_id = it2.id)
                                                        Rows Removed by Join Filter: 8268
                                                        ->  Merge Join  (cost=5553.06..7766.18 rows=8358 width=36) (actual time=8.623..25.805 rows=8358 loops=1)
                                                              Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43804.18 rows=1380035 width=14) (actual time=0.007..9.249 rows=63901 loops=1)
                                                              ->  Sort  (cost=5552.62..5559.98 rows=2944 width=22) (actual time=8.587..9.158 rows=8516 loops=1)
                                                                    Sort Key: ml.movie_id
                                                                    Sort Method: quicksort  Memory: 327kB
                                                                    ->  Nested Loop  (cost=37.91..5382.99 rows=2944 width=22) (actual time=0.081..7.828 rows=2944 loops=1)
                                                                          ->  Nested Loop  (cost=37.49..612.73 rows=2315 width=8) (actual time=0.072..1.116 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.003..0.008 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=37.49..185.08 rows=1875 width=12) (actual time=0.064..0.356 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..37.02 rows=1875 width=0) (actual time=0.051..0.051 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.0'::text)
                                                                                Rows Removed by Filter: 1
                                                        ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=8358)
                                                              ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                    Filter: ((info)::text = 'rating'::text)
                                                                    Rows Removed by Filter: 112
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.002..0.002 rows=3 loops=90)
                                                        Index Cond: (movie_id = mi_idx1.movie_id)
                                            ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=258)
                                                  ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                        Filter: ((info)::text = 'rating'::text)
                                                        Rows Removed by Filter: 112
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.002..0.002 rows=2 loops=86)
                                            Index Cond: (movie_id = mi_idx2.movie_id)
                                ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=179)
                                      Index Cond: (id = mc2.company_id)
                          ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=179)
                                Index Cond: (id = mc2.movie_id)
                                Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                Rows Removed by Filter: 1
                    ->  Materialize  (cost=0.00..2.19 rows=1 width=8) (actual time=0.000..0.000 rows=1 loops=28)
                          ->  Nested Loop  (cost=0.00..2.18 rows=1 width=8) (actual time=0.005..0.006 rows=1 loops=1)
                                ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                      Filter: ((kind)::text = 'tv series'::text)
                                      Rows Removed by Filter: 6
                                ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                      Filter: ((kind)::text = 'tv series'::text)
                                      Rows Removed by Filter: 6
              ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=28)
                    Index Cond: (id = mc1.movie_id)
        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=28)
              Index Cond: (id = mc1.company_id)
              Filter: ((country_code)::text = '[us]'::text)
              Rows Removed by Filter: 1
Planning time: 61.198 ms
Execution time: 30.283 ms
