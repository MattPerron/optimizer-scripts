Aggregate  (cost=2250.13..2250.14 rows=1 width=96) (actual time=76.896..76.896 rows=1 loops=1)
  ->  Nested Loop  (cost=5.85..2250.11 rows=3 width=48) (actual time=11.649..76.654 rows=743 loops=1)
        Join Filter: (ml.movie_id = mi.movie_id)
        ->  Nested Loop  (cost=5.42..2248.28 rows=1 width=68) (actual time=11.619..74.822 rows=172 loops=1)
              ->  Nested Loop  (cost=5.00..2247.82 rows=1 width=53) (actual time=1.769..73.982 rows=399 loops=1)
                    ->  Nested Loop  (cost=4.58..1943.76 rows=689 width=57) (actual time=1.747..59.070 rows=9471 loops=1)
                          Join Filter: (ml.movie_id = mk.movie_id)
                          ->  Nested Loop  (cost=4.15..1915.41 rows=15 width=49) (actual time=1.741..54.366 rows=763 loops=1)
                                Join Filter: (ml.movie_id = t.id)
                                ->  Nested Loop  (cost=3.72..1903.26 rows=20 width=28) (actual time=1.735..52.855 rows=763 loops=1)
                                      Join Filter: (mc.company_type_id = ct.id)
                                      Rows Removed by Join Filter: 101
                                      ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                                            Filter: ((kind)::text = 'production companies'::text)
                                            Rows Removed by Filter: 3
                                      ->  Nested Loop  (cost=3.72..1901.22 rows=79 width=32) (actual time=1.729..52.689 rows=864 loops=1)
                                            Join Filter: (ml.movie_id = mc.movie_id)
                                            ->  Nested Loop  (cost=3.29..1878.73 rows=17 width=20) (actual time=1.720..51.580 rows=228 loops=1)
                                                  Join Filter: (ml.link_type_id = lt.id)
                                                  Rows Removed by Join Filter: 6900
                                                  ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=16) (actual time=0.002..0.006 rows=2 loops=1)
                                                        Filter: ((link)::text ~~ '%follow%'::text)
                                                        Rows Removed by Filter: 16
                                                  ->  Nested Loop  (cost=3.29..1873.71 rows=303 width=12) (actual time=0.036..25.441 rows=3564 loops=2)
                                                        Join Filter: (cct2.id = cc.status_id)
                                                        Rows Removed by Join Filter: 3564
                                                        ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.004 rows=2 loops=2)
                                                              Filter: ((kind)::text ~~ 'complete%'::text)
                                                              Rows Removed by Filter: 2
                                                        ->  Hash Join  (cost=3.29..1857.51 rows=1212 width=16) (actual time=0.031..12.271 rows=3564 loops=4)
                                                              Hash Cond: (cc.subject_id = cct1.id)
                                                              ->  Merge Join  (cost=2.22..1805.99 rows=4849 width=20) (actual time=0.028..11.392 rows=4849 loops=4)
                                                                    Merge Cond: (ml.movie_id = cc.movie_id)
                                                                    ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.005..4.559 rows=29997 loops=4)
                                                                    ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6332.07 rows=135086 width=12) (actual time=0.005..2.597 rows=9987 loops=4)
                                                              ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                          Filter: ((kind)::text = 'cast'::text)
                                                                          Rows Removed by Filter: 3
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=3 width=12) (actual time=0.003..0.004 rows=4 loops=228)
                                                  Index Cond: (movie_id = cc.movie_id)
                                                  Filter: (note IS NULL)
                                                  Rows Removed by Filter: 3
                                ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=763)
                                      Index Cond: (id = mc.movie_id)
                                      Filter: ((production_year >= 1950) AND (production_year <= 2010))
                          ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.32 rows=46 width=8) (actual time=0.002..0.004 rows=12 loops=763)
                                Index Cond: (movie_id = t.id)
                    ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=9471)
                          Index Cond: (id = mk.keyword_id)
                          Filter: (keyword = 'sequel'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=399)
                    Index Cond: (id = mc.company_id)
                    Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                    Rows Removed by Filter: 1
        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.79 rows=3 width=4) (actual time=0.008..0.010 rows=4 loops=172)
              Index Cond: (movie_id = mk.movie_id)
              Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
              Rows Removed by Filter: 15
Planning time: 46.981 ms
Execution time: 76.980 ms
