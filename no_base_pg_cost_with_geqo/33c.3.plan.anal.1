Aggregate  (cost=3236.10..3236.11 rows=1 width=192) (actual time=337.462..337.463 rows=1 loops=1)
  ->  Nested Loop  (cost=746.78..3236.08 rows=1 width=84) (actual time=41.107..337.372 rows=114 loops=1)
        ->  Nested Loop  (cost=746.64..3235.74 rows=2 width=88) (actual time=2.628..315.765 rows=20134 loops=1)
              Join Filter: (t2.id = mi_idx2.movie_id)
              ->  Nested Loop  (cost=746.21..3232.56 rows=6 width=90) (actual time=2.621..277.931 rows=15007 loops=1)
                    ->  Hash Join  (cost=745.79..3227.65 rows=11 width=75) (actual time=2.618..248.143 rows=17041 loops=1)
                          Hash Cond: (t2.kind_id = kt2.id)
                          ->  Nested Loop  (cost=744.68..3226.10 rows=39 width=79) (actual time=1.468..242.851 rows=21949 loops=1)
                                Join Filter: (ml.linked_movie_id = t2.id)
                                ->  Nested Loop  (cost=744.25..3176.44 rows=93 width=54) (actual time=1.462..158.533 rows=50005 loops=1)
                                      ->  Nested Loop  (cost=743.83..3135.20 rows=93 width=39) (actual time=1.457..70.802 rows=50005 loops=1)
                                            ->  Nested Loop  (cost=743.40..3067.70 rows=17 width=31) (actual time=1.450..34.348 rows=9674 loops=1)
                                                  ->  Nested Loop  (cost=742.97..3057.97 rows=16 width=39) (actual time=1.445..26.458 rows=2064 loops=1)
                                                        Join Filter: (t1.kind_id = kt1.id)
                                                        Rows Removed by Join Filter: 844
                                                        ->  Nested Loop  (cost=742.97..3055.30 rows=55 width=43) (actual time=1.442..25.513 rows=2064 loops=1)
                                                              Join Filter: (ml.movie_id = t1.id)
                                                              ->  Nested Loop  (cost=742.54..3022.83 rows=55 width=18) (actual time=1.435..21.156 rows=2064 loops=1)
                                                                    Join Filter: (mi_idx1.info_type_id = it1.id)
                                                                    Rows Removed by Join Filter: 4128
                                                                    ->  Merge Join  (cost=742.54..2927.54 rows=6192 width=22) (actual time=1.417..18.923 rows=6192 loops=1)
                                                                          Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43804.18 rows=1380035 width=14) (actual time=0.007..9.755 rows=63901 loops=1)
                                                                          ->  Sort  (cost=742.10..747.89 rows=2315 width=8) (actual time=1.383..1.907 rows=6443 loops=1)
                                                                                Sort Key: ml.movie_id
                                                                                Sort Method: quicksort  Memory: 205kB
                                                                                ->  Nested Loop  (cost=37.49..612.73 rows=2315 width=8) (actual time=0.062..0.979 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.001..0.004 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Bitmap Heap Scan on movie_link ml  (cost=37.49..185.08 rows=1875 width=12) (actual time=0.054..0.301 rows=1158 loops=2)
                                                                                            Recheck Cond: (link_type_id = lt.id)
                                                                                            Heap Blocks: exact=191
                                                                                            ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..37.02 rows=1875 width=0) (actual time=0.042..0.042 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                    ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6192)
                                                                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                              ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=2064)
                                                                    Index Cond: (id = mi_idx1.movie_id)
                                                        ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=2064)
                                                              ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=2 width=4) (actual time=0.002..0.005 rows=2 loops=1)
                                                                    Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                                    Rows Removed by Filter: 5
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=5 loops=2064)
                                                        Index Cond: (movie_id = t1.id)
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..3.92 rows=5 width=8) (actual time=0.002..0.003 rows=5 loops=9674)
                                                  Index Cond: (movie_id = ml.linked_movie_id)
                                      ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=50005)
                                            Index Cond: (id = mc2.company_id)
                                ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.001..0.001 rows=0 loops=50005)
                                      Index Cond: (id = mc2.movie_id)
                                      Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                      Rows Removed by Filter: 1
                          ->  Hash  (cost=1.09..1.09 rows=2 width=4) (actual time=0.009..0.009 rows=2 loops=1)
                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.005..0.006 rows=2 loops=1)
                                      Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                      Rows Removed by Filter: 5
                    ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=17041)
                          Index Cond: (id = mc1.company_id)
                          Filter: ((country_code)::text <> '[us]'::text)
                          Rows Removed by Filter: 0
              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.51 rows=2 width=14) (actual time=0.001..0.002 rows=1 loops=15007)
                    Index Cond: (movie_id = mc2.movie_id)
                    Filter: (info < '3.5'::text)
                    Rows Removed by Filter: 2
        ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=20134)
              Index Cond: (id = mi_idx2.info_type_id)
              Filter: ((info)::text = 'rating'::text)
              Rows Removed by Filter: 1
Planning time: 59.488 ms
Execution time: 337.571 ms
