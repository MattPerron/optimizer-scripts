Aggregate  (cost=1252.16..1252.17 rows=1 width=96) (actual time=15.352..15.352 rows=1 loops=1)
  ->  Nested Loop  (cost=378.00..1252.15 rows=1 width=48) (actual time=5.516..15.124 rows=247 loops=1)
        ->  Nested Loop  (cost=377.87..1251.98 rows=1 width=52) (actual time=5.513..14.471 rows=418 loops=1)
              Join Filter: (ml.movie_id = mi.movie_id)
              ->  Nested Loop  (cost=377.43..1250.45 rows=1 width=72) (actual time=5.495..12.735 rows=152 loops=1)
                    ->  Nested Loop  (cost=377.30..1250.29 rows=1 width=76) (actual time=5.489..12.452 rows=152 loops=1)
                          ->  Nested Loop  (cost=377.17..1250.12 rows=1 width=80) (actual time=5.485..12.180 rows=152 loops=1)
                                ->  Nested Loop  (cost=376.75..1209.94 rows=91 width=84) (actual time=5.463..9.206 rows=1216 loops=1)
                                      Join Filter: (ml.movie_id = mk.movie_id)
                                      ->  Nested Loop  (cost=376.32..1206.15 rows=2 width=76) (actual time=5.456..8.153 rows=152 loops=1)
                                            ->  Nested Loop  (cost=375.90..1199.29 rows=15 width=61) (actual time=5.449..7.082 rows=342 loops=1)
                                                  Join Filter: (ml.movie_id = mc.movie_id)
                                                  ->  Nested Loop  (cost=375.47..1192.67 rows=5 width=49) (actual time=5.438..6.663 rows=57 loops=1)
                                                        Join Filter: (ml.movie_id = t.id)
                                                        ->  Merge Join  (cost=375.04..731.44 rows=257 width=28) (actual time=2.180..5.476 rows=257 loops=1)
                                                              Merge Cond: (cc.movie_id = ml.movie_id)
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6339.89 rows=135086 width=12) (actual time=0.010..2.452 rows=5993 loops=1)
                                                              ->  Sort  (cost=374.60..380.39 rows=2315 width=16) (actual time=1.925..2.117 rows=2341 loops=1)
                                                                    Sort Key: ml.movie_id
                                                                    Sort Method: quicksort  Memory: 205kB
                                                                    ->  Nested Loop  (cost=38.82..245.23 rows=2315 width=16) (actual time=0.093..1.293 rows=2315 loops=1)
                                                                          ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=16) (actual time=0.004..0.010 rows=2 loops=1)
                                                                                Filter: ((link)::text ~~ '%follow%'::text)
                                                                                Rows Removed by Filter: 16
                                                                          ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.082..0.437 rows=1158 loops=2)
                                                                                Recheck Cond: (link_type_id = lt.id)
                                                                                Heap Blocks: exact=191
                                                                                ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.067..0.067 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                        ->  Index Scan using title_pkey on title t  (cost=0.43..1.78 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=257)
                                                              Index Cond: (id = cc.movie_id)
                                                              Filter: (production_year = 1998)
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=3 width=12) (actual time=0.003..0.005 rows=6 loops=57)
                                                        Index Cond: (movie_id = cc.movie_id)
                                                        Filter: (note IS NULL)
                                                        Rows Removed by Filter: 1
                                            ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=342)
                                                  Index Cond: (id = mc.company_id)
                                                  Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=45 width=8) (actual time=0.003..0.004 rows=8 loops=152)
                                            Index Cond: (movie_id = mc.movie_id)
                                ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=1216)
                                      Index Cond: (id = mk.keyword_id)
                                      Filter: (keyword = 'sequel'::text)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=152)
                                Index Cond: (id = mc.company_type_id)
                                Filter: ((kind)::text = 'production companies'::text)
                    ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=152)
                          Index Cond: (id = cc.subject_id)
                          Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.51 rows=1 width=4) (actual time=0.008..0.010 rows=3 loops=152)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                    Rows Removed by Filter: 11
        ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=418)
              Index Cond: (id = cc.status_id)
              Filter: ((kind)::text = 'complete'::text)
              Rows Removed by Filter: 0
Planning time: 70.273 ms
Execution time: 15.471 ms
