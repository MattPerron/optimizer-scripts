Aggregate  (cost=24821.79..24821.80 rows=1 width=96) (actual time=520.480..520.480 rows=1 loops=1)
  ->  Nested Loop  (cost=8.95..24821.78 rows=1 width=41) (actual time=8.245..517.546 rows=2851 loops=1)
        Join Filter: (mi.info_type_id = it1.id)
        Rows Removed by Join Filter: 191
        ->  Nested Loop  (cost=8.95..24819.36 rows=1 width=45) (actual time=8.239..506.589 rows=3042 loops=1)
              Join Filter: (t.id = mi.movie_id)
              ->  Nested Loop  (cost=8.51..24817.82 rows=1 width=57) (actual time=4.890..329.573 rows=2958 loops=1)
                    ->  Nested Loop  (cost=8.09..24817.28 rows=1 width=42) (actual time=4.884..313.006 rows=3374 loops=1)
                          Join Filter: (mc.company_type_id = ct.id)
                          Rows Removed by Join Filter: 10122
                          ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.004..0.008 rows=4 loops=1)
                          ->  Materialize  (cost=8.09..24816.12 rows=2 width=46) (actual time=1.220..77.697 rows=3374 loops=4)
                                ->  Nested Loop  (cost=8.09..24816.11 rows=2 width=46) (actual time=4.877..308.138 rows=3374 loops=1)
                                      Join Filter: (t.id = mc.movie_id)
                                      ->  Nested Loop  (cost=7.66..24812.07 rows=7 width=34) (actual time=4.867..273.148 rows=2378 loops=1)
                                            Join Filter: (mi_idx.info_type_id = it2.id)
                                            Rows Removed by Join Filter: 6321
                                            ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                                                  Filter: ((info)::text = 'rating'::text)
                                                  Rows Removed by Filter: 112
                                            ->  Nested Loop  (cost=7.66..24729.99 rows=6373 width=38) (actual time=4.129..271.732 rows=8699 loops=1)
                                                  Join Filter: (t.id = mi_idx.movie_id)
                                                  ->  Nested Loop  (cost=7.23..23862.17 rows=1621 width=25) (actual time=4.120..242.209 rows=4832 loops=1)
                                                        Join Filter: (t.kind_id = kt.id)
                                                        Rows Removed by Join Filter: 2286
                                                        ->  Nested Loop  (cost=7.23..23699.02 rows=5672 width=29) (actual time=4.112..239.128 rows=5606 loops=1)
                                                              ->  Nested Loop  (cost=6.80..7403.56 rows=33271 width=4) (actual time=4.085..90.191 rows=37091 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.234..26.395 rows=3 loops=1)
                                                                          Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                          Rows Removed by Filter: 134167
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.80..1107.44 rows=306 width=8) (actual time=3.265..19.014 rows=12364 loops=3)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=26312
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.73 rows=306 width=0) (actual time=1.681..1.681 rows=12364 loops=3)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2008)
                                                                    Rows Removed by Filter: 1
                                                        ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5606)
                                                              ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.004..0.006 rows=2 loops=1)
                                                                    Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                    Rows Removed by Filter: 5
                                                  ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.004..0.005 rows=2 loops=4832)
                                                        Index Cond: (movie_id = mk.movie_id)
                                                        Filter: (info < '7.0'::text)
                                                        Rows Removed by Filter: 0
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.010..0.014 rows=1 loops=2378)
                                            Index Cond: (movie_id = mk.movie_id)
                                            Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                            Rows Removed by Filter: 10
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.54 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=3374)
                          Index Cond: (id = mc.company_id)
                          Filter: ((country_code)::text <> '[us]'::text)
                          Rows Removed by Filter: 0
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.51 rows=2 width=8) (actual time=0.053..0.059 rows=1 loops=2958)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (info = ANY ('{Germany,German,USA,American}'::text[]))
                    Rows Removed by Filter: 155
        ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=3042)
              Filter: ((info)::text = 'countries'::text)
              Rows Removed by Filter: 14
Planning time: 31.021 ms
Execution time: 520.629 ms
