Aggregate  (cost=9913.99..9914.00 rows=1 width=96) (actual time=602.171..602.171 rows=1 loops=1)
  ->  Nested Loop  (cost=10.37..9913.98 rows=1 width=48) (actual time=70.587..601.901 rows=275 loops=1)
        Join Filter: (ci.person_id = n.id)
        ->  Nested Loop  (cost=9.94..9910.26 rows=2 width=41) (actual time=1.861..583.622 rows=6518 loops=1)
              ->  Nested Loop  (cost=9.51..9909.25 rows=1 width=37) (actual time=1.847..573.805 rows=2748 loops=1)
                    Join Filter: (ci.role_id = rt.id)
                    Rows Removed by Join Filter: 10860
                    ->  Nested Loop  (cost=9.51..9908.09 rows=1 width=41) (actual time=1.660..545.565 rows=13608 loops=1)
                          Join Filter: (it.id = mi.info_type_id)
                          ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.020 rows=1 loops=1)
                                Filter: ((info)::text = 'release dates'::text)
                                Rows Removed by Filter: 112
                          ->  Nested Loop  (cost=9.51..9905.66 rows=1 width=45) (actual time=1.650..542.474 rows=13608 loops=1)
                                Join Filter: (t.id = mi.movie_id)
                                ->  Nested Loop  (cost=9.08..9686.59 rows=7 width=57) (actual time=1.633..309.488 rows=7195 loops=1)
                                      ->  Nested Loop  (cost=8.65..9662.17 rows=14 width=45) (actual time=1.617..281.057 rows=7316 loops=1)
                                            Join Filter: (t.id = ci.movie_id)
                                            ->  Nested Loop  (cost=8.08..7905.72 rows=43 width=29) (actual time=1.111..115.069 rows=1576 loops=1)
                                                  ->  Nested Loop  (cost=7.66..7733.22 rows=117 width=33) (actual time=1.096..93.637 rows=5566 loops=1)
                                                        Join Filter: (t.id = mc.movie_id)
                                                        ->  Nested Loop  (cost=7.23..7342.31 rows=113 width=25) (actual time=1.075..85.839 rows=495 loops=1)
                                                              ->  Nested Loop  (cost=6.80..6146.35 rows=746 width=4) (actual time=0.911..41.268 rows=9696 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.012..23.730 rows=3 loops=1)
                                                                          Filter: (keyword = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                          Rows Removed by Filter: 134167
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.80..1114.45 rows=306 width=8) (actual time=0.861..5.248 rows=3232 loops=3)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=7446
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.73 rows=306 width=0) (actual time=0.470..0.470 rows=3232 loops=3)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=9696)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2010)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.40 rows=5 width=8) (actual time=0.006..0.012 rows=11 loops=495)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                  ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=5566)
                                                        Index Cond: (id = mc.company_id)
                                                        Filter: ((country_code)::text = '[us]'::text)
                                                        Rows Removed by Filter: 1
                                            ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..40.84 rows=1 width=16) (actual time=0.067..0.103 rows=5 loops=1576)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                  Rows Removed by Filter: 136
                                      ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.74 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=7316)
                                            Index Cond: (id = ci.person_role_id)
                                ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..31.28 rows=1 width=8) (actual time=0.007..0.032 rows=2 loops=7195)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%201%'::text) OR (info ~~ 'USA:%201%'::text)))
                                      Rows Removed by Filter: 77
                    ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=13608)
                          Filter: ((role)::text = 'actress'::text)
                          Rows Removed by Filter: 9
              ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..0.99 rows=2 width=4) (actual time=0.002..0.003 rows=2 loops=2748)
                    Index Cond: (person_id = ci.person_id)
                    Heap Fetches: 0
        ->  Index Scan using name_pkey on name n  (cost=0.43..1.85 rows=1 width=19) (actual time=0.002..0.002 rows=0 loops=6518)
              Index Cond: (id = an.person_id)
              Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
              Rows Removed by Filter: 1
Planning time: 73.320 ms
Execution time: 602.314 ms
