Aggregate  (cost=3125.04..3125.05 rows=1 width=192) (actual time=38.083..38.083 rows=1 loops=1)
  ->  Nested Loop  (cost=745.53..3125.03 rows=1 width=82) (actual time=6.678..38.066 rows=8 loops=1)
        ->  Nested Loop  (cost=745.11..3124.58 rows=1 width=67) (actual time=6.667..37.966 rows=28 loops=1)
              ->  Nested Loop  (cost=744.68..3123.97 rows=1 width=75) (actual time=6.661..37.908 rows=10 loops=1)
                    ->  Nested Loop  (cost=744.26..3123.53 rows=1 width=60) (actual time=6.654..37.859 rows=10 loops=1)
                          Join Filter: (t2.id = mc2.movie_id)
                          ->  Nested Loop  (cost=743.83..3122.79 rows=1 width=68) (actual time=6.645..37.820 rows=5 loops=1)
                                Join Filter: (it2.id = mi_idx2.info_type_id)
                                Rows Removed by Join Filter: 90
                                ->  Nested Loop  (cost=743.40..3122.19 rows=1 width=63) (actual time=2.185..37.430 rows=71 loops=1)
                                      Join Filter: (kt2.id = t2.kind_id)
                                      Rows Removed by Join Filter: 31
                                      ->  Nested Loop  (cost=742.97..3086.29 rows=8 width=46) (actual time=1.779..32.998 rows=1220 loops=1)
                                            Join Filter: (kt1.id = t1.kind_id)
                                            Rows Removed by Join Filter: 844
                                            ->  Nested Loop  (cost=742.97..3083.29 rows=54 width=46) (actual time=1.774..31.788 rows=2064 loops=1)
                                                  Join Filter: (ml.movie_id = t1.id)
                                                  ->  Nested Loop  (cost=742.54..3051.41 rows=54 width=21) (actual time=1.766..25.853 rows=2064 loops=1)
                                                        ->  Nested Loop  (cost=742.54..3048.32 rows=54 width=17) (actual time=1.754..24.831 rows=2064 loops=1)
                                                              Join Filter: (mi_idx1.info_type_id = it1.id)
                                                              Rows Removed by Join Filter: 4128
                                                              ->  Merge Join  (cost=742.54..2954.57 rows=6089 width=21) (actual time=1.731..22.353 rows=6192 loops=1)
                                                                    Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43811.53 rows=1380035 width=13) (actual time=0.009..11.674 rows=63901 loops=1)
                                                                    ->  Sort  (cost=742.10..747.89 rows=2315 width=8) (actual time=1.689..2.339 rows=6443 loops=1)
                                                                          Sort Key: ml.movie_id
                                                                          Sort Method: quicksort  Memory: 205kB
                                                                          ->  Nested Loop  (cost=37.49..612.73 rows=2315 width=8) (actual time=0.099..1.198 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.005..0.011 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=37.49..185.08 rows=1875 width=12) (actual time=0.086..0.403 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..37.02 rows=1875 width=0) (actual time=0.071..0.071 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                              ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6192)
                                                                    ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                        ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=2064)
                                                              ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                    Filter: ((info)::text = 'rating'::text)
                                                                    Rows Removed by Filter: 112
                                                  ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=2064)
                                                        Index Cond: (id = mi_idx1.movie_id)
                                            ->  Materialize  (cost=0.00..2.19 rows=1 width=8) (actual time=0.000..0.000 rows=1 loops=2064)
                                                  ->  Nested Loop  (cost=0.00..2.18 rows=1 width=8) (actual time=0.004..0.006 rows=1 loops=1)
                                                        ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'tv series'::text)
                                                              Rows Removed by Filter: 6
                                                        ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'tv series'::text)
                                                              Rows Removed by Filter: 6
                                      ->  Index Scan using title_pkey on title t2  (cost=0.43..4.48 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=1220)
                                            Index Cond: (id = ml.linked_movie_id)
                                            Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                            Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.59 rows=1 width=13) (actual time=0.004..0.005 rows=1 loops=71)
                                      Index Cond: (movie_id = t2.id)
                                      Filter: (info < '3.0'::text)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.67 rows=5 width=8) (actual time=0.005..0.007 rows=2 loops=5)
                                Index Cond: (movie_id = mi_idx2.movie_id)
                    ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=10)
                          Index Cond: (id = mc2.company_id)
              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.003..0.005 rows=3 loops=10)
                    Index Cond: (movie_id = t1.id)
        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=28)
              Index Cond: (id = mc1.company_id)
              Filter: ((country_code)::text = '[us]'::text)
              Rows Removed by Filter: 1
Planning time: 89.077 ms
Execution time: 38.220 ms
