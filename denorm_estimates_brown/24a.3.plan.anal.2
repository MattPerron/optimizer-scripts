Aggregate  (cost=17893.20..17893.21 rows=1 width=96) (actual time=2262.117..2262.117 rows=1 loops=1)
  ->  Nested Loop  (cost=10.37..17893.19 rows=1 width=48) (actual time=172.725..2261.874 rows=275 loops=1)
        Join Filter: (n.id = an.person_id)
        ->  Nested Loop  (cost=9.94..17892.18 rows=1 width=56) (actual time=49.793..2261.297 rows=141 loops=1)
              ->  Nested Loop  (cost=9.52..17890.70 rows=1 width=60) (actual time=49.492..2259.670 rows=300 loops=1)
                    Join Filter: (rt.id = ci.role_id)
                    ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.005..0.012 rows=1 loops=1)
                          Filter: ((role)::text = 'actress'::text)
                          Rows Removed by Filter: 11
                    ->  Nested Loop  (cost=9.52..17889.54 rows=1 width=64) (actual time=49.485..2259.541 rows=300 loops=1)
                          ->  Nested Loop  (cost=9.09..17887.79 rows=1 width=52) (actual time=49.475..2258.408 rows=303 loops=1)
                                ->  Nested Loop  (cost=8.66..17885.94 rows=1 width=33) (actual time=1.246..2145.913 rows=36400 loops=1)
                                      Join Filter: (t.id = ci.movie_id)
                                      ->  Nested Loop  (cost=8.10..17845.09 rows=1 width=37) (actual time=0.958..471.819 rows=13560 loops=1)
                                            Join Filter: (it.id = mi.info_type_id)
                                            ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.004..0.018 rows=1 loops=1)
                                                  Filter: ((info)::text = 'release dates'::text)
                                                  Rows Removed by Filter: 112
                                            ->  Nested Loop  (cost=8.10..17842.10 rows=46 width=41) (actual time=0.953..467.797 rows=13560 loops=1)
                                                  Join Filter: (t.id = mi.movie_id)
                                                  ->  Nested Loop  (cost=7.66..8359.36 rows=303 width=33) (actual time=0.942..97.423 rows=5566 loops=1)
                                                        Join Filter: (t.id = mc.movie_id)
                                                        ->  Nested Loop  (cost=7.23..7342.31 rows=294 width=25) (actual time=0.933..85.183 rows=495 loops=1)
                                                              ->  Nested Loop  (cost=6.80..6146.35 rows=746 width=4) (actual time=0.870..41.736 rows=9696 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.011..23.821 rows=3 loops=1)
                                                                          Filter: (keyword = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                          Rows Removed by Filter: 134167
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.80..1114.45 rows=306 width=8) (actual time=0.856..5.371 rows=3232 loops=3)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=7446
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.73 rows=306 width=0) (actual time=0.465..0.465 rows=3232 loops=3)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=9696)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2010)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.40 rows=5 width=8) (actual time=0.006..0.020 rows=11 loops=495)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                  ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..31.28 rows=1 width=8) (actual time=0.016..0.065 rows=2 loops=5566)
                                                        Index Cond: (movie_id = mk.movie_id)
                                                        Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%201%'::text) OR (info ~~ 'USA:%201%'::text)))
                                                        Rows Removed by Filter: 175
                                      ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..40.84 rows=1 width=16) (actual time=0.080..0.122 rows=3 loops=13560)
                                            Index Cond: (movie_id = mk.movie_id)
                                            Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                            Rows Removed by Filter: 192
                                ->  Index Scan using name_pkey on name n  (cost=0.43..1.86 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=36400)
                                      Index Cond: (id = ci.person_id)
                                      Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                      Rows Removed by Filter: 1
                          ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.74 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=303)
                                Index Cond: (id = ci.person_role_id)
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=300)
                    Index Cond: (id = mc.company_id)
                    Filter: ((country_code)::text = '[us]'::text)
                    Rows Removed by Filter: 1
        ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..0.99 rows=2 width=4) (actual time=0.003..0.003 rows=2 loops=141)
              Index Cond: (person_id = ci.person_id)
              Heap Fetches: 0
Planning time: 73.403 ms
Execution time: 2262.267 ms
