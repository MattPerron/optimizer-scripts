Aggregate  (cost=14201.83..14201.84 rows=1 width=96) (actual time=284.985..284.985 rows=1 loops=1)
  ->  Nested Loop  (cost=8.73..14201.43 rows=54 width=60) (actual time=23.888..270.086 rows=14899 loops=1)
        ->  Nested Loop  (cost=8.31..14185.17 rows=36 width=45) (actual time=23.882..232.297 rows=14916 loops=1)
              Join Filter: (ml.link_type_id = lt.id)
              Rows Removed by Join Filter: 92227
              ->  Nested Loop  (cost=8.31..14174.71 rows=36 width=49) (actual time=23.876..211.038 rows=14916 loops=1)
                    Join Filter: (ml.movie_id = t.id)
                    ->  Hash Join  (cost=7.88..14154.62 rows=40 width=44) (actual time=23.865..171.840 rows=14916 loops=1)
                          Hash Cond: (mc.company_type_id = ct.id)
                          ->  Merge Join  (cost=6.80..13759.81 rows=37835 width=48) (actual time=23.846..165.832 rows=15510 loops=1)
                                Merge Cond: (ml.movie_id = mc.movie_id)
                                ->  Merge Join  (cost=3.89..8433.12 rows=13677 width=12) (actual time=23.564..120.939 rows=1460 loops=1)
                                      Merge Cond: (mk.movie_id = ml.movie_id)
                                      ->  Nested Loop  (cost=0.43..348327.44 rows=45538 width=4) (actual time=23.496..111.193 rows=481 loops=1)
                                            Join Filter: (k.id = mk.keyword_id)
                                            Rows Removed by Join Filter: 293159
                                            ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..141957.51 rows=4523930 width=8) (actual time=0.008..20.452 rows=98055 loops=1)
                                            ->  Materialize  (cost=0.00..2793.85 rows=3 width=4) (actual time=0.000..0.001 rows=3 loops=98055)
                                                  ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.992..23.103 rows=3 loops=1)
                                                        Filter: (keyword = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                                        Rows Removed by Filter: 134167
                                      ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.009..6.491 rows=30043 loops=1)
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..131330.02 rows=1337700 width=36) (actual time=0.006..37.096 rows=57212 loops=1)
                                      Filter: (note IS NOT NULL)
                                      Rows Removed by Filter: 45333
                          ->  Hash  (cost=1.05..1.05 rows=3 width=4) (actual time=0.011..0.011 rows=3 loops=1)
                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=3 width=4) (actual time=0.007..0.009 rows=3 loops=1)
                                      Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                                      Rows Removed by Filter: 1
                    ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=14916)
                          Index Cond: (id = mk.movie_id)
                          Filter: (production_year > 1950)
              ->  Materialize  (cost=0.00..1.27 rows=18 width=4) (actual time=0.000..0.000 rows=7 loops=14916)
                    ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=4) (actual time=0.003..0.008 rows=16 loops=1)
        ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=14916)
              Index Cond: (id = mc.company_id)
              Filter: ((country_code)::text <> '[pl]'::text)
              Rows Removed by Filter: 0
Planning time: 5.458 ms
Execution time: 285.079 ms
