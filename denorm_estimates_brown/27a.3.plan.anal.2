Aggregate  (cost=845.04..845.05 rows=1 width=96) (actual time=37.699..37.699 rows=1 loops=1)
  ->  Nested Loop  (cost=378.67..845.03 rows=1 width=48) (actual time=2.590..37.249 rows=477 loops=1)
        ->  Hash Join  (cost=378.25..834.86 rows=23 width=52) (actual time=2.578..21.605 rows=6483 loops=1)
              Hash Cond: (mc.company_type_id = ct.id)
              ->  Nested Loop  (cost=377.19..832.85 rows=91 width=56) (actual time=2.563..19.408 rows=6768 loops=1)
                    Join Filter: (ml.movie_id = mk.movie_id)
                    ->  Nested Loop  (cost=376.76..829.05 rows=2 width=72) (actual time=2.556..14.263 rows=762 loops=1)
                          Join Filter: (ml.movie_id = mi.movie_id)
                          ->  Nested Loop  (cost=376.32..819.13 rows=5 width=68) (actual time=2.142..9.491 rows=290 loops=1)
                                ->  Nested Loop  (cost=375.90..804.04 rows=33 width=53) (actual time=1.959..7.094 rows=780 loops=1)
                                      Join Filter: (ml.movie_id = mc.movie_id)
                                      ->  Nested Loop  (cost=375.47..796.67 rows=11 width=41) (actual time=1.949..5.949 rows=179 loops=1)
                                            Join Filter: (ml.movie_id = t.id)
                                            ->  Nested Loop  (cost=375.04..739.16 rows=32 width=20) (actual time=1.941..5.240 rows=189 loops=1)
                                                  Join Filter: (cc.subject_id = cct1.id)
                                                  Rows Removed by Join Filter: 29
                                                  ->  Nested Loop  (cost=375.04..736.35 rows=64 width=24) (actual time=1.937..5.151 rows=189 loops=1)
                                                        Join Filter: (cc.status_id = cct2.id)
                                                        Rows Removed by Join Filter: 68
                                                        ->  Merge Join  (cost=375.04..731.44 rows=257 width=28) (actual time=1.932..5.015 rows=257 loops=1)
                                                              Merge Cond: (cc.movie_id = ml.movie_id)
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6339.89 rows=135086 width=12) (actual time=0.008..2.210 rows=5993 loops=1)
                                                              ->  Sort  (cost=374.60..380.39 rows=2315 width=16) (actual time=1.693..1.873 rows=2341 loops=1)
                                                                    Sort Key: ml.movie_id
                                                                    Sort Method: quicksort  Memory: 205kB
                                                                    ->  Nested Loop  (cost=38.82..245.23 rows=2315 width=16) (actual time=0.086..1.121 rows=2315 loops=1)
                                                                          ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=16) (actual time=0.002..0.007 rows=2 loops=1)
                                                                                Filter: ((link)::text ~~ '%follow%'::text)
                                                                                Rows Removed by Filter: 16
                                                                          ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.078..0.375 rows=1158 loops=2)
                                                                                Recheck Cond: (link_type_id = lt.id)
                                                                                Heap Blocks: exact=191
                                                                                ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.063..0.063 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                        ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=257)
                                                              ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'complete'::text)
                                                                    Rows Removed by Filter: 3
                                                  ->  Materialize  (cost=0.00..1.06 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=189)
                                                        ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.002..0.003 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                            ->  Index Scan using title_pkey on title t  (cost=0.43..1.78 rows=1 width=21) (actual time=0.003..0.003 rows=1 loops=189)
                                                  Index Cond: (id = cc.movie_id)
                                                  Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                                  Rows Removed by Filter: 0
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.63 rows=3 width=12) (actual time=0.003..0.005 rows=4 loops=179)
                                            Index Cond: (movie_id = t.id)
                                            Filter: (note IS NULL)
                                            Rows Removed by Filter: 2
                                ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=780)
                                      Index Cond: (id = mc.company_id)
                                      Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                                      Rows Removed by Filter: 1
                          ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.97 rows=1 width=4) (actual time=0.013..0.015 rows=3 loops=290)
                                Index Cond: (movie_id = mc.movie_id)
                                Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                Rows Removed by Filter: 23
                    ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=45 width=8) (actual time=0.002..0.004 rows=9 loops=762)
                          Index Cond: (movie_id = mc.movie_id)
              ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                    ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                          Filter: ((kind)::text = 'production companies'::text)
                          Rows Removed by Filter: 3
        ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=6483)
              Index Cond: (id = mk.keyword_id)
              Filter: (keyword = 'sequel'::text)
              Rows Removed by Filter: 1
Planning time: 69.945 ms
Execution time: 37.820 ms
