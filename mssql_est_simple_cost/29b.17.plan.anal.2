Aggregate  (cost=140782.33..140783.33 rows=1 width=96) (actual time=13.315..13.315 rows=1 loops=1)
  ->  Nested Loop  (cost=139423.33..140782.33 rows=15 width=48) (actual time=12.203..13.308 rows=15 loops=1)
        ->  Nested Loop  (cost=139423.33..140752.33 rows=15 width=45) (actual time=12.199..13.282 rows=15 loops=1)
              ->  Nested Loop  (cost=139423.33..140720.33 rows=15 width=49) (actual time=12.197..13.266 rows=15 loops=1)
                    ->  Merge Join  (cost=139423.33..139445.33 rows=15 width=65) (actual time=12.183..12.187 rows=15 loops=1)
                          Merge Cond: (it3.id = pi.info_type_id)
                          ->  Sort  (cost=113.00..113.00 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=1)
                                Sort Key: it3.id
                                Sort Method: quicksort  Memory: 25kB
                                ->  Seq Scan on info_type it3  (cost=0.00..113.00 rows=1 width=4) (actual time=0.007..0.013 rows=1 loops=1)
                                      Filter: ((info)::text = 'height'::text)
                                      Rows Removed by Filter: 112
                          ->  Sort  (cost=139310.33..139310.33 rows=2445 width=69) (actual time=12.010..12.063 rows=1171 loops=1)
                                Sort Key: pi.info_type_id
                                Sort Method: quicksort  Memory: 440kB
                                ->  Nested Loop  (cost=0.00..139310.33 rows=2445 width=69) (actual time=1.153..11.416 rows=2445 loops=1)
                                      ->  Nested Loop  (cost=0.00..138185.33 rows=15 width=61) (actual time=1.149..10.668 rows=15 loops=1)
                                            ->  Nested Loop  (cost=0.00..138154.33 rows=15 width=65) (actual time=1.147..10.649 rows=15 loops=1)
                                                  ->  Nested Loop  (cost=0.00..137492.33 rows=330 width=53) (actual time=0.948..10.032 rows=330 loops=1)
                                                        ->  Nested Loop  (cost=0.00..136352.33 rows=190 width=49) (actual time=0.936..9.562 rows=190 loops=1)
                                                              ->  Nested Loop  (cost=0.00..135987.33 rows=5 width=33) (actual time=0.931..8.937 rows=5 loops=1)
                                                                    ->  Nested Loop  (cost=0.00..135943.33 rows=22 width=37) (actual time=0.928..8.886 rows=22 loops=1)
                                                                          ->  Nested Loop  (cost=0.00..135928.33 rows=1 width=29) (actual time=0.924..8.875 rows=1 loops=1)
                                                                                ->  Nested Loop  (cost=0.00..135924.33 rows=1 width=33) (actual time=0.922..8.873 rows=1 loops=1)
                                                                                      ->  Nested Loop  (cost=0.00..135920.33 rows=1 width=37) (actual time=0.921..8.871 rows=1 loops=1)
                                                                                            ->  Nested Loop  (cost=0.00..135914.33 rows=1 width=25) (actual time=0.917..8.867 rows=1 loops=1)
                                                                                                  ->  Nested Loop  (cost=0.00..135085.00 rows=414 width=4) (actual time=0.035..7.943 rows=414 loops=1)
                                                                                                        ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=1 width=4) (actual time=0.026..7.675 rows=1 loops=1)
                                                                                                              Filter: (keyword = 'computer-animation'::text)
                                                                                                              Rows Removed by Filter: 134169
                                                                                                        ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.008..0.223 rows=414 loops=1)
                                                                                                              Index Cond: (keyword_id = k.id)
                                                                                                  ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=414)
                                                                                                        Index Cond: (id = mk.movie_id)
                                                                                                        Filter: ((production_year >= 2000) AND (production_year <= 2005) AND (title = 'Shrek 2'::text))
                                                                                                        Rows Removed by Filter: 1
                                                                                            ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..4.00 rows=2 width=12) (actual time=0.003..0.003 rows=1 loops=1)
                                                                                                  Index Cond: (movie_id = t.id)
                                                                                      ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1)
                                                                                            Index Cond: (id = cc.subject_id)
                                                                                            Filter: ((kind)::text = 'cast'::text)
                                                                                ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1)
                                                                                      Index Cond: (id = cc.status_id)
                                                                                      Filter: ((kind)::text = 'complete+verified'::text)
                                                                          ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=5 width=8) (actual time=0.003..0.008 rows=22 loops=1)
                                                                                Index Cond: (movie_id = t.id)
                                                                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=22)
                                                                          Index Cond: (id = mc.company_id)
                                                                          Filter: ((country_code)::text = '[us]'::text)
                                                                          Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.00..72.00 rows=1 width=16) (actual time=0.003..0.119 rows=38 loops=5)
                                                                    Index Cond: (movie_id = t.id)
                                                                    Filter: (note = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                    Rows Removed by Filter: 191
                                                        ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.00..4.00 rows=2 width=4) (actual time=0.002..0.002 rows=2 loops=190)
                                                              Index Cond: (person_id = ci.person_id)
                                                              Heap Fetches: 330
                                                  ->  Index Scan using char_name_pkey on char_name chn  (cost=0.00..2.00 rows=1 width=20) (actual time=0.002..0.002 rows=0 loops=330)
                                                        Index Cond: (id = ci.person_role_id)
                                                        Filter: (name = 'Queen'::text)
                                                        Rows Removed by Filter: 1
                                            ->  Index Scan using role_type_pkey on role_type rt  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=15)
                                                  Index Cond: (id = ci.role_id)
                                                  Filter: ((role)::text = 'actress'::text)
                                      ->  Index Scan using person_id_person_info on person_info pi  (cost=0.00..50.00 rows=25 width=8) (actual time=0.002..0.027 rows=163 loops=15)
                                            Index Cond: (person_id = ci.person_id)
                    ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=1 width=8) (actual time=0.008..0.072 rows=1 loops=15)
                          Index Cond: (movie_id = t.id)
                          Filter: (info ~~ 'USA:%200%'::text)
                          Rows Removed by Filter: 456
              ->  Index Scan using info_type_pkey on info_type it  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=15)
                    Index Cond: (id = mi.info_type_id)
                    Filter: ((info)::text = 'release dates'::text)
        ->  Index Scan using name_pkey on name n  (cost=0.00..2.00 rows=1 width=19) (actual time=0.001..0.001 rows=1 loops=15)
              Index Cond: (id = ci.person_id)
              Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
Planning time: 74.016 ms
Execution time: 13.406 ms
