Aggregate  (cost=30441.00..30442.00 rows=1 width=192) (actual time=10.362..10.362 rows=1 loops=1)
  ->  Nested Loop  (cost=28569.00..30441.00 rows=1 width=82) (actual time=10.250..10.354 rows=4 loops=1)
        ->  Nested Loop  (cost=28569.00..30405.00 rows=18 width=67) (actual time=10.229..10.322 rows=14 loops=1)
              ->  Nested Loop  (cost=28569.00..30226.00 rows=89 width=71) (actual time=10.223..10.279 rows=42 loops=1)
                    ->  Hash Join  (cost=28569.00..29956.00 rows=30 width=74) (actual time=10.207..10.229 rows=14 loops=1)
                          Hash Cond: (t1.kind_id = kt1.id)
                          ->  Nested Loop  (cost=28561.00..29795.00 rows=178 width=78) (actual time=10.191..10.209 rows=14 loops=1)
                                ->  Merge Join  (cost=28561.00..28565.00 rows=82 width=70) (actual time=10.185..10.187 rows=6 loops=1)
                                      Merge Cond: (mi_idx2.info_type_id = it2.id)
                                      ->  Sort  (cost=28448.00..28448.00 rows=412 width=74) (actual time=10.156..10.160 rows=60 loops=1)
                                            Sort Key: mi_idx2.info_type_id
                                            Sort Method: quicksort  Memory: 33kB
                                            ->  Nested Loop  (cost=8.00..28448.00 rows=412 width=74) (actual time=0.793..10.130 rows=60 loops=1)
                                                  ->  Nested Loop  (cost=8.00..27524.00 rows=462 width=59) (actual time=0.785..9.984 rows=60 loops=1)
                                                        ->  Nested Loop  (cost=8.00..24629.00 rows=193 width=67) (actual time=0.779..9.885 rows=21 loops=1)
                                                              ->  Hash Join  (cost=8.00..24461.00 rows=24 width=54) (actual time=0.166..9.793 rows=20 loops=1)
                                                                    Hash Cond: (t2.kind_id = kt2.id)
                                                                    ->  Nested Loop  (cost=0.00..24330.00 rows=143 width=58) (actual time=0.160..9.778 rows=37 loops=1)
                                                                          ->  Nested Loop  (cost=0.00..18018.00 rows=3156 width=33) (actual time=0.024..4.786 rows=2315 loops=1)
                                                                                ->  Nested Loop  (cost=0.00..11268.00 rows=3375 width=8) (actual time=0.018..0.868 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..18.00 rows=2 width=4) (actual time=0.004..0.008 rows=2 loops=1)
                                                                                            Filter: ((link)::text ~~ '%follow%'::text)
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Index Scan using link_type_id_movie_link on movie_link ml  (cost=0.00..3750.00 rows=1875 width=12) (actual time=0.009..0.288 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                                ->  Index Scan using title_pkey on title t1  (cost=0.00..2.00 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=2315)
                                                                                      Index Cond: (id = ml.movie_id)
                                                                          ->  Index Scan using title_pkey on title t2  (cost=0.00..2.00 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2315)
                                                                                Index Cond: (id = ml.linked_movie_id)
                                                                                Filter: (production_year = 2007)
                                                                                Rows Removed by Filter: 1
                                                                    ->  Hash  (cost=7.00..7.00 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                          ->  Seq Scan on kind_type kt2  (cost=0.00..7.00 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                                Filter: ((kind)::text = 'tv series'::text)
                                                                                Rows Removed by Filter: 6
                                                              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.00..6.00 rows=1 width=13) (actual time=0.004..0.004 rows=1 loops=20)
                                                                    Index Cond: (movie_id = t2.id)
                                                                    Filter: (info < '3.0'::text)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.00..10.00 rows=5 width=8) (actual time=0.003..0.004 rows=3 loops=21)
                                                              Index Cond: (movie_id = t2.id)
                                                  ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=60)
                                                        Index Cond: (id = mc2.company_id)
                                      ->  Sort  (cost=113.00..113.00 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=1)
                                            Sort Key: it2.id
                                            Sort Method: quicksort  Memory: 25kB
                                            ->  Seq Scan on info_type it2  (cost=0.00..113.00 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                  Filter: ((info)::text = 'rating'::text)
                                                  Rows Removed by Filter: 112
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.00..10.00 rows=5 width=8) (actual time=0.002..0.003 rows=2 loops=6)
                                      Index Cond: (movie_id = t1.id)
                          ->  Hash  (cost=7.00..7.00 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=1)
                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                ->  Seq Scan on kind_type kt1  (cost=0.00..7.00 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                      Filter: ((kind)::text = 'tv series'::text)
                                      Rows Removed by Filter: 6
                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.00..6.00 rows=3 width=13) (actual time=0.002..0.003 rows=3 loops=14)
                          Index Cond: (movie_id = t1.id)
              ->  Index Scan using info_type_pkey on info_type it1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=42)
                    Index Cond: (id = mi_idx1.info_type_id)
                    Filter: ((info)::text = 'rating'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.00..2.00 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=14)
              Index Cond: (id = mc1.company_id)
              Filter: ((country_code)::text = '[nl]'::text)
              Rows Removed by Filter: 1
Planning time: 60.997 ms
Execution time: 10.473 ms
