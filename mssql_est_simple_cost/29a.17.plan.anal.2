Aggregate  (cost=169296.00..169297.00 rows=1 width=96) (actual time=40.160..40.160 rows=1 loops=1)
  ->  Hash Join  (cost=151759.00..169296.00 rows=1620 width=48) (actual time=28.603..39.823 rows=1620 loops=1)
        Hash Cond: (ci.role_id = rt.id)
        ->  Hash Join  (cost=151746.00..167798.00 rows=1620 width=52) (actual time=28.592..39.527 rows=1620 loops=1)
              Hash Cond: (mi.info_type_id = it.id)
              ->  Nested Loop  (cost=151632.00..166078.00 rows=1620 width=56) (actual time=28.580..39.224 rows=1620 loops=1)
                    ->  Merge Join  (cost=151632.00..151822.00 rows=7128 width=60) (actual time=28.529..30.101 rows=7128 loops=1)
                          Merge Cond: (pi.info_type_id = it3.id)
                          ->  Sort  (cost=151519.00..151519.00 rows=21516 width=64) (actual time=28.153..28.670 rows=9637 loops=1)
                                Sort Key: pi.info_type_id
                                Sort Method: quicksort  Memory: 2449kB
                                ->  Nested Loop  (cost=0.00..151519.00 rows=21516 width=64) (actual time=1.225..23.311 rows=21516 loops=1)
                                      ->  Nested Loop  (cost=0.00..141619.00 rows=132 width=72) (actual time=1.219..17.163 rows=132 loops=1)
                                            ->  Nested Loop  (cost=0.00..141355.00 rows=44 width=68) (actual time=1.214..17.009 rows=44 loops=1)
                                                  ->  Nested Loop  (cost=0.00..139485.00 rows=22 width=84) (actual time=1.198..14.815 rows=22 loops=1)
                                                        ->  Nested Loop  (cost=0.00..139439.00 rows=22 width=72) (actual time=1.193..14.754 rows=22 loops=1)
                                                              ->  Nested Loop  (cost=0.00..137767.00 rows=836 width=53) (actual time=1.101..13.003 rows=836 loops=1)
                                                                    ->  Nested Loop  (cost=0.00..136161.00 rows=22 width=37) (actual time=1.096..10.402 rows=22 loops=1)
                                                                          ->  Nested Loop  (cost=0.00..136111.00 rows=22 width=41) (actual time=1.094..10.378 rows=22 loops=1)
                                                                                ->  Nested Loop  (cost=0.00..136061.00 rows=22 width=45) (actual time=1.092..10.347 rows=22 loops=1)
                                                                                      ->  Nested Loop  (cost=0.00..135929.00 rows=22 width=33) (actual time=1.088..10.290 rows=22 loops=1)
                                                                                            ->  Nested Loop  (cost=0.00..135914.00 rows=1 width=25) (actual time=1.071..10.261 rows=1 loops=1)
                                                                                                  ->  Nested Loop  (cost=0.00..135085.00 rows=414 width=4) (actual time=0.037..9.187 rows=414 loops=1)
                                                                                                        ->  Seq Scan on keyword k  (cost=0.00..134170.00 rows=1 width=4) (actual time=0.028..8.864 rows=1 loops=1)
                                                                                                              Filter: (keyword = 'computer-animation'::text)
                                                                                                              Rows Removed by Filter: 134169
                                                                                                        ->  Index Scan using keyword_id_movie_keyword on movie_keyword mk  (cost=0.00..610.00 rows=305 width=8) (actual time=0.009..0.275 rows=414 loops=1)
                                                                                                              Index Cond: (keyword_id = k.id)
                                                                                                  ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=414)
                                                                                                        Index Cond: (id = mk.movie_id)
                                                                                                        Filter: ((production_year >= 2000) AND (production_year <= 2010) AND (title = 'Shrek 2'::text))
                                                                                                        Rows Removed by Filter: 1
                                                                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=5 width=8) (actual time=0.017..0.023 rows=22 loops=1)
                                                                                                  Index Cond: (movie_id = t.id)
                                                                                      ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..4.00 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=22)
                                                                                            Index Cond: (movie_id = t.id)
                                                                                ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=22)
                                                                                      Index Cond: (id = cc.subject_id)
                                                                                      Filter: ((kind)::text = 'cast'::text)
                                                                          ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=22)
                                                                                Index Cond: (id = cc.status_id)
                                                                                Filter: ((kind)::text = 'complete+verified'::text)
                                                                    ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.00..72.00 rows=1 width=16) (actual time=0.003..0.113 rows=38 loops=22)
                                                                          Index Cond: (movie_id = t.id)
                                                                          Filter: (note = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                          Rows Removed by Filter: 191
                                                              ->  Index Scan using name_pkey on name n  (cost=0.00..2.00 rows=1 width=19) (actual time=0.002..0.002 rows=0 loops=836)
                                                                    Index Cond: (id = ci.person_id)
                                                                    Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using char_name_pkey on char_name chn  (cost=0.00..2.00 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=22)
                                                              Index Cond: (id = ci.person_role_id)
                                                              Filter: (name = 'Queen'::text)
                                                  ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=1 width=8) (actual time=0.011..0.099 rows=2 loops=22)
                                                        Index Cond: (movie_id = t.id)
                                                        Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%200%'::text) OR (info ~~ 'USA:%200%'::text)))
                                                        Rows Removed by Filter: 455
                                            ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.00..4.00 rows=2 width=4) (actual time=0.002..0.003 rows=3 loops=44)
                                                  Index Cond: (person_id = n.id)
                                                  Heap Fetches: 132
                                      ->  Index Scan using person_id_person_info on person_info pi  (cost=0.00..50.00 rows=25 width=8) (actual time=0.002..0.026 rows=163 loops=132)
                                            Index Cond: (person_id = n.id)
                          ->  Sort  (cost=113.00..113.00 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=1)
                                Sort Key: it3.id
                                Sort Method: quicksort  Memory: 25kB
                                ->  Seq Scan on info_type it3  (cost=0.00..113.00 rows=1 width=4) (actual time=0.006..0.011 rows=1 loops=1)
                                      Filter: ((info)::text = 'trivia'::text)
                                      Rows Removed by Filter: 112
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=7128)
                          Index Cond: (id = mc.company_id)
                          Filter: ((country_code)::text = '[us]'::text)
                          Rows Removed by Filter: 1
              ->  Hash  (cost=113.00..113.00 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                    ->  Seq Scan on info_type it  (cost=0.00..113.00 rows=1 width=4) (actual time=0.004..0.009 rows=1 loops=1)
                          Filter: ((info)::text = 'release dates'::text)
                          Rows Removed by Filter: 112
        ->  Hash  (cost=12.00..12.00 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              ->  Seq Scan on role_type rt  (cost=0.00..12.00 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                    Filter: ((role)::text = 'actress'::text)
                    Rows Removed by Filter: 11
Planning time: 73.890 ms
Execution time: 40.259 ms
