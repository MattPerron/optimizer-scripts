Aggregate  (cost=828966.00..828967.00 rows=1 width=64) (actual time=0.479..0.479 rows=1 loops=1)
  ->  Nested Loop  (cost=0.00..828966.00 rows=10 width=59) (actual time=0.130..0.473 rows=10 loops=1)
        ->  Nested Loop  (cost=0.00..828946.00 rows=10 width=63) (actual time=0.128..0.461 rows=10 loops=1)
              ->  Nested Loop  (cost=0.00..828880.00 rows=33 width=67) (actual time=0.124..0.383 rows=33 loops=1)
                    ->  Nested Loop  (cost=0.00..828850.00 rows=2 width=71) (actual time=0.119..0.362 rows=2 loops=1)
                          ->  Nested Loop  (cost=0.00..828406.00 rows=221 width=75) (actual time=0.052..0.164 rows=221 loops=1)
                                ->  Nested Loop  (cost=0.00..828154.00 rows=2 width=25) (actual time=0.047..0.059 rows=2 loops=1)
                                      ->  Nested Loop  (cost=0.00..828134.00 rows=10 width=4) (actual time=0.017..0.021 rows=10 loops=1)
                                            ->  Seq Scan on info_type it2  (cost=0.00..113.00 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                                  Filter: ((info)::text = 'bottom 10 rank'::text)
                                                  Rows Removed by Filter: 112
                                            ->  Index Scan using info_type_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.00..552014.00 rows=276007 width=8) (actual time=0.004..0.006 rows=10 loops=1)
                                                  Index Cond: (info_type_id = it2.id)
                                      ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=10)
                                            Index Cond: (id = mi_idx.movie_id)
                                            Filter: ((production_year > 2000) AND ((title ~~ 'Birdemic%'::text) OR (title ~~ '%Movie%'::text)))
                                            Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=42 width=50) (actual time=0.004..0.035 rows=110 loops=2)
                                      Index Cond: (movie_id = t.id)
                          ->  Index Scan using info_type_pkey on info_type it1  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=221)
                                Index Cond: (id = mi.info_type_id)
                                Filter: ((info)::text = 'budget'::text)
                                Rows Removed by Filter: 1
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=5 width=12) (actual time=0.004..0.008 rows=16 loops=2)
                          Index Cond: (movie_id = t.id)
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=33)
                    Index Cond: (id = mc.company_id)
                    Filter: ((country_code)::text = '[us]'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using company_type_pkey on company_type ct  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=10)
              Index Cond: (id = mc.company_type_id)
              Filter: ((kind IS NOT NULL) AND (((kind)::text = 'production companies'::text) OR ((kind)::text = 'distributors'::text)))
Planning time: 3.199 ms
Execution time: 0.524 ms
