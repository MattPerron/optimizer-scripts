Aggregate  (cost=66413.00..66414.00 rows=1 width=96) (actual time=33.646..33.646 rows=1 loops=1)
  ->  Nested Loop  (cost=47239.00..66413.00 rows=1 width=48) (actual time=9.567..33.393 rows=743 loops=1)
        ->  Nested Loop  (cost=47239.00..65899.00 rows=256 width=52) (actual time=9.534..18.222 rows=11620 loops=1)
              ->  Nested Loop  (cost=47239.00..60364.00 rows=41 width=68) (actual time=9.527..14.028 rows=1150 loops=1)
                    ->  Hash Join  (cost=47239.00..48967.00 rows=131 width=64) (actual time=9.508..11.033 rows=277 loops=1)
                          Hash Cond: (cc.status_id = cct2.id)
                          ->  Nested Loop  (cost=47233.00..48863.00 rows=131 width=68) (actual time=9.493..10.952 rows=277 loops=1)
                                ->  Merge Join  (cost=47233.00..47559.00 rows=652 width=53) (actual time=9.475..9.662 rows=763 loops=1)
                                      Merge Cond: (ct.id = mc.company_type_id)
                                      ->  Sort  (cost=4.00..4.00 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                            Sort Key: ct.id
                                            Sort Method: quicksort  Memory: 25kB
                                            ->  Seq Scan on company_type ct  (cost=0.00..4.00 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'production companies'::text)
                                                  Rows Removed by Filter: 3
                                      ->  Sort  (cost=47229.00..47229.00 rows=1304 width=57) (actual time=9.452..9.494 rows=864 loops=1)
                                            Sort Key: mc.company_type_id
                                            Sort Method: quicksort  Memory: 140kB
                                            ->  Nested Loop  (cost=32176.00..47229.00 rows=1304 width=57) (actual time=8.311..9.247 rows=864 loops=1)
                                                  ->  Merge Join  (cost=32176.00..32734.00 rows=1115 width=45) (actual time=8.302..8.358 rows=228 loops=1)
                                                        Merge Cond: (cct1.id = cc.subject_id)
                                                        ->  Sort  (cost=4.00..4.00 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                              Sort Key: cct1.id
                                                              Sort Method: quicksort  Memory: 25kB
                                                              ->  Seq Scan on comp_cast_type cct1  (cost=0.00..4.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'cast'::text)
                                                                    Rows Removed by Filter: 3
                                                        ->  Sort  (cost=32172.00..32172.00 rows=2230 width=49) (actual time=8.296..8.308 rows=229 loops=1)
                                                              Sort Key: cc.subject_id
                                                              Sort Method: quicksort  Memory: 49kB
                                                              ->  Nested Loop  (cost=0.00..32172.00 rows=2230 width=49) (actual time=0.602..8.228 rows=257 loops=1)
                                                                    ->  Nested Loop  (cost=0.00..18018.00 rows=2359 width=37) (actual time=0.022..5.417 rows=2248 loops=1)
                                                                          ->  Nested Loop  (cost=0.00..11268.00 rows=3375 width=16) (actual time=0.016..0.883 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..18.00 rows=2 width=16) (actual time=0.003..0.007 rows=2 loops=1)
                                                                                      Filter: ((link)::text ~~ '%follow%'::text)
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Index Scan using link_type_id_movie_link on movie_link ml  (cost=0.00..3750.00 rows=1875 width=8) (actual time=0.009..0.293 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=2315)
                                                                                Index Cond: (id = ml.movie_id)
                                                                                Filter: ((production_year >= 1950) AND (production_year <= 2010))
                                                                                Rows Removed by Filter: 0
                                                                    ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.00..4.00 rows=2 width=12) (actual time=0.001..0.001 rows=0 loops=2248)
                                                                          Index Cond: (movie_id = ml.movie_id)
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.00..10.00 rows=3 width=12) (actual time=0.002..0.003 rows=4 loops=228)
                                                        Index Cond: (movie_id = ml.movie_id)
                                                        Filter: (note IS NULL)
                                                        Rows Removed by Filter: 3
                                ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=1 width=23) (actual time=0.001..0.001 rows=0 loops=763)
                                      Index Cond: (id = mc.company_id)
                                      Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                                      Rows Removed by Filter: 1
                          ->  Hash  (cost=4.00..4.00 rows=2 width=4) (actual time=0.010..0.010 rows=2 loops=1)
                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                ->  Seq Scan on comp_cast_type cct2  (cost=0.00..4.00 rows=2 width=4) (actual time=0.008..0.008 rows=2 loops=1)
                                      Filter: ((kind)::text ~~ 'complete%'::text)
                                      Rows Removed by Filter: 2
                    ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.00..84.00 rows=3 width=4) (actual time=0.009..0.010 rows=4 loops=277)
                          Index Cond: (movie_id = ml.movie_id)
                          Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
                          Rows Removed by Filter: 21
              ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.00..90.00 rows=45 width=8) (actual time=0.001..0.002 rows=10 loops=1150)
                    Index Cond: (movie_id = ml.movie_id)
        ->  Index Scan using keyword_pkey on keyword k  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=11620)
              Index Cond: (id = mk.keyword_id)
              Filter: (keyword = 'sequel'::text)
              Rows Removed by Filter: 1
Planning time: 45.107 ms
Execution time: 33.752 ms
