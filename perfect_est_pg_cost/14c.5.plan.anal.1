Aggregate  (cost=29404.02..29404.03 rows=1 width=64) (actual time=409.464..409.464 rows=1 loops=1)
  ->  Nested Loop  (cost=8.12..29404.01 rows=1 width=22) (actual time=3.054..408.358 rows=4115 loops=1)
        Join Filter: (mi.info_type_id = it1.id)
        Rows Removed by Join Filter: 594
        ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.012 rows=1 loops=1)
              Filter: ((info)::text = 'countries'::text)
              Rows Removed by Filter: 112
        ->  Nested Loop  (cost=8.12..29401.30 rows=24 width=26) (actual time=3.047..407.670 rows=4709 loops=1)
              Join Filter: (t.id = mi.movie_id)
              ->  Nested Loop  (cost=7.68..29375.13 rows=14 width=34) (actual time=3.028..191.950 rows=5949 loops=1)
                    Join Filter: (mi_idx.info_type_id = it2.id)
                    Rows Removed by Join Filter: 11943
                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                          Filter: ((info)::text = 'rating'::text)
                          Rows Removed by Filter: 112
                    ->  Nested Loop  (cost=7.68..29149.07 rows=17892 width=38) (actual time=3.018..190.131 rows=17892 loops=1)
                          Join Filter: (t.id = mi_idx.movie_id)
                          ->  Nested Loop  (cost=7.26..24827.07 rows=8073 width=25) (actual time=3.010..160.481 rows=8073 loops=1)
                                Join Filter: (t.kind_id = kt.id)
                                Rows Removed by Join Filter: 4332
                                ->  Nested Loop  (cost=7.26..24512.25 rows=9739 width=29) (actual time=2.978..157.550 rows=9739 loops=1)
                                      ->  Nested Loop  (cost=6.83..6345.83 rows=37091 width=4) (actual time=2.969..62.175 rows=37091 loops=1)
                                            ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=3 width=4) (actual time=0.867..18.260 rows=3 loops=1)
                                                  Filter: ((keyword IS NOT NULL) AND (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[])))
                                                  Rows Removed by Filter: 134167
                                            ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.83..1125.00 rows=309 width=8) (actual time=2.336..13.342 rows=12364 loops=3)
                                                  Recheck Cond: (keyword_id = k.id)
                                                  Heap Blocks: exact=26312
                                                  ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.75 rows=309 width=0) (actual time=1.221..1.221 rows=12364 loops=3)
                                                        Index Cond: (keyword_id = k.id)
                                      ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=37091)
                                            Index Cond: (id = mk.movie_id)
                                            Filter: (production_year > 2005)
                                            Rows Removed by Filter: 1
                                ->  Materialize  (cost=0.00..22.76 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                      ->  Seq Scan on kind_type kt  (cost=0.00..22.75 rows=2 width=4) (actual time=0.004..0.005 rows=2 loops=1)
                                            Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                            Rows Removed by Filter: 5
                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.003..0.003 rows=2 loops=8073)
                                Index Cond: (movie_id = mk.movie_id)
                                Filter: (info < '8.5'::text)
                                Rows Removed by Filter: 0
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.84 rows=2 width=8) (actual time=0.031..0.036 rows=1 loops=5949)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                    Rows Removed by Filter: 71
Planning time: 3.035 ms
Execution time: 409.527 ms
