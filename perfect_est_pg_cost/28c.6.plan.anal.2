Aggregate  (cost=15415.30..15415.31 rows=1 width=96) (actual time=235.630..235.630 rows=1 loops=1)
  ->  Nested Loop  (cost=3779.85..15415.29 rows=1 width=41) (actual time=38.774..232.734 rows=8373 loops=1)
        ->  Nested Loop  (cost=3779.70..15415.11 rows=1 width=45) (actual time=38.769..224.317 rows=8373 loops=1)
              ->  Nested Loop  (cost=3779.28..15414.62 rows=1 width=30) (actual time=38.763..204.318 rows=8771 loops=1)
                    Join Filter: (t.id = mc.movie_id)
                    ->  Nested Loop  (cost=3778.85..15414.04 rows=1 width=42) (actual time=38.753..192.732 rows=778 loops=1)
                          ->  Nested Loop  (cost=3778.70..15413.86 rows=1 width=46) (actual time=38.749..191.656 rows=871 loops=1)
                                ->  Nested Loop  (cost=3778.55..15413.68 rows=1 width=50) (actual time=38.745..190.366 rows=984 loops=1)
                                      Join Filter: (t.id = mi.movie_id)
                                      ->  Nested Loop  (cost=3778.12..15404.33 rows=5 width=42) (actual time=38.727..134.302 rows=961 loops=1)
                                            Join Filter: (it2.id = mi_idx.info_type_id)
                                            Rows Removed by Join Filter: 1974
                                            ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                                  Filter: ((info)::text = 'rating'::text)
                                                  Rows Removed by Filter: 112
                                            ->  Nested Loop  (cost=3778.12..15395.01 rows=553 width=46) (actual time=38.713..133.958 rows=2935 loops=1)
                                                  Join Filter: (t.id = mi_idx.movie_id)
                                                  ->  Nested Loop  (cost=3777.69..14837.69 rows=1041 width=33) (actual time=38.703..128.896 rows=1041 loops=1)
                                                        ->  Nested Loop  (cost=3777.26..11554.21 rows=6704 width=8) (actual time=38.642..107.647 rows=6704 loops=1)
                                                              Join Filter: (cc.subject_id = cct1.id)
                                                              Rows Removed by Join Filter: 3832
                                                              ->  Seq Scan on comp_cast_type cct1  (cost=0.00..18.88 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'cast'::text)
                                                                    Rows Removed by Filter: 3
                                                              ->  Nested Loop  (cost=3777.26..11403.64 rows=10536 width=12) (actual time=38.639..106.391 rows=10536 loops=1)
                                                                    Join Filter: (cct2.id = cc.status_id)
                                                                    Rows Removed by Join Filter: 9488
                                                                    ->  Seq Scan on comp_cast_type cct2  (cost=0.00..18.88 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                          Filter: ((kind)::text = 'complete'::text)
                                                                          Rows Removed by Filter: 3
                                                                    ->  Hash Join  (cost=3777.26..11134.46 rows=20024 width=16) (actual time=38.634..104.291 rows=20024 loops=1)
                                                                          Hash Cond: (mk.movie_id = cc.movie_id)
                                                                          ->  Nested Loop  (cost=6.83..6345.83 rows=37091 width=4) (actual time=2.854..58.287 rows=37091 loops=1)
                                                                                ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=3 width=4) (actual time=0.837..17.301 rows=3 loops=1)
                                                                                      Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                      Rows Removed by Filter: 134167
                                                                                ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.83..1125.00 rows=309 width=8) (actual time=2.220..12.404 rows=12364 loops=3)
                                                                                      Recheck Cond: (keyword_id = k.id)
                                                                                      Heap Blocks: exact=26312
                                                                                      ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.75 rows=309 width=0) (actual time=1.144..1.144 rows=12364 loops=3)
                                                                                            Index Cond: (keyword_id = k.id)
                                                                          ->  Hash  (cost=2081.86..2081.86 rows=135086 width=12) (actual time=35.484..35.484 rows=135086 loops=1)
                                                                                Buckets: 262144  Batches: 1  Memory Usage: 7853kB
                                                                                ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.007..17.672 rows=135086 loops=1)
                                                        ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=6704)
                                                              Index Cond: (id = mk.movie_id)
                                                              Filter: (production_year > 2005)
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.003..0.004 rows=3 loops=1041)
                                                        Index Cond: (movie_id = mk.movie_id)
                                                        Filter: (info < '8.5'::text)
                                                        Rows Removed by Filter: 0
                                      ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.84 rows=2 width=8) (actual time=0.049..0.058 rows=1 loops=961)
                                            Index Cond: (movie_id = mk.movie_id)
                                            Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                            Rows Removed by Filter: 123
                                ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=984)
                                      Index Cond: (id = mi.info_type_id)
                                      Filter: ((info)::text = 'countries'::text)
                                      Rows Removed by Filter: 0
                          ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.15..0.17 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=871)
                                Index Cond: (id = t.kind_id)
                                Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                Rows Removed by Filter: 0
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.006..0.013 rows=11 loops=778)
                          Index Cond: (movie_id = mk.movie_id)
                          Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                          Rows Removed by Filter: 13
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=8771)
                    Index Cond: (id = mc.company_id)
                    Filter: ((country_code)::text <> '[us]'::text)
                    Rows Removed by Filter: 0
        ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.15..0.17 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=8373)
              Index Cond: (id = mc.company_type_id)
              Heap Fetches: 8373
Planning time: 59.568 ms
Execution time: 235.756 ms
