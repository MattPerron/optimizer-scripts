Aggregate  (cost=47135.05..47135.06 rows=1 width=96) (actual time=437.966..437.966 rows=1 loops=1)
  ->  Nested Loop  (cost=10.39..47135.04 rows=1 width=48) (actual time=42.051..437.851 rows=275 loops=1)
        ->  Nested Loop  (cost=9.96..47131.33 rows=2 width=41) (actual time=1.010..425.979 rows=6518 loops=1)
              ->  Nested Loop  (cost=9.54..47129.23 rows=1 width=37) (actual time=0.998..418.379 rows=2748 loops=1)
                    ->  Nested Loop  (cost=9.11..47127.49 rows=1 width=25) (actual time=0.989..411.763 rows=2778 loops=1)
                          Join Filter: (rt.id = ci.role_id)
                          Rows Removed by Join Filter: 10980
                          ->  Seq Scan on role_type rt  (cost=0.00..18.88 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                Filter: ((role)::text = 'actress'::text)
                                Rows Removed by Filter: 11
                          ->  Nested Loop  (cost=9.11..47108.60 rows=1 width=29) (actual time=0.976..410.692 rows=13758 loops=1)
                                Join Filter: (t.id = ci.movie_id)
                                ->  Nested Loop  (cost=8.54..47068.78 rows=1 width=33) (actual time=0.729..134.045 rows=3406 loops=1)
                                      Join Filter: (it.id = mi.info_type_id)
                                      ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.006..0.013 rows=1 loops=1)
                                            Filter: ((info)::text = 'release dates'::text)
                                            Rows Removed by Filter: 112
                                      ->  Nested Loop  (cost=8.54..47065.53 rows=67 width=37) (actual time=0.722..133.506 rows=3406 loops=1)
                                            Join Filter: (t.id = mi.movie_id)
                                            ->  Nested Loop  (cost=8.11..29218.78 rows=560 width=29) (actual time=0.713..78.225 rows=1576 loops=1)
                                                  ->  Nested Loop  (cost=7.69..26933.51 rows=1550 width=33) (actual time=0.705..62.540 rows=5566 loops=1)
                                                        Join Filter: (t.id = mc.movie_id)
                                                        ->  Nested Loop  (cost=7.26..21722.29 rows=1502 width=25) (actual time=0.698..58.018 rows=495 loops=1)
                                                              ->  Nested Loop  (cost=6.83..6178.12 rows=9696 width=4) (actual time=0.652..29.090 rows=9696 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.012..16.408 rows=3 loops=1)
                                                                          Filter: (keyword = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                          Rows Removed by Filter: 134167
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.83..1125.00 rows=309 width=8) (actual time=0.587..3.882 rows=3232 loops=3)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=7446
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.75 rows=309 width=0) (actual time=0.317..0.317 rows=3232 loops=3)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=9696)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2010)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.41 rows=5 width=8) (actual time=0.004..0.007 rows=11 loops=495)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                  ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=5566)
                                                        Index Cond: (id = mc.company_id)
                                                        Filter: ((country_code)::text = '[us]'::text)
                                                        Rows Removed by Filter: 1
                                            ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..31.86 rows=1 width=8) (actual time=0.009..0.035 rows=2 loops=1576)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%201%'::text) OR (info ~~ 'USA:%201%'::text)))
                                                  Rows Removed by Filter: 131
                                ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.81 rows=1 width=16) (actual time=0.053..0.080 rows=4 loops=3406)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                      Rows Removed by Filter: 169
                    ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.74 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=2778)
                          Index Cond: (id = ci.person_role_id)
              ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.002..0.002 rows=2 loops=2748)
                    Index Cond: (person_id = ci.person_id)
                    Heap Fetches: 6518
        ->  Index Scan using name_pkey on name n  (cost=0.43..1.85 rows=1 width=19) (actual time=0.002..0.002 rows=0 loops=6518)
              Index Cond: (id = ci.person_id)
              Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
              Rows Removed by Filter: 1
Planning time: 49.725 ms
Execution time: 438.079 ms
