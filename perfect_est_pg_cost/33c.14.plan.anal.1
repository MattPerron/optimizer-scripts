Aggregate  (cost=12885.32..12885.33 rows=1 width=192) (actual time=47.489..47.490 rows=1 loops=1)
  ->  Nested Loop  (cost=621.61..12883.61 rows=114 width=82) (actual time=6.525..47.407 rows=114 loops=1)
        ->  Nested Loop  (cost=621.19..12833.06 rows=114 width=67) (actual time=6.521..47.190 rows=114 loops=1)
              ->  Nested Loop  (cost=620.76..12802.38 rows=46 width=75) (actual time=6.515..47.033 rows=46 loops=1)
                    Join Filter: (mi_idx2.info_type_id = it2.id)
                    Rows Removed by Join Filter: 4040
                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.016 rows=1 loops=1)
                          Filter: ((info)::text = 'rating'::text)
                          Rows Removed by Filter: 112
                    ->  Nested Loop  (cost=620.76..12748.89 rows=4086 width=79) (actual time=1.535..46.712 rows=4086 loops=1)
                          Join Filter: (t1.kind_id = kt1.id)
                          Rows Removed by Join Filter: 3080
                          ->  Nested Loop  (cost=620.76..12603.59 rows=4086 width=83) (actual time=1.532..45.341 rows=4086 loops=1)
                                ->  Nested Loop  (cost=620.34..10589.05 rows=4518 width=68) (actual time=1.525..37.392 rows=4518 loops=1)
                                      ->  Nested Loop  (cost=619.91..9941.55 rows=1064 width=76) (actual time=1.518..34.024 rows=1064 loops=1)
                                            Join Filter: (ml.movie_id = t1.id)
                                            ->  Nested Loop  (cost=619.48..9313.36 rows=1064 width=51) (actual time=1.513..32.172 rows=1064 loops=1)
                                                  Join Filter: (kt2.id = t2.kind_id)
                                                  Rows Removed by Join Filter: 1080
                                                  ->  Nested Loop  (cost=619.48..9253.48 rows=1238 width=55) (actual time=1.271..31.703 rows=1238 loops=1)
                                                        Join Filter: (ml.linked_movie_id = t2.id)
                                                        ->  Nested Loop  (cost=619.05..7163.47 rows=2904 width=30) (actual time=1.262..24.765 rows=2904 loops=1)
                                                              ->  Nested Loop  (cost=618.62..2889.78 rows=2064 width=17) (actual time=1.251..18.234 rows=2064 loops=1)
                                                                    Join Filter: (it1.id = mi_idx1.info_type_id)
                                                                    Rows Removed by Join Filter: 4128
                                                                    ->  Merge Join  (cost=618.62..2794.48 rows=6192 width=21) (actual time=1.235..16.631 rows=6192 loops=1)
                                                                          Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43815.31 rows=1380035 width=13) (actual time=0.007..9.533 rows=63901 loops=1)
                                                                          ->  Sort  (cost=618.18..623.97 rows=2315 width=8) (actual time=1.202..1.569 rows=6443 loops=1)
                                                                                Sort Key: ml.movie_id
                                                                                Sort Method: quicksort  Memory: 205kB
                                                                                ->  Nested Loop  (cost=38.82..488.81 rows=2315 width=8) (actual time=0.068..0.835 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..19.76 rows=2 width=4) (actual time=0.004..0.007 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.057..0.282 rows=1158 loops=2)
                                                                                            Recheck Cond: (link_type_id = lt.id)
                                                                                            Heap Blocks: exact=191
                                                                                            ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.045..0.045 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                    ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6192)
                                                                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=2 width=13) (actual time=0.002..0.003 rows=1 loops=2064)
                                                                    Index Cond: (movie_id = ml.linked_movie_id)
                                                                    Filter: (info < '3.5'::text)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using title_pkey on title t2  (cost=0.43..0.71 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2904)
                                                              Index Cond: (id = mi_idx2.movie_id)
                                                              Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                              Rows Removed by Filter: 1
                                                  ->  Materialize  (cost=0.00..22.76 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=1238)
                                                        ->  Seq Scan on kind_type kt2  (cost=0.00..22.75 rows=2 width=4) (actual time=0.005..0.005 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                              Rows Removed by Filter: 5
                                            ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=1064)
                                                  Index Cond: (id = mi_idx1.movie_id)
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.002 rows=4 loops=1064)
                                            Index Cond: (movie_id = t1.id)
                                ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=4518)
                                      Index Cond: (id = mc1.company_id)
                                      Filter: ((country_code)::text <> '[us]'::text)
                                      Rows Removed by Filter: 0
                          ->  Materialize  (cost=0.00..22.76 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=4086)
                                ->  Seq Scan on kind_type kt1  (cost=0.00..22.75 rows=2 width=4) (actual time=0.002..0.004 rows=2 loops=1)
                                      Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                      Rows Removed by Filter: 5
              ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.002..0.003 rows=2 loops=46)
                    Index Cond: (movie_id = t2.id)
        ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=114)
              Index Cond: (id = mc2.company_id)
Planning time: 58.342 ms
Execution time: 47.624 ms
