Aggregate  (cost=5437.94..5437.95 rows=1 width=96) (actual time=10.645..10.645 rows=1 loops=1)
  ->  Nested Loop  (cost=11.24..5437.76 rows=24 width=48) (actual time=1.085..10.638 rows=15 loops=1)
        ->  Nested Loop  (cost=10.82..5304.00 rows=66 width=52) (actual time=1.081..10.527 rows=66 loops=1)
              Join Filter: (t.id = mc.movie_id)
              ->  Nested Loop  (cost=10.39..5289.39 rows=3 width=68) (actual time=1.077..10.501 rows=3 loops=1)
                    Join Filter: (pi.info_type_id = it3.id)
                    Rows Removed by Join Filter: 486
                    ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.006..0.011 rows=1 loops=1)
                          Filter: ((info)::text = 'height'::text)
                          Rows Removed by Filter: 112
                    ->  Nested Loop  (cost=10.39..5280.86 rows=489 width=72) (actual time=1.033..10.463 rows=489 loops=1)
                          Join Filter: (n.id = pi.person_id)
                          ->  Nested Loop  (cost=9.96..5221.44 rows=3 width=80) (actual time=1.029..10.322 rows=3 loops=1)
                                Join Filter: (n.id = an.person_id)
                                ->  Nested Loop  (cost=9.54..5218.52 rows=1 width=76) (actual time=1.025..10.316 rows=1 loops=1)
                                      Join Filter: (it.id = mi.info_type_id)
                                      ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.008 rows=1 loops=1)
                                            Filter: ((info)::text = 'release dates'::text)
                                            Rows Removed by Filter: 112
                                      ->  Nested Loop  (cost=9.54..5216.10 rows=1 width=80) (actual time=1.021..10.307 rows=1 loops=1)
                                            Join Filter: (t.id = mi.movie_id)
                                            ->  Nested Loop  (cost=9.10..5174.24 rows=1 width=72) (actual time=1.009..10.223 rows=1 loops=1)
                                                  ->  Nested Loop  (cost=8.67..5170.16 rows=1 width=60) (actual time=1.005..10.219 rows=1 loops=1)
                                                        Join Filter: (rt.id = ci.role_id)
                                                        ->  Seq Scan on role_type rt  (cost=0.00..18.88 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                              Filter: ((role)::text = 'actress'::text)
                                                              Rows Removed by Filter: 11
                                                        ->  Nested Loop  (cost=8.67..5151.28 rows=1 width=64) (actual time=1.003..10.215 rows=1 loops=1)
                                                              ->  Nested Loop  (cost=8.24..5062.09 rows=38 width=45) (actual time=0.922..10.125 rows=38 loops=1)
                                                                    Join Filter: (t.id = ci.movie_id)
                                                                    ->  Nested Loop  (cost=7.68..5014.51 rows=1 width=29) (actual time=0.916..9.991 rows=1 loops=1)
                                                                          ->  Nested Loop  (cost=7.25..4964.13 rows=23 width=8) (actual time=0.283..9.928 rows=23 loops=1)
                                                                                Join Filter: (cct2.id = cc.status_id)
                                                                                Rows Removed by Join Filter: 51
                                                                                ->  Seq Scan on comp_cast_type cct2  (cost=0.00..18.88 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                                                      Filter: ((kind)::text = 'complete+verified'::text)
                                                                                      Rows Removed by Filter: 3
                                                                                ->  Nested Loop  (cost=7.25..4944.33 rows=74 width=12) (actual time=0.147..9.919 rows=74 loops=1)
                                                                                      Join Filter: (cct1.id = cc.subject_id)
                                                                                      Rows Removed by Join Filter: 16
                                                                                      ->  Seq Scan on comp_cast_type cct1  (cost=0.00..18.88 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                                            Filter: ((kind)::text = 'cast'::text)
                                                                                            Rows Removed by Filter: 3
                                                                                      ->  Nested Loop  (cost=7.25..4924.33 rows=90 width=16) (actual time=0.145..9.906 rows=90 loops=1)
                                                                                            ->  Nested Loop  (cost=6.83..3768.21 rows=414 width=4) (actual time=0.098..9.223 rows=414 loops=1)
                                                                                                  ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.027..8.854 rows=1 loops=1)
                                                                                                        Filter: (keyword = 'computer-animation'::text)
                                                                                                        Rows Removed by Filter: 134169
                                                                                                  ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.83..1138.99 rows=309 width=8) (actual time=0.070..0.323 rows=414 loops=1)
                                                                                                        Recheck Cond: (keyword_id = k.id)
                                                                                                        Heap Blocks: exact=358
                                                                                                        ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.75 rows=309 width=0) (actual time=0.035..0.035 rows=414 loops=1)
                                                                                                              Index Cond: (keyword_id = k.id)
                                                                                            ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.001..0.001 rows=0 loops=414)
                                                                                                  Index Cond: (movie_id = mk.movie_id)
                                                                          ->  Index Scan using title_pkey on title t  (cost=0.43..2.14 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=23)
                                                                                Index Cond: (id = mk.movie_id)
                                                                                Filter: ((production_year >= 2000) AND (production_year <= 2005) AND (title = 'Shrek 2'::text))
                                                                                Rows Removed by Filter: 1
                                                                    ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.57 rows=1 width=16) (actual time=0.005..0.128 rows=38 loops=1)
                                                                          Index Cond: (movie_id = mk.movie_id)
                                                                          Filter: (note = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                          Rows Removed by Filter: 191
                                                              ->  Index Scan using name_pkey on name n  (cost=0.43..2.35 rows=1 width=19) (actual time=0.002..0.002 rows=0 loops=38)
                                                                    Index Cond: (id = ci.person_id)
                                                                    Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                    Rows Removed by Filter: 1
                                                  ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.25 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=1)
                                                        Index Cond: (id = ci.person_role_id)
                                                        Filter: (name = 'Queen'::text)
                                            ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..41.84 rows=1 width=8) (actual time=0.012..0.083 rows=1 loops=1)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: (info ~~ 'USA:%200%'::text)
                                                  Rows Removed by Filter: 456
                                ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.90 rows=2 width=4) (actual time=0.004..0.005 rows=3 loops=1)
                                      Index Cond: (person_id = ci.person_id)
                                      Heap Fetches: 3
                          ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.49 rows=25 width=8) (actual time=0.002..0.024 rows=163 loops=3)
                                Index Cond: (person_id = an.person_id)
              ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.81 rows=5 width=8) (actual time=0.002..0.005 rows=22 loops=3)
                    Index Cond: (movie_id = mk.movie_id)
        ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=66)
              Index Cond: (id = mc.company_id)
              Filter: ((country_code)::text = '[us]'::text)
              Rows Removed by Filter: 1
Planning time: 78.274 ms
Execution time: 10.735 ms
