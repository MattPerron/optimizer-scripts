Aggregate  (cost=5494.98..5494.99 rows=1 width=192) (actual time=7.928..7.928 rows=1 loops=1)
  ->  Nested Loop  (cost=42.68..5494.92 rows=4 width=82) (actual time=0.854..7.916 rows=4 loops=1)
        ->  Nested Loop  (cost=42.26..5493.14 rows=4 width=67) (actual time=0.850..7.899 rows=4 loops=1)
              Join Filter: (t2.id = mc2.movie_id)
              ->  Nested Loop  (cost=41.83..5492.40 rows=1 width=75) (actual time=0.845..7.890 rows=1 loops=1)
                    ->  Nested Loop  (cost=41.68..5492.21 rows=1 width=79) (actual time=0.843..7.888 rows=1 loops=1)
                          ->  Nested Loop  (cost=41.53..5492.02 rows=1 width=83) (actual time=0.838..7.883 rows=1 loops=1)
                                Join Filter: (ml.movie_id = t1.id)
                                ->  Nested Loop  (cost=41.10..5491.49 rows=1 width=74) (actual time=0.832..7.876 rows=1 loops=1)
                                      Join Filter: ((ml.movie_id = mi_idx1.movie_id) AND (it1.id = mi_idx1.info_type_id))
                                      Rows Removed by Join Filter: 2
                                      ->  Nested Loop  (cost=40.67..5490.95 rows=1 width=69) (actual time=0.810..7.853 rows=1 loops=1)
                                            ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..14.12 rows=1 width=4) (actual time=0.026..0.029 rows=1 loops=1)
                                                  Filter: ((info)::text = 'rating'::text)
                                                  Rows Removed by Filter: 112
                                            ->  Nested Loop  (cost=40.53..5476.82 rows=1 width=65) (actual time=0.783..7.823 rows=1 loops=1)
                                                  Join Filter: (ml.linked_movie_id = t2.id)
                                                  ->  Nested Loop  (cost=40.10..5473.88 rows=4 width=40) (actual time=0.775..7.794 rows=4 loops=1)
                                                        ->  Nested Loop  (cost=39.68..5432.41 rows=93 width=25) (actual time=0.768..7.558 rows=93 loops=1)
                                                              ->  Nested Loop  (cost=39.25..5297.40 rows=34 width=17) (actual time=0.761..7.412 rows=34 loops=1)
                                                                    Join Filter: (it2.id = mi_idx2.info_type_id)
                                                                    Rows Removed by Join Filter: 2910
                                                                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                                    ->  Nested Loop  (cost=39.25..5258.19 rows=2944 width=21) (actual time=0.100..7.226 rows=2944 loops=1)
                                                                          ->  Nested Loop  (cost=38.82..487.93 rows=2315 width=8) (actual time=0.084..0.897 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..18.88 rows=2 width=4) (actual time=0.008..0.013 rows=2 loops=1)
                                                                                      Filter: ((link)::text ~~ '%follow%'::text)
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.063..0.318 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.049..0.049 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=13) (actual time=0.002..0.002 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.0'::text)
                                                                                Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..3.92 rows=5 width=8) (actual time=0.003..0.004 rows=3 loops=34)
                                                                    Index Cond: (movie_id = ml.movie_id)
                                                        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=93)
                                                              Index Cond: (id = mc1.company_id)
                                                              Filter: ((country_code)::text = '[nl]'::text)
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using title_pkey on title t2  (cost=0.43..0.72 rows=1 width=25) (actual time=0.007..0.007 rows=0 loops=4)
                                                        Index Cond: (id = mi_idx2.movie_id)
                                                        Filter: (production_year = 2007)
                                                        Rows Removed by Filter: 1
                                      ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..0.50 rows=3 width=13) (actual time=0.020..0.021 rows=3 loops=1)
                                            Index Cond: (movie_id = mc1.movie_id)
                                ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.006..0.006 rows=1 loops=1)
                                      Index Cond: (id = mc1.movie_id)
                          ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.15..0.17 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                Index Cond: (id = t1.kind_id)
                                Filter: ((kind)::text = 'tv series'::text)
                    ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.15..0.17 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                          Index Cond: (id = t2.kind_id)
                          Filter: ((kind)::text = 'tv series'::text)
              ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.005..0.007 rows=4 loops=1)
                    Index Cond: (movie_id = mi_idx2.movie_id)
        ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=4)
              Index Cond: (id = mc2.company_id)
Planning time: 60.364 ms
Execution time: 8.095 ms
