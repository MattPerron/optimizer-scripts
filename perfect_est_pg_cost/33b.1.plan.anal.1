Aggregate  (cost=683.60..683.61 rows=1 width=192) (actual time=34.191..34.191 rows=1 loops=1)
  ->  Nested Loop  (cost=42.53..683.59 rows=1 width=82) (actual time=2.607..34.180 rows=4 loops=1)
        Join Filter: ((t2.id = mi_idx2.movie_id) AND (it2.id = mi_idx2.info_type_id))
        Rows Removed by Join Filter: 4
        ->  Nested Loop  (cost=42.11..683.07 rows=1 width=93) (actual time=2.598..34.163 rows=4 loops=1)
              ->  Nested Loop  (cost=41.96..682.88 rows=1 width=97) (actual time=2.596..34.157 rows=4 loops=1)
                    Join Filter: (ml.movie_id = t1.id)
                    ->  Nested Loop  (cost=41.53..682.35 rows=1 width=88) (actual time=2.591..34.132 rows=4 loops=1)
                          ->  Nested Loop  (cost=41.11..681.91 rows=1 width=73) (actual time=2.588..34.113 rows=4 loops=1)
                                ->  Nested Loop  (cost=40.68..680.47 rows=1 width=65) (actual time=2.583..34.104 rows=1 loops=1)
                                      ->  Nested Loop  (cost=40.53..680.28 rows=1 width=69) (actual time=2.578..34.087 rows=6 loops=1)
                                            ->  Nested Loop  (cost=40.10..675.81 rows=1 width=44) (actual time=0.868..32.857 rows=477 loops=1)
                                                  ->  Nested Loop  (cost=40.10..673.38 rows=1 width=40) (actual time=0.859..29.210 rows=477 loops=1)
                                                        ->  Nested Loop  (cost=39.68..668.93 rows=10 width=25) (actual time=0.092..13.626 rows=9674 loops=1)
                                                              Join Filter: (ml.movie_id = mc1.movie_id)
                                                              ->  Nested Loop  (cost=39.25..667.61 rows=2 width=17) (actual time=0.087..6.846 rows=2064 loops=1)
                                                                    Join Filter: (mi_idx1.info_type_id = it1.id)
                                                                    Rows Removed by Join Filter: 4128
                                                                    ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                                    ->  Nested Loop  (cost=39.25..662.06 rows=251 width=21) (actual time=0.073..6.294 rows=6192 loops=1)
                                                                          ->  Nested Loop  (cost=38.82..487.93 rows=84 width=8) (actual time=0.068..0.966 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..18.88 rows=2 width=4) (actual time=0.004..0.009 rows=2 loops=1)
                                                                                      Filter: ((link)::text ~~ '%follow%'::text)
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.064..0.338 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.051..0.051 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..2.04 rows=3 width=13) (actual time=0.001..0.002 rows=3 loops=2315)
                                                                                Index Cond: (movie_id = ml.movie_id)
                                                              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.002..0.002 rows=5 loops=2064)
                                                                    Index Cond: (movie_id = mi_idx1.movie_id)
                                                        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.001..0.001 rows=0 loops=9674)
                                                              Index Cond: (id = mc1.company_id)
                                                              Filter: ((country_code)::text = '[nl]'::text)
                                                              Rows Removed by Filter: 1
                                                  ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=477)
                                                        Filter: ((info)::text = 'rating'::text)
                                                        Rows Removed by Filter: 112
                                            ->  Index Scan using title_pkey on title t2  (cost=0.43..4.47 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=477)
                                                  Index Cond: (id = ml.linked_movie_id)
                                                  Filter: (production_year = 2007)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.15..0.17 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=6)
                                            Index Cond: (id = t2.kind_id)
                                            Filter: ((kind)::text = 'tv series'::text)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..1.39 rows=5 width=8) (actual time=0.005..0.007 rows=4 loops=1)
                                      Index Cond: (movie_id = t2.id)
                          ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=4)
                                Index Cond: (id = mc2.company_id)
                    ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=4)
                          Index Cond: (id = mc1.movie_id)
              ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.15..0.17 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=4)
                    Index Cond: (id = t1.kind_id)
                    Filter: ((kind)::text = 'tv series'::text)
        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.51 rows=1 width=13) (actual time=0.003..0.003 rows=2 loops=4)
              Index Cond: (movie_id = mc2.movie_id)
              Filter: (info < '3.0'::text)
              Rows Removed by Filter: 1
Planning time: 60.902 ms
Execution time: 34.313 ms
