Aggregate  (cost=33256.60..33256.61 rows=1 width=96) (actual time=1709.085..1709.085 rows=1 loops=1)
  ->  Nested Loop  (cost=26.12..33256.59 rows=1 width=41) (actual time=3.422..1702.373 rows=21489 loops=1)
        ->  Nested Loop  (cost=25.70..33256.10 rows=1 width=26) (actual time=3.414..1646.823 rows=23216 loops=1)
              Join Filter: (mi.info_type_id = it1.id)
              Rows Removed by Join Filter: 3232
              ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.015 rows=1 loops=1)
                    Filter: ((info)::text = 'countries'::text)
                    Rows Removed by Filter: 112
              ->  Nested Loop  (cost=25.70..33252.56 rows=90 width=30) (actual time=3.406..1643.165 rows=26448 loops=1)
                    Join Filter: (t.id = mi.movie_id)
                    ->  Hash Join  (cost=25.26..33149.76 rows=55 width=42) (actual time=3.386..256.255 rows=25316 loops=1)
                          Hash Cond: (mc.company_type_id = ct.id)
                          ->  Nested Loop  (cost=8.11..32813.31 rows=25316 width=46) (actual time=3.372..251.192 rows=25316 loops=1)
                                Join Filter: (t.id = mc.movie_id)
                                ->  Nested Loop  (cost=7.68..29375.13 rows=5949 width=34) (actual time=2.978..197.975 rows=5949 loops=1)
                                      Join Filter: (mi_idx.info_type_id = it2.id)
                                      Rows Removed by Join Filter: 11943
                                      ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                                            Filter: ((info)::text = 'rating'::text)
                                            Rows Removed by Filter: 112
                                      ->  Nested Loop  (cost=7.68..29149.07 rows=17892 width=38) (actual time=2.967..196.205 rows=17892 loops=1)
                                            Join Filter: (t.id = mi_idx.movie_id)
                                            ->  Nested Loop  (cost=7.26..24827.07 rows=8073 width=25) (actual time=2.957..165.937 rows=8073 loops=1)
                                                  Join Filter: (t.kind_id = kt.id)
                                                  Rows Removed by Join Filter: 4332
                                                  ->  Nested Loop  (cost=7.26..24512.25 rows=9739 width=29) (actual time=2.925..162.992 rows=9739 loops=1)
                                                        ->  Nested Loop  (cost=6.83..6345.83 rows=37091 width=4) (actual time=2.916..63.227 rows=37091 loops=1)
                                                              ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=3 width=4) (actual time=0.842..17.771 rows=3 loops=1)
                                                                    Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                    Rows Removed by Filter: 134167
                                                              ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.83..1125.00 rows=309 width=8) (actual time=2.278..13.889 rows=12364 loops=3)
                                                                    Recheck Cond: (keyword_id = k.id)
                                                                    Heap Blocks: exact=26312
                                                                    ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.75 rows=309 width=0) (actual time=1.198..1.198 rows=12364 loops=3)
                                                                          Index Cond: (keyword_id = k.id)
                                                        ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=37091)
                                                              Index Cond: (id = mk.movie_id)
                                                              Filter: (production_year > 2005)
                                                              Rows Removed by Filter: 1
                                                  ->  Materialize  (cost=0.00..22.76 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                        ->  Seq Scan on kind_type kt  (cost=0.00..22.75 rows=2 width=4) (actual time=0.004..0.005 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                              Rows Removed by Filter: 5
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.003..0.003 rows=2 loops=8073)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: (info < '8.5'::text)
                                                  Rows Removed by Filter: 0
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.005..0.008 rows=4 loops=5949)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                      Rows Removed by Filter: 8
                          ->  Hash  (cost=17.10..17.10 rows=4 width=4) (actual time=0.007..0.007 rows=4 loops=1)
                                Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                ->  Seq Scan on company_type ct  (cost=0.00..17.10 rows=4 width=4) (actual time=0.004..0.005 rows=4 loops=1)
                    ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.84 rows=2 width=8) (actual time=0.045..0.054 rows=1 loops=25316)
                          Index Cond: (movie_id = mk.movie_id)
                          Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                          Rows Removed by Filter: 174
        ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=23216)
              Index Cond: (id = mc.company_id)
              Filter: ((country_code)::text <> '[us]'::text)
              Rows Removed by Filter: 0
Planning time: 19.685 ms
Execution time: 1709.181 ms
