Aggregate  (cost=59272.08..59272.09 rows=1 width=64) (actual time=700.659..700.660 rows=1 loops=1)
  ->  Nested Loop  (cost=19.85..59272.00 rows=17 width=59) (actual time=9.761..700.514 rows=328 loops=1)
        ->  Nested Loop  (cost=19.43..59264.54 rows=17 width=63) (actual time=9.751..699.623 rows=328 loops=1)
              ->  Nested Loop  (cost=19.00..59262.74 rows=1 width=75) (actual time=7.087..699.274 rows=57 loops=1)
                    ->  Nested Loop  (cost=18.86..59262.54 rows=1 width=79) (actual time=7.081..699.114 rows=57 loops=1)
                          ->  Nested Loop  (cost=18.42..59166.78 rows=49 width=29) (actual time=0.285..594.426 rows=5134 loops=1)
                                ->  Nested Loop  (cost=17.99..59082.42 rows=89 width=8) (actual time=0.279..563.282 rows=13699 loops=1)
                                      ->  Nested Loop  (cost=17.57..58961.03 rows=125 width=4) (actual time=0.029..489.579 rows=43837 loops=1)
                                            ->  Hash Join  (cost=17.15..58721.82 rows=347 width=8) (actual time=0.022..360.776 rows=61664 loops=1)
                                                  Hash Cond: (mc.company_type_id = ct.id)
                                                  ->  Seq Scan on movie_companies mc  (cost=0.00..57926.93 rows=61664 width=12) (actual time=0.010..349.169 rows=61664 loops=1)
                                                        Filter: ((note ~~ '%(200%)%'::text) AND (note ~~ '%(worldwide)%'::text))
                                                        Rows Removed by Filter: 2547465
                                                  ->  Hash  (cost=17.10..17.10 rows=4 width=4) (actual time=0.005..0.005 rows=4 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on company_type ct  (cost=0.00..17.10 rows=4 width=4) (actual time=0.003..0.003 rows=4 loops=1)
                                            ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.69 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=61664)
                                                  Index Cond: (id = mc.company_id)
                                                  Filter: ((country_code)::text = '[us]'::text)
                                                  Rows Removed by Filter: 0
                                      ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..0.94 rows=3 width=4) (actual time=0.001..0.001 rows=0 loops=43837)
                                            Index Cond: (movie_id = mc.movie_id)
                                            Heap Fetches: 13699
                                ->  Index Scan using title_pkey on title t  (cost=0.43..0.95 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=13699)
                                      Index Cond: (id = at.movie_id)
                                      Filter: (production_year > 2000)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.94 rows=1 width=50) (actual time=0.020..0.020 rows=0 loops=5134)
                                Index Cond: (movie_id = t.id)
                                Filter: ((note ~~ '%internet%'::text) AND (info ~~ 'USA:% 200%'::text))
                                Rows Removed by Filter: 72
                    ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.17 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=57)
                          Index Cond: (id = mi.info_type_id)
                          Filter: ((info)::text = 'release dates'::text)
              ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=46 width=8) (actual time=0.004..0.005 rows=6 loops=57)
                    Index Cond: (movie_id = t.id)
        ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=328)
              Index Cond: (id = mk.keyword_id)
              Heap Fetches: 328
Planning time: 8.012 ms
Execution time: 700.744 ms
