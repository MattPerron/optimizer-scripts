Aggregate  (cost=846.98..846.99 rows=1 width=96) (actual time=38.367..38.367 rows=1 loops=1)
  ->  Nested Loop  (cost=41.39..846.97 rows=1 width=118) (actual time=1.809..37.899 rows=1874 loops=1)
        Join Filter: (ml.movie_id = mi.movie_id)
        ->  Nested Loop  (cost=40.95..845.15 rows=1 width=134) (actual time=1.798..34.068 rows=402 loops=1)
              ->  Nested Loop  (cost=40.53..844.25 rows=2 width=138) (actual time=0.290..21.693 rows=8697 loops=1)
                    Join Filter: (ml.movie_id = mk.movie_id)
                    ->  Nested Loop  (cost=40.10..842.36 rows=1 width=130) (actual time=0.283..17.611 rows=1130 loops=1)
                          Join Filter: (ml.movie_id = t.id)
                          ->  Nested Loop  (cost=39.67..841.75 rows=1 width=109) (actual time=0.278..15.558 rows=1152 loops=1)
                                ->  Nested Loop  (cost=39.25..841.29 rows=1 width=94) (actual time=0.074..7.830 rows=4393 loops=1)
                                      Join Filter: (mc.company_type_id = ct.id)
                                      Rows Removed by Join Filter: 676
                                      ->  Seq Scan on company_type ct  (cost=0.00..18.88 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                            Filter: ((kind)::text = 'production companies'::text)
                                            Rows Removed by Filter: 3
                                      ->  Nested Loop  (cost=39.25..819.79 rows=210 width=98) (actual time=0.069..7.211 rows=5069 loops=1)
                                            ->  Nested Loop  (cost=38.82..487.93 rows=84 width=86) (actual time=0.062..0.864 rows=2315 loops=1)
                                                  ->  Seq Scan on link_type lt  (cost=0.00..18.88 rows=2 width=86) (actual time=0.003..0.006 rows=2 loops=1)
                                                        Filter: ((link)::text ~~ '%follow%'::text)
                                                        Rows Removed by Filter: 16
                                                  ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=8) (actual time=0.058..0.296 rows=1158 loops=2)
                                                        Recheck Cond: (link_type_id = lt.id)
                                                        Heap Blocks: exact=191
                                                        ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.045..0.045 rows=1158 loops=2)
                                                              Index Cond: (link_type_id = lt.id)
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.92 rows=3 width=12) (actual time=0.002..0.002 rows=2 loops=2315)
                                                  Index Cond: (movie_id = ml.movie_id)
                                                  Filter: (note IS NULL)
                                                  Rows Removed by Filter: 2
                                ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=4393)
                                      Index Cond: (id = mc.company_id)
                                      Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                                      Rows Removed by Filter: 1
                          ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=1152)
                                Index Cond: (id = mc.movie_id)
                                Filter: ((production_year >= 1950) AND (production_year <= 2010))
                                Rows Removed by Filter: 0
                    ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.32 rows=46 width=8) (actual time=0.001..0.002 rows=8 loops=1130)
                          Index Cond: (movie_id = t.id)
              ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=8697)
                    Index Cond: (id = mk.keyword_id)
                    Filter: (keyword = 'sequel'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.79 rows=2 width=4) (actual time=0.007..0.009 rows=5 loops=402)
              Index Cond: (movie_id = mk.movie_id)
              Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
              Rows Removed by Filter: 16
Planning time: 7.549 ms
Execution time: 38.436 ms
