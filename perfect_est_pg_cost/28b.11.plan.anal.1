Aggregate  (cost=17938.41..17938.42 rows=1 width=96) (actual time=240.064..240.064 rows=1 loops=1)
  ->  Nested Loop  (cost=3798.76..17938.41 rows=1 width=41) (actual time=38.509..239.993 rows=148 loops=1)
        ->  Nested Loop  (cost=3798.62..17938.22 rows=1 width=45) (actual time=38.504..239.794 rows=149 loops=1)
              ->  Nested Loop  (cost=3798.47..17924.64 rows=81 width=49) (actual time=38.498..239.612 rows=149 loops=1)
                    ->  Nested Loop  (cost=3798.05..17850.54 rows=151 width=34) (actual time=38.489..239.078 rows=151 loops=1)
                          Join Filter: (t.id = mc.movie_id)
                          ->  Nested Loop  (cost=3797.62..17838.98 rows=20 width=46) (actual time=38.477..238.694 rows=20 loops=1)
                                ->  Nested Loop  (cost=3797.47..17833.87 rows=30 width=50) (actual time=38.471..238.619 rows=30 loops=1)
                                      Join Filter: (mi.movie_id = t.id)
                                      ->  Nested Loop  (cost=3797.04..17689.71 rows=287 width=25) (actual time=38.462..237.483 rows=287 loops=1)
                                            Join Filter: (it2.id = mi_idx.info_type_id)
                                            Rows Removed by Join Filter: 91
                                            ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                                                  Filter: ((info)::text = 'rating'::text)
                                                  Rows Removed by Filter: 112
                                            ->  Nested Loop  (cost=3797.04..17682.57 rows=378 width=29) (actual time=38.449..237.398 rows=378 loops=1)
                                                  Join Filter: (mi.movie_id = mi_idx.movie_id)
                                                  ->  Nested Loop  (cost=3796.61..17427.90 rows=499 width=16) (actual time=38.437..235.154 rows=499 loops=1)
                                                        ->  Hash Join  (cost=3796.17..11500.95 rows=3832 width=8) (actual time=38.203..108.685 rows=3832 loops=1)
                                                              Hash Cond: (cc.status_id = cct2.id)
                                                              ->  Nested Loop  (cost=3777.26..11403.64 rows=6216 width=12) (actual time=38.191..107.682 rows=6216 loops=1)
                                                                    Join Filter: (cct1.id = cc.subject_id)
                                                                    Rows Removed by Join Filter: 13808
                                                                    ->  Seq Scan on comp_cast_type cct1  (cost=0.00..18.88 rows=1 width=4) (actual time=0.001..0.003 rows=1 loops=1)
                                                                          Filter: ((kind)::text = 'crew'::text)
                                                                          Rows Removed by Filter: 3
                                                                    ->  Hash Join  (cost=3777.26..11134.46 rows=20024 width=16) (actual time=38.156..105.961 rows=20024 loops=1)
                                                                          Hash Cond: (mk.movie_id = cc.movie_id)
                                                                          ->  Nested Loop  (cost=6.83..6345.83 rows=37091 width=4) (actual time=2.891..59.384 rows=37091 loops=1)
                                                                                ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=3 width=4) (actual time=0.830..17.372 rows=3 loops=1)
                                                                                      Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                      Rows Removed by Filter: 134167
                                                                                ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.83..1125.00 rows=309 width=8) (actual time=2.291..12.730 rows=12364 loops=3)
                                                                                      Recheck Cond: (keyword_id = k.id)
                                                                                      Heap Blocks: exact=26312
                                                                                      ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.75 rows=309 width=0) (actual time=1.187..1.187 rows=12364 loops=3)
                                                                                            Index Cond: (keyword_id = k.id)
                                                                          ->  Hash  (cost=2081.86..2081.86 rows=135086 width=12) (actual time=34.915..34.915 rows=135086 loops=1)
                                                                                Buckets: 262144  Batches: 1  Memory Usage: 7853kB
                                                                                ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.008..16.561 rows=135086 loops=1)
                                                              ->  Hash  (cost=18.88..18.88 rows=3 width=4) (actual time=0.006..0.006 rows=3 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on comp_cast_type cct2  (cost=0.00..18.88 rows=3 width=4) (actual time=0.003..0.004 rows=3 loops=1)
                                                                          Filter: ((kind)::text <> 'complete+verified'::text)
                                                                          Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.54 rows=1 width=8) (actual time=0.031..0.033 rows=0 loops=3832)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                              Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                                              Rows Removed by Filter: 77
                                                  ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.004..0.004 rows=1 loops=499)
                                                        Index Cond: (movie_id = mk.movie_id)
                                                        Filter: (info > '6.5'::text)
                                                        Rows Removed by Filter: 2
                                      ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=287)
                                            Index Cond: (id = mk.movie_id)
                                            Filter: (production_year > 2005)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.15..0.17 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=30)
                                      Index Cond: (id = t.kind_id)
                                      Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                      Rows Removed by Filter: 0
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.010..0.017 rows=8 loops=20)
                                Index Cond: (movie_id = mk.movie_id)
                                Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                Rows Removed by Filter: 19
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=151)
                          Index Cond: (id = mc.company_id)
                          Filter: ((country_code)::text <> '[us]'::text)
                          Rows Removed by Filter: 0
              ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.15..0.17 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=149)
                    Index Cond: (id = mc.company_type_id)
                    Heap Fetches: 149
        ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=149)
              Index Cond: (id = mi.info_type_id)
              Filter: ((info)::text = 'countries'::text)
              Rows Removed by Filter: 0
Planning time: 58.056 ms
Execution time: 240.191 ms
