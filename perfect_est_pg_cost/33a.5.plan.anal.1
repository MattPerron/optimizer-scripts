Aggregate  (cost=8638.53..8638.54 rows=1 width=192) (actual time=22.811..22.811 rows=1 loops=1)
  ->  Nested Loop  (cost=42.67..8638.52 rows=1 width=82) (actual time=1.857..22.795 rows=8 loops=1)
        ->  Nested Loop  (cost=42.53..8638.34 rows=1 width=86) (actual time=0.858..22.083 rows=815 loops=1)
              ->  Nested Loop  (cost=42.38..8638.15 rows=1 width=90) (actual time=0.851..19.960 rows=2445 loops=1)
                    ->  Nested Loop  (cost=41.96..8637.63 rows=1 width=93) (actual time=0.847..18.212 rows=829 loops=1)
                          Join Filter: ((ml.movie_id = t1.id) AND (kt1.id = t1.kind_id))
                          ->  Nested Loop  (cost=41.53..8518.58 rows=224 width=76) (actual time=0.843..16.934 rows=829 loops=1)
                                ->  Nested Loop  (cost=41.11..8419.26 rows=224 width=61) (actual time=0.840..15.496 rows=829 loops=1)
                                      Join Filter: (t2.id = mc2.movie_id)
                                      ->  Nested Loop  (cost=40.68..8259.18 rows=217 width=69) (actual time=0.835..15.007 rows=97 loops=1)
                                            ->  Nested Loop  (cost=40.26..7991.20 rows=601 width=54) (actual time=0.212..14.195 rows=410 loops=1)
                                                  ->  Nested Loop  (cost=39.83..7526.62 rows=117 width=46) (actual time=0.205..13.758 rows=117 loops=1)
                                                        ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.15..66.00 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'tv series'::text)
                                                              Rows Removed by Filter: 6
                                                        ->  Nested Loop  (cost=39.68..7459.45 rows=117 width=42) (actual time=0.197..13.731 rows=117 loops=1)
                                                              Join Filter: (kt2.id = t2.kind_id)
                                                              Rows Removed by Join Filter: 191
                                                              ->  Seq Scan on kind_type kt2  (cost=0.00..22.75 rows=1 width=4) (actual time=0.004..0.007 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'tv series'::text)
                                                                    Rows Removed by Filter: 6
                                                              ->  Nested Loop  (cost=39.68..7432.85 rows=308 width=46) (actual time=0.193..13.690 rows=308 loops=1)
                                                                    Join Filter: (ml.linked_movie_id = t2.id)
                                                                    ->  Nested Loop  (cost=39.25..5259.08 rows=2944 width=21) (actual time=0.076..7.421 rows=2944 loops=1)
                                                                          ->  Nested Loop  (cost=38.82..488.81 rows=2315 width=8) (actual time=0.066..0.904 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..19.76 rows=2 width=4) (actual time=0.004..0.010 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.056..0.315 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.044..0.044 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=13) (actual time=0.002..0.003 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.0'::text)
                                                                                Rows Removed by Filter: 1
                                                                    ->  Index Scan using title_pkey on title t2  (cost=0.43..0.73 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2944)
                                                                          Index Cond: (id = mi_idx2.movie_id)
                                                                          Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                                                          Rows Removed by Filter: 1
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..3.92 rows=5 width=8) (actual time=0.002..0.003 rows=4 loops=117)
                                                        Index Cond: (movie_id = ml.movie_id)
                                            ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=410)
                                                  Index Cond: (id = mc1.company_id)
                                                  Filter: ((country_code)::text = '[us]'::text)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.002..0.003 rows=9 loops=97)
                                            Index Cond: (movie_id = mi_idx2.movie_id)
                                ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=829)
                                      Index Cond: (id = mc2.company_id)
                          ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=829)
                                Index Cond: (id = mc1.movie_id)
                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..0.50 rows=3 width=13) (actual time=0.001..0.002 rows=3 loops=829)
                          Index Cond: (movie_id = t1.id)
              ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=2445)
                    Index Cond: (id = mi_idx1.info_type_id)
                    Filter: ((info)::text = 'rating'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=815)
              Index Cond: (id = mi_idx2.info_type_id)
              Filter: ((info)::text = 'rating'::text)
              Rows Removed by Filter: 1
Planning time: 61.115 ms
Execution time: 22.926 ms
