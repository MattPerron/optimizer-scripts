Aggregate  (cost=3783.20..3783.21 rows=1 width=96) (actual time=17.340..17.341 rows=1 loops=1)
  ->  Nested Loop  (cost=639.20..3783.19 rows=1 width=118) (actual time=2.263..17.113 rows=743 loops=1)
        ->  Nested Loop  (cost=638.78..3781.82 rows=3 width=103) (actual time=1.628..14.021 rows=1808 loops=1)
              Join Filter: (ct.id = mc.company_type_id)
              Rows Removed by Join Filter: 105
              ->  Seq Scan on company_type ct  (cost=0.00..18.88 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                    Filter: ((kind)::text = 'production companies'::text)
                    Rows Removed by Filter: 3
              ->  Nested Loop  (cost=638.78..3739.03 rows=1913 width=107) (actual time=1.622..13.772 rows=1913 loops=1)
                    Join Filter: (ml.movie_id = mc.movie_id)
                    ->  Nested Loop  (cost=638.35..3593.97 rows=251 width=119) (actual time=1.613..12.658 rows=251 loops=1)
                          Join Filter: (cc.subject_id = cct1.id)
                          Rows Removed by Join Filter: 95
                          ->  Seq Scan on comp_cast_type cct1  (cost=0.00..18.88 rows=1 width=4) (actual time=0.002..0.004 rows=1 loops=1)
                                Filter: ((kind)::text = 'cast'::text)
                                Rows Removed by Filter: 3
                          ->  Nested Loop  (cost=638.35..3570.77 rows=346 width=123) (actual time=1.610..12.608 rows=346 loops=1)
                                Join Filter: (ml.movie_id = mi.movie_id)
                                ->  Nested Loop  (cost=637.92..3392.61 rows=98 width=119) (actual time=1.589..11.587 rows=98 loops=1)
                                      Join Filter: (ml.movie_id = t.id)
                                      ->  Nested Loop  (cost=637.49..3343.14 rows=98 width=98) (actual time=1.581..11.384 rows=98 loops=1)
                                            ->  Hash Join  (cost=637.07..1784.54 rows=3532 width=102) (actual time=1.441..5.949 rows=3532 loops=1)
                                                  Hash Cond: (cc.status_id = cct2.id)
                                                  ->  Nested Loop  (cost=618.17..1721.10 rows=3532 width=106) (actual time=1.431..5.302 rows=3532 loops=1)
                                                        Join Filter: (ml.movie_id = mk.movie_id)
                                                        ->  Merge Join  (cost=617.74..974.77 rows=257 width=98) (actual time=1.423..3.759 rows=257 loops=1)
                                                              Merge Cond: (cc.movie_id = ml.movie_id)
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6336.58 rows=135086 width=12) (actual time=0.006..1.783 rows=5993 loops=1)
                                                              ->  Sort  (cost=617.30..623.08 rows=2315 width=86) (actual time=1.234..1.353 rows=2341 loops=1)
                                                                    Sort Key: ml.movie_id
                                                                    Sort Method: quicksort  Memory: 205kB
                                                                    ->  Nested Loop  (cost=38.82..487.93 rows=2315 width=86) (actual time=0.064..0.792 rows=2315 loops=1)
                                                                          ->  Seq Scan on link_type lt  (cost=0.00..18.88 rows=2 width=86) (actual time=0.003..0.006 rows=2 loops=1)
                                                                                Filter: ((link)::text ~~ '%follow%'::text)
                                                                                Rows Removed by Filter: 16
                                                                          ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=8) (actual time=0.055..0.267 rows=1158 loops=2)
                                                                                Recheck Cond: (link_type_id = lt.id)
                                                                                Heap Blocks: exact=191
                                                                                ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.044..0.044 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                        ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..2.33 rows=46 width=8) (actual time=0.002..0.004 rows=14 loops=257)
                                                              Index Cond: (movie_id = cc.movie_id)
                                                  ->  Hash  (cost=18.88..18.88 rows=2 width=4) (actual time=0.004..0.004 rows=2 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on comp_cast_type cct2  (cost=0.00..18.88 rows=2 width=4) (actual time=0.002..0.002 rows=2 loops=1)
                                                              Filter: ((kind)::text ~~ 'complete%'::text)
                                                              Rows Removed by Filter: 2
                                            ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=3532)
                                                  Index Cond: (id = mk.keyword_id)
                                                  Filter: (keyword = 'sequel'::text)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=98)
                                            Index Cond: (id = mk.movie_id)
                                            Filter: ((production_year >= 1950) AND (production_year <= 2010))
                                ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.79 rows=2 width=4) (actual time=0.008..0.010 rows=4 loops=98)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
                                      Rows Removed by Filter: 15
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.002..0.003 rows=8 loops=251)
                          Index Cond: (movie_id = mk.movie_id)
                          Filter: (note IS NULL)
                          Rows Removed by Filter: 1
        ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.001..0.001 rows=0 loops=1808)
              Index Cond: (id = mc.company_id)
              Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
              Rows Removed by Filter: 1
Planning time: 46.678 ms
Execution time: 17.440 ms
