Aggregate  (cost=67014.25..67014.26 rows=1 width=96) (actual time=137.880..137.880 rows=1 loops=1)
  ->  Nested Loop  (cost=10.39..67012.19 rows=275 width=48) (actual time=17.929..137.776 rows=275 loops=1)
        Join Filter: (it.id = mi.info_type_id)
        ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.014 rows=1 loops=1)
              Filter: ((info)::text = 'release dates'::text)
              Rows Removed by Filter: 112
        ->  Nested Loop  (cost=10.39..67006.34 rows=275 width=52) (actual time=17.921..137.719 rows=275 loops=1)
              Join Filter: (t.id = mi.movie_id)
              ->  Nested Loop  (cost=9.96..63022.68 rows=125 width=64) (actual time=17.895..134.039 rows=125 loops=1)
                    ->  Nested Loop  (cost=9.54..62515.50 rows=344 width=68) (actual time=17.885..133.281 rows=344 loops=1)
                          Join Filter: (t.id = mc.movie_id)
                          ->  Nested Loop  (cost=9.11..62383.66 rows=38 width=60) (actual time=17.873..133.014 rows=38 loops=1)
                                ->  Nested Loop  (cost=8.68..59825.51 rows=1380 width=53) (actual time=0.988..129.674 rows=1380 loops=1)
                                      Join Filter: (rt.id = ci.role_id)
                                      Rows Removed by Join Filter: 5909
                                      ->  Seq Scan on role_type rt  (cost=0.00..18.88 rows=1 width=4) (actual time=0.003..0.006 rows=1 loops=1)
                                            Filter: ((role)::text = 'actress'::text)
                                            Rows Removed by Filter: 11
                                      ->  Nested Loop  (cost=8.68..59715.52 rows=7289 width=57) (actual time=0.871..129.104 rows=7289 loops=1)
                                            ->  Nested Loop  (cost=8.25..46946.06 rows=7336 width=45) (actual time=0.864..114.208 rows=7336 loops=1)
                                                  ->  Nested Loop  (cost=7.82..41433.15 rows=2625 width=41) (actual time=0.858..103.639 rows=2625 loops=1)
                                                        Join Filter: (t.id = ci.movie_id)
                                                        ->  Nested Loop  (cost=7.26..21722.29 rows=495 width=25) (actual time=0.675..57.063 rows=495 loops=1)
                                                              ->  Nested Loop  (cost=6.83..6178.12 rows=9696 width=4) (actual time=0.632..28.544 rows=9696 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.011..16.203 rows=3 loops=1)
                                                                          Filter: (keyword = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                          Rows Removed by Filter: 134167
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.83..1125.00 rows=309 width=8) (actual time=0.615..3.784 rows=3232 loops=3)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=7446
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.75 rows=309 width=0) (actual time=0.327..0.327 rows=3232 loops=3)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=9696)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2010)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.81 rows=1 width=16) (actual time=0.063..0.093 rows=5 loops=495)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                              Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                              Rows Removed by Filter: 83
                                                  ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.003..0.004 rows=3 loops=2625)
                                                        Index Cond: (person_id = ci.person_id)
                                                        Heap Fetches: 7336
                                            ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.74 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=7336)
                                                  Index Cond: (id = ci.person_role_id)
                                ->  Index Scan using name_pkey on name n  (cost=0.43..1.85 rows=1 width=19) (actual time=0.002..0.002 rows=0 loops=1380)
                                      Index Cond: (id = ci.person_id)
                                      Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                      Rows Removed by Filter: 1
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.41 rows=5 width=8) (actual time=0.003..0.005 rows=9 loops=38)
                                Index Cond: (movie_id = mk.movie_id)
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=344)
                          Index Cond: (id = mc.company_id)
                          Filter: ((country_code)::text = '[us]'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..31.86 rows=1 width=8) (actual time=0.006..0.029 rows=2 loops=125)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%201%'::text) OR (info ~~ 'USA:%201%'::text)))
                    Rows Removed by Filter: 126
Planning time: 49.367 ms
Execution time: 137.985 ms
