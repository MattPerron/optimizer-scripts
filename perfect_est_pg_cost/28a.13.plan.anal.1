Aggregate  (cost=20877.63..20877.64 rows=1 width=96) (actual time=250.230..250.230 rows=1 loops=1)
  ->  Nested Loop  (cost=3838.24..20857.67 rows=2662 width=41) (actual time=39.006..248.693 rows=4803 loops=1)
        ->  Hash Join  (cost=3837.82..18426.25 rows=4955 width=26) (actual time=38.995..237.298 rows=4955 loops=1)
              Hash Cond: (mc.company_type_id = ct.id)
              ->  Nested Loop  (cost=3820.67..18346.60 rows=4955 width=30) (actual time=38.983..236.356 rows=4955 loops=1)
                    Join Filter: (t.id = mc.movie_id)
                    ->  Nested Loop  (cost=3820.24..18096.93 rows=432 width=42) (actual time=38.973..230.307 rows=432 loops=1)
                          Join Filter: (mi_idx.info_type_id = it2.id)
                          Rows Removed by Join Filter: 940
                          ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.012 rows=1 loops=1)
                                Filter: ((info)::text = 'rating'::text)
                                Rows Removed by Filter: 112
                          ->  Hash Join  (cost=3820.24..18077.37 rows=1372 width=46) (actual time=38.943..230.133 rows=1372 loops=1)
                                Hash Cond: (cc.status_id = cct2.id)
                                ->  Nested Loop  (cost=3801.33..18038.21 rows=1605 width=50) (actual time=38.935..229.768 rows=1605 loops=1)
                                      Join Filter: (it1.id = mi.info_type_id)
                                      Rows Removed by Join Filter: 193
                                      ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.011 rows=1 loops=1)
                                            Filter: ((info)::text = 'countries'::text)
                                            Rows Removed by Filter: 112
                                      ->  Nested Loop  (cost=3801.33..18013.32 rows=1798 width=54) (actual time=38.931..229.452 rows=1798 loops=1)
                                            Join Filter: (t.id = mi.movie_id)
                                            ->  Nested Loop  (cost=3800.89..14811.38 rows=1713 width=46) (actual time=38.909..131.289 rows=1713 loops=1)
                                                  Join Filter: (t.id = mi_idx.movie_id)
                                                  ->  Hash Join  (cost=3800.47..14479.46 rows=620 width=33) (actual time=38.897..128.173 rows=620 loops=1)
                                                        Hash Cond: (t.kind_id = kt.id)
                                                        ->  Nested Loop  (cost=3777.69..14448.11 rows=680 width=37) (actual time=38.888..127.999 rows=680 loops=1)
                                                              ->  Nested Loop  (cost=3777.26..11403.64 rows=6216 width=12) (actual time=38.873..108.383 rows=6216 loops=1)
                                                                    Join Filter: (cct1.id = cc.subject_id)
                                                                    Rows Removed by Join Filter: 13808
                                                                    ->  Seq Scan on comp_cast_type cct1  (cost=0.00..18.88 rows=1 width=4) (actual time=0.001..0.003 rows=1 loops=1)
                                                                          Filter: ((kind)::text = 'crew'::text)
                                                                          Rows Removed by Filter: 3
                                                                    ->  Hash Join  (cost=3777.26..11134.46 rows=20024 width=16) (actual time=38.840..106.624 rows=20024 loops=1)
                                                                          Hash Cond: (mk.movie_id = cc.movie_id)
                                                                          ->  Nested Loop  (cost=6.83..6345.83 rows=37091 width=4) (actual time=2.916..59.230 rows=37091 loops=1)
                                                                                ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=3 width=4) (actual time=0.839..17.321 rows=3 loops=1)
                                                                                      Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                      Rows Removed by Filter: 134167
                                                                                ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.83..1125.00 rows=309 width=8) (actual time=2.290..12.731 rows=12364 loops=3)
                                                                                      Recheck Cond: (keyword_id = k.id)
                                                                                      Heap Blocks: exact=26312
                                                                                      ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.75 rows=309 width=0) (actual time=1.191..1.191 rows=12364 loops=3)
                                                                                            Index Cond: (keyword_id = k.id)
                                                                          ->  Hash  (cost=2081.86..2081.86 rows=135086 width=12) (actual time=35.553..35.553 rows=135086 loops=1)
                                                                                Buckets: 262144  Batches: 1  Memory Usage: 7853kB
                                                                                ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.008..17.144 rows=135086 loops=1)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=6216)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2000)
                                                                    Rows Removed by Filter: 1
                                                        ->  Hash  (cost=22.75..22.75 rows=2 width=4) (actual time=0.005..0.005 rows=2 loops=1)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                              ->  Seq Scan on kind_type kt  (cost=0.00..22.75 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=1)
                                                                    Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                    Rows Removed by Filter: 5
                                                  ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.004..0.004 rows=3 loops=620)
                                                        Index Cond: (movie_id = mk.movie_id)
                                                        Filter: (info < '8.5'::text)
                                                        Rows Removed by Filter: 0
                                            ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.84 rows=2 width=8) (actual time=0.048..0.057 rows=1 loops=1713)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                                  Rows Removed by Filter: 158
                                ->  Hash  (cost=18.88..18.88 rows=3 width=4) (actual time=0.004..0.004 rows=3 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                      ->  Seq Scan on comp_cast_type cct2  (cost=0.00..18.88 rows=3 width=4) (actual time=0.003..0.004 rows=3 loops=1)
                                            Filter: ((kind)::text <> 'complete+verified'::text)
                                            Rows Removed by Filter: 1
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.005..0.012 rows=11 loops=432)
                          Index Cond: (movie_id = mk.movie_id)
                          Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                          Rows Removed by Filter: 10
              ->  Hash  (cost=17.10..17.10 rows=4 width=4) (actual time=0.007..0.007 rows=4 loops=1)
                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                    ->  Seq Scan on company_type ct  (cost=0.00..17.10 rows=4 width=4) (actual time=0.004..0.005 rows=4 loops=1)
        ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=4955)
              Index Cond: (id = mc.company_id)
              Filter: ((country_code)::text <> '[us]'::text)
              Rows Removed by Filter: 0
Planning time: 57.499 ms
Execution time: 250.360 ms
