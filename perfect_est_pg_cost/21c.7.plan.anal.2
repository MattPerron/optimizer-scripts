Aggregate  (cost=5675.46..5675.47 rows=1 width=96) (actual time=29.494..29.494 rows=1 loops=1)
  ->  Nested Loop  (cost=3940.54..5675.43 rows=4 width=118) (actual time=21.480..29.028 rows=1874 loops=1)
        Join Filter: (ml.movie_id = mi.movie_id)
        ->  Nested Loop  (cost=3940.11..5126.41 rows=302 width=134) (actual time=21.466..25.173 rows=402 loops=1)
              ->  Nested Loop  (cost=3939.69..4686.69 rows=962 width=119) (actual time=21.241..23.475 rows=962 loops=1)
                    Join Filter: (mc.company_type_id = ct.id)
                    Rows Removed by Join Filter: 59
                    ->  Seq Scan on company_type ct  (cost=0.00..18.88 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                          Filter: ((kind)::text = 'production companies'::text)
                          Rows Removed by Filter: 3
                    ->  Nested Loop  (cost=3939.69..4655.06 rows=1021 width=123) (actual time=21.237..23.333 rows=1021 loops=1)
                          Join Filter: (ml.movie_id = mc.movie_id)
                          ->  Nested Loop  (cost=3939.26..4540.05 rows=199 width=111) (actual time=21.228..22.526 rows=199 loops=1)
                                Join Filter: (ml.movie_id = t.id)
                                ->  Hash Join  (cost=3938.83..4439.60 rows=199 width=90) (actual time=21.217..22.128 rows=199 loops=1)
                                      Hash Cond: (ml.movie_id = mk.movie_id)
                                      ->  Nested Loop  (cost=38.82..487.93 rows=2315 width=86) (actual time=0.061..0.764 rows=2315 loops=1)
                                            ->  Seq Scan on link_type lt  (cost=0.00..18.88 rows=2 width=86) (actual time=0.003..0.006 rows=2 loops=1)
                                                  Filter: ((link)::text ~~ '%follow%'::text)
                                                  Rows Removed by Filter: 16
                                            ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=8) (actual time=0.053..0.259 rows=1158 loops=2)
                                                  Recheck Cond: (link_type_id = lt.id)
                                                  Heap Blocks: exact=191
                                                  ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.042..0.042 rows=1158 loops=2)
                                                        Index Cond: (link_type_id = lt.id)
                                      ->  Hash  (cost=3768.21..3768.21 rows=10544 width=4) (actual time=21.141..21.141 rows=10544 loops=1)
                                            Buckets: 16384  Batches: 1  Memory Usage: 499kB
                                            ->  Nested Loop  (cost=6.83..3768.21 rows=10544 width=4) (actual time=2.069..19.879 rows=10544 loops=1)
                                                  ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.568..10.273 rows=1 loops=1)
                                                        Filter: (keyword = 'sequel'::text)
                                                        Rows Removed by Filter: 134169
                                                  ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.83..1138.99 rows=309 width=8) (actual time=1.499..8.400 rows=10544 loops=1)
                                                        Recheck Cond: (keyword_id = k.id)
                                                        Heap Blocks: exact=5570
                                                        ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.75 rows=309 width=0) (actual time=0.802..0.802 rows=10544 loops=1)
                                                              Index Cond: (keyword_id = k.id)
                                ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=199)
                                      Index Cond: (id = mk.movie_id)
                                      Filter: ((production_year >= 1950) AND (production_year <= 2010))
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.002..0.003 rows=5 loops=199)
                                Index Cond: (movie_id = mk.movie_id)
                                Filter: (note IS NULL)
                                Rows Removed by Filter: 2
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=962)
                    Index Cond: (id = mc.company_id)
                    Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                    Rows Removed by Filter: 1
        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.79 rows=2 width=4) (actual time=0.007..0.009 rows=5 loops=402)
              Index Cond: (movie_id = mk.movie_id)
              Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
              Rows Removed by Filter: 16
Planning time: 7.468 ms
Execution time: 29.566 ms
