Aggregate  (cost=43576.25..43576.26 rows=1 width=96) (actual time=103.259..103.259 rows=1 loops=1)
  ->  Nested Loop  (cost=10.39..43576.24 rows=1 width=48) (actual time=12.619..103.163 rows=275 loops=1)
        ->  Nested Loop  (cost=9.97..43574.77 rows=1 width=52) (actual time=12.610..101.571 rows=892 loops=1)
              Join Filter: (t.id = mc.movie_id)
              ->  Nested Loop  (cost=9.54..43571.30 rows=1 width=64) (actual time=12.601..101.122 rows=65 loops=1)
                    Join Filter: (mi.info_type_id = it.id)
                    ->  Nested Loop  (cost=9.54..43568.88 rows=1 width=68) (actual time=12.591..100.883 rows=65 loops=1)
                          ->  Nested Loop  (cost=9.11..43567.13 rows=1 width=56) (actual time=12.435..100.715 rows=66 loops=1)
                                Join Filter: (n.id = an.person_id)
                                ->  Nested Loop  (cost=8.69..43558.71 rows=4 width=64) (actual time=5.768..100.549 rows=37 loops=1)
                                      Join Filter: (t.id = mi.movie_id)
                                      ->  Nested Loop  (cost=8.25..42602.64 rows=30 width=56) (actual time=5.752..99.721 rows=30 loops=1)
                                            ->  Nested Loop  (cost=7.82..41484.84 rows=603 width=37) (actual time=0.917..97.518 rows=603 loops=1)
                                                  Join Filter: (ci.role_id = rt.id)
                                                  Rows Removed by Join Filter: 2022
                                                  ->  Seq Scan on role_type rt  (cost=0.00..18.88 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                                                        Filter: ((role)::text = 'actress'::text)
                                                        Rows Removed by Filter: 11
                                                  ->  Nested Loop  (cost=7.82..41433.15 rows=2625 width=41) (actual time=0.904..97.286 rows=2625 loops=1)
                                                        Join Filter: (t.id = ci.movie_id)
                                                        ->  Nested Loop  (cost=7.26..21722.29 rows=495 width=25) (actual time=0.699..54.758 rows=495 loops=1)
                                                              ->  Nested Loop  (cost=6.83..6178.12 rows=9696 width=4) (actual time=0.652..27.848 rows=9696 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.012..16.365 rows=3 loops=1)
                                                                          Filter: (keyword = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                          Rows Removed by Filter: 134167
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.83..1125.00 rows=309 width=8) (actual time=0.615..3.503 rows=3232 loops=3)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=7446
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.75 rows=309 width=0) (actual time=0.321..0.321 rows=3232 loops=3)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=9696)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2010)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.81 rows=1 width=16) (actual time=0.058..0.085 rows=5 loops=495)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                              Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                              Rows Removed by Filter: 83
                                            ->  Index Scan using name_pkey on name n  (cost=0.43..1.85 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=603)
                                                  Index Cond: (id = ci.person_id)
                                                  Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..31.86 rows=1 width=8) (actual time=0.008..0.027 rows=1 loops=30)
                                            Index Cond: (movie_id = mk.movie_id)
                                            Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%201%'::text) OR (info ~~ 'USA:%201%'::text)))
                                            Rows Removed by Filter: 46
                                ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=37)
                                      Index Cond: (person_id = ci.person_id)
                                      Heap Fetches: 66
                          ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.74 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=66)
                                Index Cond: (id = ci.person_role_id)
                    ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=65)
                          Filter: ((info)::text = 'release dates'::text)
                          Rows Removed by Filter: 15
              ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.41 rows=5 width=8) (actual time=0.002..0.005 rows=14 loops=65)
                    Index Cond: (movie_id = mk.movie_id)
        ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=892)
              Index Cond: (id = mc.company_id)
              Filter: ((country_code)::text = '[us]'::text)
              Rows Removed by Filter: 1
Planning time: 49.679 ms
Execution time: 103.368 ms
