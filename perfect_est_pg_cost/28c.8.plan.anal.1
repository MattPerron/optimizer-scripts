Aggregate  (cost=18553.21..18553.22 rows=1 width=96) (actual time=272.398..272.398 rows=1 loops=1)
  ->  Nested Loop  (cost=3802.47..18553.20 rows=1 width=41) (actual time=37.374..269.523 rows=8373 loops=1)
        ->  Nested Loop  (cost=3802.33..18553.02 rows=1 width=45) (actual time=37.369..259.573 rows=9489 loops=1)
              ->  Nested Loop  (cost=3802.18..18552.84 rows=1 width=49) (actual time=37.363..249.847 rows=9489 loops=1)
                    ->  Nested Loop  (cost=3801.76..18552.35 rows=1 width=34) (actual time=37.354..227.167 rows=9923 loops=1)
                          Join Filter: (t.id = mc.movie_id)
                          ->  Nested Loop  (cost=3801.33..18551.77 rows=1 width=46) (actual time=37.342..214.150 rows=879 loops=1)
                                Join Filter: (t.id = mi.movie_id)
                                ->  Hash Join  (cost=3800.89..18548.03 rows=2 width=38) (actual time=37.321..160.036 rows=851 loops=1)
                                      Hash Cond: (t.kind_id = kt.id)
                                      ->  Nested Loop  (cost=3778.12..18513.14 rows=961 width=42) (actual time=37.305..159.765 rows=961 loops=1)
                                            ->  Nested Loop  (cost=3777.69..15374.14 rows=6409 width=17) (actual time=37.230..138.591 rows=6409 loops=1)
                                                  Join Filter: (it2.id = mi_idx.info_type_id)
                                                  Rows Removed by Join Filter: 12616
                                                  ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.012 rows=1 loops=1)
                                                        Filter: ((info)::text = 'rating'::text)
                                                        Rows Removed by Filter: 112
                                                  ->  Nested Loop  (cost=3777.69..15133.91 rows=19025 width=21) (actual time=37.208..136.708 rows=19025 loops=1)
                                                        ->  Nested Loop  (cost=3777.26..11595.11 rows=6704 width=8) (actual time=37.190..109.283 rows=6704 loops=1)
                                                              Join Filter: (cc.status_id = cct2.id)
                                                              Rows Removed by Join Filter: 7104
                                                              ->  Seq Scan on comp_cast_type cct2  (cost=0.00..18.88 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'complete'::text)
                                                                    Rows Removed by Filter: 3
                                                              ->  Nested Loop  (cost=3777.26..11403.64 rows=13808 width=12) (actual time=37.184..107.756 rows=13808 loops=1)
                                                                    Join Filter: (cct1.id = cc.subject_id)
                                                                    Rows Removed by Join Filter: 6216
                                                                    ->  Seq Scan on comp_cast_type cct1  (cost=0.00..18.88 rows=1 width=4) (actual time=0.001..0.003 rows=1 loops=1)
                                                                          Filter: ((kind)::text = 'cast'::text)
                                                                          Rows Removed by Filter: 3
                                                                    ->  Hash Join  (cost=3777.26..11134.46 rows=20024 width=16) (actual time=37.182..105.437 rows=20024 loops=1)
                                                                          Hash Cond: (mk.movie_id = cc.movie_id)
                                                                          ->  Nested Loop  (cost=6.83..6345.83 rows=37091 width=4) (actual time=2.803..59.577 rows=37091 loops=1)
                                                                                ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=3 width=4) (actual time=0.835..17.056 rows=3 loops=1)
                                                                                      Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                      Rows Removed by Filter: 134167
                                                                                ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.83..1125.00 rows=309 width=8) (actual time=2.222..12.879 rows=12364 loops=3)
                                                                                      Recheck Cond: (keyword_id = k.id)
                                                                                      Heap Blocks: exact=26312
                                                                                      ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.75 rows=309 width=0) (actual time=1.140..1.140 rows=12364 loops=3)
                                                                                            Index Cond: (keyword_id = k.id)
                                                                          ->  Hash  (cost=2081.86..2081.86 rows=135086 width=12) (actual time=34.007..34.007 rows=135086 loops=1)
                                                                                Buckets: 262144  Batches: 1  Memory Usage: 7853kB
                                                                                ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.008..16.608 rows=135086 loops=1)
                                                        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.003..0.004 rows=3 loops=6704)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                              Filter: (info < '8.5'::text)
                                                              Rows Removed by Filter: 0
                                            ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=6409)
                                                  Index Cond: (id = mk.movie_id)
                                                  Filter: (production_year > 2005)
                                                  Rows Removed by Filter: 1
                                      ->  Hash  (cost=22.75..22.75 rows=2 width=4) (actual time=0.010..0.010 rows=2 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                            ->  Seq Scan on kind_type kt  (cost=0.00..22.75 rows=2 width=4) (actual time=0.006..0.008 rows=2 loops=1)
                                                  Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                  Rows Removed by Filter: 5
                                ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.84 rows=2 width=8) (actual time=0.053..0.063 rows=1 loops=851)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                      Rows Removed by Filter: 135
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.006..0.013 rows=11 loops=879)
                                Index Cond: (movie_id = mk.movie_id)
                                Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                Rows Removed by Filter: 13
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=9923)
                          Index Cond: (id = mc.company_id)
                          Filter: ((country_code)::text <> '[us]'::text)
                          Rows Removed by Filter: 0
              ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.15..0.17 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=9489)
                    Index Cond: (id = mc.company_type_id)
                    Heap Fetches: 9489
        ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=9489)
              Index Cond: (id = mi.info_type_id)
              Filter: ((info)::text = 'countries'::text)
              Rows Removed by Filter: 0
Planning time: 58.817 ms
Execution time: 272.532 ms
