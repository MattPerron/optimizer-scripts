Aggregate  (cost=5397.42..5397.43 rows=1 width=192) (actual time=7.744..7.744 rows=1 loops=1)
  ->  Nested Loop  (cost=42.68..5397.40 rows=1 width=82) (actual time=0.777..7.734 rows=4 loops=1)
        ->  Nested Loop  (cost=42.53..5397.22 rows=1 width=86) (actual time=0.770..7.717 rows=12 loops=1)
              ->  Nested Loop  (cost=42.11..5396.69 rows=1 width=89) (actual time=0.764..7.702 rows=4 loops=1)
                    ->  Nested Loop  (cost=41.69..5396.25 rows=1 width=74) (actual time=0.761..7.666 rows=14 loops=1)
                          ->  Nested Loop  (cost=41.26..5395.64 rows=1 width=66) (actual time=0.755..7.639 rows=6 loops=1)
                                Join Filter: (kt1.id = t1.kind_id)
                                ->  Nested Loop  (cost=40.83..5391.16 rows=1 width=49) (actual time=0.749..7.619 rows=6 loops=1)
                                      ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.15..66.00 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                            Filter: ((kind)::text = 'tv series'::text)
                                            Rows Removed by Filter: 6
                                      ->  Nested Loop  (cost=40.68..5325.15 rows=1 width=45) (actual time=0.742..7.607 rows=6 loops=1)
                                            ->  Nested Loop  (cost=40.53..5324.78 rows=2 width=49) (actual time=0.738..7.595 rows=6 loops=1)
                                                  ->  Nested Loop  (cost=40.11..5323.90 rows=2 width=34) (actual time=0.730..7.565 rows=6 loops=1)
                                                        Join Filter: (t2.id = mc2.movie_id)
                                                        ->  Nested Loop  (cost=39.68..5322.42 rows=2 width=42) (actual time=0.723..7.545 rows=2 loops=1)
                                                              Join Filter: (ml.linked_movie_id = t2.id)
                                                              ->  Nested Loop  (cost=39.25..5297.40 rows=34 width=17) (actual time=0.714..7.402 rows=34 loops=1)
                                                                    Join Filter: (mi_idx2.info_type_id = it2.id)
                                                                    Rows Removed by Join Filter: 2910
                                                                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                                    ->  Nested Loop  (cost=39.25..5258.19 rows=2944 width=21) (actual time=0.079..7.214 rows=2944 loops=1)
                                                                          ->  Nested Loop  (cost=38.82..487.93 rows=2315 width=8) (actual time=0.069..0.898 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..18.88 rows=2 width=4) (actual time=0.004..0.009 rows=2 loops=1)
                                                                                      Filter: ((link)::text ~~ '%follow%'::text)
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.058..0.308 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.046..0.046 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=13) (actual time=0.002..0.002 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.0'::text)
                                                                                Rows Removed by Filter: 1
                                                              ->  Index Scan using title_pkey on title t2  (cost=0.43..0.72 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=34)
                                                                    Index Cond: (id = mi_idx2.movie_id)
                                                                    Filter: (production_year = 2007)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.006..0.008 rows=3 loops=2)
                                                              Index Cond: (movie_id = mi_idx2.movie_id)
                                                  ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=6)
                                                        Index Cond: (id = mc2.company_id)
                                            ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.15..0.17 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=6)
                                                  Index Cond: (id = t2.kind_id)
                                                  Filter: ((kind)::text = 'tv series'::text)
                                ->  Index Scan using title_pkey on title t1  (cost=0.43..4.47 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=6)
                                      Index Cond: (id = ml.movie_id)
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.003..0.004 rows=2 loops=6)
                                Index Cond: (movie_id = t1.id)
                    ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=14)
                          Index Cond: (id = mc1.company_id)
                          Filter: ((country_code)::text = '[nl]'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..0.50 rows=3 width=13) (actual time=0.002..0.003 rows=3 loops=4)
                    Index Cond: (movie_id = t1.id)
        ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=12)
              Index Cond: (id = mi_idx1.info_type_id)
              Filter: ((info)::text = 'rating'::text)
              Rows Removed by Filter: 1
Planning time: 61.248 ms
Execution time: 7.860 ms
