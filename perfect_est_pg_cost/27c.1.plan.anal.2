Aggregate  (cost=614.18..614.19 rows=1 width=96) (actual time=35.511..35.511 rows=1 loops=1)
  ->  Nested Loop  (cost=42.26..614.17 rows=1 width=118) (actual time=2.114..35.254 rows=743 loops=1)
        ->  Nested Loop  (cost=41.84..573.99 rows=91 width=122) (actual time=0.386..18.323 rows=11620 loops=1)
              Join Filter: (ml.movie_id = mk.movie_id)
              ->  Nested Loop  (cost=41.40..570.21 rows=2 width=138) (actual time=0.380..13.387 rows=1150 loops=1)
                    Join Filter: (ml.movie_id = t.id)
                    ->  Nested Loop  (cost=40.97..568.40 rows=3 width=117) (actual time=0.373..11.407 rows=1150 loops=1)
                          Join Filter: (ml.movie_id = mi.movie_id)
                          ->  Nested Loop  (cost=40.54..566.12 rows=1 width=113) (actual time=0.342..7.961 rows=277 loops=1)
                                ->  Nested Loop  (cost=40.39..565.93 rows=1 width=117) (actual time=0.340..7.603 rows=337 loops=1)
                                      ->  Nested Loop  (cost=40.24..565.74 rows=1 width=121) (actual time=0.337..7.211 rows=359 loops=1)
                                            ->  Nested Loop  (cost=39.82..564.37 rows=3 width=106) (actual time=0.314..5.107 rows=1043 loops=1)
                                                  Join Filter: (ml.movie_id = mc.movie_id)
                                                  ->  Nested Loop  (cost=39.39..563.04 rows=1 width=94) (actual time=0.306..3.955 rows=257 loops=1)
                                                        ->  Nested Loop  (cost=39.24..540.20 rows=134 width=98) (actual time=0.302..3.696 rows=257 loops=1)
                                                              ->  Nested Loop  (cost=38.82..487.93 rows=84 width=86) (actual time=0.066..0.847 rows=2315 loops=1)
                                                                    ->  Seq Scan on link_type lt  (cost=0.00..18.88 rows=2 width=86) (actual time=0.006..0.010 rows=2 loops=1)
                                                                          Filter: ((link)::text ~~ '%follow%'::text)
                                                                          Rows Removed by Filter: 16
                                                                    ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=8) (actual time=0.057..0.287 rows=1158 loops=2)
                                                                          Recheck Cond: (link_type_id = lt.id)
                                                                          Heap Blocks: exact=191
                                                                          ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.044..0.044 rows=1158 loops=2)
                                                                                Index Cond: (link_type_id = lt.id)
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.60 rows=2 width=12) (actual time=0.001..0.001 rows=0 loops=2315)
                                                                    Index Cond: (movie_id = ml.movie_id)
                                                        ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.15..0.17 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=257)
                                                              Index Cond: (id = cc.status_id)
                                                              Filter: ((kind)::text ~~ 'complete%'::text)
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=3 width=12) (actual time=0.003..0.004 rows=4 loops=257)
                                                        Index Cond: (movie_id = cc.movie_id)
                                                        Filter: (note IS NULL)
                                                        Rows Removed by Filter: 3
                                            ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1043)
                                                  Index Cond: (id = mc.company_id)
                                                  Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using company_type_pkey on company_type ct  (cost=0.15..0.17 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=359)
                                            Index Cond: (id = mc.company_type_id)
                                            Filter: ((kind)::text = 'production companies'::text)
                                            Rows Removed by Filter: 0
                                ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.15..0.17 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=337)
                                      Index Cond: (id = cc.subject_id)
                                      Filter: ((kind)::text = 'cast'::text)
                                      Rows Removed by Filter: 0
                          ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.25 rows=2 width=4) (actual time=0.010..0.012 rows=4 loops=277)
                                Index Cond: (movie_id = mc.movie_id)
                                Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
                                Rows Removed by Filter: 21
                    ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=1150)
                          Index Cond: (id = mc.movie_id)
                          Filter: ((production_year >= 1950) AND (production_year <= 2010))
              ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.32 rows=46 width=8) (actual time=0.002..0.003 rows=10 loops=1150)
                    Index Cond: (movie_id = t.id)
        ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=11620)
              Index Cond: (id = mk.keyword_id)
              Filter: (keyword = 'sequel'::text)
              Rows Removed by Filter: 1
Planning time: 47.435 ms
Execution time: 35.609 ms
