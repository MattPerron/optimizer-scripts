Aggregate  (cost=675.22..675.23 rows=1 width=192) (actual time=10.221..10.221 rows=1 loops=1)
  ->  Nested Loop  (cost=42.68..675.20 rows=1 width=82) (actual time=0.809..10.151 rows=114 loops=1)
        ->  Nested Loop  (cost=42.53..675.02 rows=1 width=86) (actual time=0.768..9.837 rows=342 loops=1)
              ->  Nested Loop  (cost=42.11..674.57 rows=1 width=71) (actual time=0.765..9.264 rows=342 loops=1)
                    ->  Nested Loop  (cost=41.68..673.91 rows=1 width=79) (actual time=0.760..8.904 rows=138 loops=1)
                          ->  Nested Loop  (cost=41.26..673.38 rows=1 width=82) (actual time=0.756..8.757 rows=49 loops=1)
                                ->  Nested Loop  (cost=41.11..673.20 rows=1 width=86) (actual time=0.754..8.685 rows=75 loops=1)
                                      Join Filter: (ml.linked_movie_id = t2.id)
                                      ->  Nested Loop  (cost=40.68..672.48 rows=1 width=61) (actual time=0.748..8.420 rows=98 loops=1)
                                            ->  Nested Loop  (cost=40.53..672.29 rows=1 width=65) (actual time=0.744..8.318 rows=98 loops=1)
                                                  ->  Nested Loop  (cost=40.11..671.85 rows=1 width=50) (actual time=0.720..7.982 rows=126 loops=1)
                                                        ->  Nested Loop  (cost=39.68..671.24 rows=1 width=42) (actual time=0.713..7.771 rows=47 loops=1)
                                                              ->  Nested Loop  (cost=39.25..666.77 rows=1 width=17) (actual time=0.707..7.587 rows=47 loops=1)
                                                                    Join Filter: (it2.id = mi_idx2.info_type_id)
                                                                    Rows Removed by Join Filter: 3033
                                                                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                                    ->  Nested Loop  (cost=39.25..662.74 rows=129 width=21) (actual time=0.080..7.394 rows=3080 loops=1)
                                                                          ->  Nested Loop  (cost=38.82..488.81 rows=84 width=8) (actual time=0.070..0.935 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..19.76 rows=2 width=4) (actual time=0.004..0.010 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.060..0.337 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.048..0.048 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=2 width=13) (actual time=0.002..0.003 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.5'::text)
                                                                                Rows Removed by Filter: 1
                                                              ->  Index Scan using title_pkey on title t1  (cost=0.43..4.47 rows=1 width=25) (actual time=0.004..0.004 rows=1 loops=47)
                                                                    Index Cond: (id = ml.movie_id)
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.003..0.004 rows=3 loops=47)
                                                              Index Cond: (movie_id = t1.id)
                                                  ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=126)
                                                        Index Cond: (id = mc1.company_id)
                                                        Filter: ((country_code)::text <> '[us]'::text)
                                                        Rows Removed by Filter: 0
                                            ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.15..0.17 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=98)
                                                  Index Cond: (id = t1.kind_id)
                                                  Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                      ->  Index Scan using title_pkey on title t2  (cost=0.43..0.71 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=98)
                                            Index Cond: (id = mi_idx2.movie_id)
                                            Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                            Rows Removed by Filter: 0
                                ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.15..0.17 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=75)
                                      Index Cond: (id = t2.kind_id)
                                      Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                      Rows Removed by Filter: 0
                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..0.50 rows=3 width=13) (actual time=0.002..0.002 rows=3 loops=49)
                                Index Cond: (movie_id = t1.id)
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.002..0.002 rows=2 loops=138)
                          Index Cond: (movie_id = t2.id)
              ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=342)
                    Index Cond: (id = mc2.company_id)
        ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=342)
              Index Cond: (id = mi_idx1.info_type_id)
              Filter: ((info)::text = 'rating'::text)
              Rows Removed by Filter: 1
Planning time: 59.589 ms
Execution time: 10.340 ms
