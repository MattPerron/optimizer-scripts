Aggregate  (cost=5583.77..5583.78 rows=1 width=192) (actual time=8.214..8.214 rows=1 loops=1)
  ->  Nested Loop  (cost=42.68..5583.70 rows=5 width=82) (actual time=0.808..8.202 rows=8 loops=1)
        ->  Nested Loop  (cost=42.26..5577.46 rows=14 width=67) (actual time=0.772..8.142 rows=28 loops=1)
              ->  Nested Loop  (cost=41.84..5571.25 rows=14 width=52) (actual time=0.765..8.066 rows=28 loops=1)
                    Join Filter: (t2.id = mc2.movie_id)
                    ->  Nested Loop  (cost=41.41..5560.92 rows=14 width=60) (actual time=0.759..8.017 rows=14 loops=1)
                          Join Filter: ((ml.linked_movie_id = t2.id) AND (kt2.id = t2.kind_id))
                          ->  Nested Loop  (cost=40.98..5500.91 rows=81 width=43) (actual time=0.754..7.828 rows=81 loops=1)
                                ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.15..66.00 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                      Filter: ((kind)::text = 'tv series'::text)
                                      Rows Removed by Filter: 6
                                ->  Nested Loop  (cost=40.83..5434.10 rows=81 width=39) (actual time=0.746..7.809 rows=81 loops=1)
                                      ->  Nested Loop  (cost=40.68..5419.46 rows=86 width=43) (actual time=0.743..7.727 rows=86 loops=1)
                                            ->  Nested Loop  (cost=40.25..5401.20 rows=30 width=51) (actual time=0.737..7.593 rows=30 loops=1)
                                                  Join Filter: (ml.movie_id = t1.id)
                                                  ->  Nested Loop  (cost=39.82..5383.49 rows=30 width=26) (actual time=0.729..7.490 rows=30 loops=1)
                                                        Join Filter: (it1.id = mi_idx1.info_type_id)
                                                        Rows Removed by Join Filter: 60
                                                        ->  Nested Loop  (cost=39.39..5312.75 rows=34 width=21) (actual time=0.724..7.398 rows=34 loops=1)
                                                              ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..14.12 rows=1 width=4) (actual time=0.018..0.021 rows=1 loops=1)
                                                                    Filter: ((info)::text = 'rating'::text)
                                                                    Rows Removed by Filter: 112
                                                              ->  Nested Loop  (cost=39.25..5298.29 rows=34 width=17) (actual time=0.705..7.373 rows=34 loops=1)
                                                                    Join Filter: (mi_idx2.info_type_id = it2.id)
                                                                    Rows Removed by Join Filter: 2910
                                                                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.012 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                                    ->  Nested Loop  (cost=39.25..5259.08 rows=2944 width=21) (actual time=0.077..7.180 rows=2944 loops=1)
                                                                          ->  Nested Loop  (cost=38.82..488.81 rows=2315 width=8) (actual time=0.067..0.870 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..19.76 rows=2 width=4) (actual time=0.003..0.008 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.056..0.304 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.045..0.045 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=13) (actual time=0.002..0.002 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.0'::text)
                                                                                Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..2.04 rows=3 width=13) (actual time=0.002..0.002 rows=3 loops=34)
                                                              Index Cond: (movie_id = ml.movie_id)
                                                  ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=30)
                                                        Index Cond: (id = mi_idx1.movie_id)
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.003..0.004 rows=3 loops=30)
                                                  Index Cond: (movie_id = t1.id)
                                      ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.15..0.17 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=86)
                                            Index Cond: (id = t1.kind_id)
                                            Filter: ((kind)::text = 'tv series'::text)
                                            Rows Removed by Filter: 0
                          ->  Index Scan using title_pkey on title t2  (cost=0.43..0.73 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=81)
                                Index Cond: (id = mi_idx2.movie_id)
                                Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                Rows Removed by Filter: 1
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.002..0.003 rows=2 loops=14)
                          Index Cond: (movie_id = mi_idx2.movie_id)
              ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=28)
                    Index Cond: (id = mc2.company_id)
        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=28)
              Index Cond: (id = mc1.company_id)
              Filter: ((country_code)::text = '[us]'::text)
              Rows Removed by Filter: 1
Planning time: 60.622 ms
Execution time: 8.330 ms
