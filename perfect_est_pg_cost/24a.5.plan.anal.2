Aggregate  (cost=52340.63..52340.64 rows=1 width=96) (actual time=413.185..413.185 rows=1 loops=1)
  ->  Nested Loop  (cost=10.39..52340.62 rows=1 width=48) (actual time=39.678..413.077 rows=275 loops=1)
        Join Filter: (n.id = an.person_id)
        ->  Nested Loop  (cost=9.97..52338.52 rows=1 width=56) (actual time=16.019..412.619 rows=141 loops=1)
              Join Filter: (rt.id = ci.role_id)
              ->  Seq Scan on role_type rt  (cost=0.00..18.88 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                    Filter: ((role)::text = 'actress'::text)
                    Rows Removed by Filter: 11
              ->  Nested Loop  (cost=9.97..52319.63 rows=1 width=60) (actual time=16.010..412.577 rows=141 loops=1)
                    ->  Nested Loop  (cost=9.54..52317.89 rows=1 width=48) (actual time=15.998..412.160 rows=143 loops=1)
                          ->  Nested Loop  (cost=9.11..52143.64 rows=94 width=29) (actual time=0.990..383.268 rows=13758 loops=1)
                                Join Filter: (t.id = ci.movie_id)
                                ->  Nested Loop  (cost=8.54..41193.16 rows=275 width=33) (actual time=0.731..109.548 rows=3406 loops=1)
                                      ->  Nested Loop  (cost=8.12..40069.69 rows=762 width=37) (actual time=0.724..81.059 rows=13560 loops=1)
                                            Join Filter: (t.id = mc.movie_id)
                                            ->  Nested Loop  (cost=7.69..37509.18 rows=738 width=29) (actual time=0.717..73.986 rows=738 loops=1)
                                                  Join Filter: (it.id = mi.info_type_id)
                                                  ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.006..0.014 rows=1 loops=1)
                                                        Filter: ((info)::text = 'release dates'::text)
                                                        Rows Removed by Filter: 112
                                                  ->  Nested Loop  (cost=7.69..37497.54 rows=738 width=33) (actual time=0.710..73.850 rows=738 loops=1)
                                                        Join Filter: (t.id = mi.movie_id)
                                                        ->  Nested Loop  (cost=7.26..21722.29 rows=495 width=25) (actual time=0.699..57.403 rows=495 loops=1)
                                                              ->  Nested Loop  (cost=6.83..6178.12 rows=9696 width=4) (actual time=0.652..28.518 rows=9696 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.012..15.861 rows=3 loops=1)
                                                                          Filter: (keyword = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                          Rows Removed by Filter: 134167
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.83..1125.00 rows=309 width=8) (actual time=0.641..3.893 rows=3232 loops=3)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=7446
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.75 rows=309 width=0) (actual time=0.340..0.340 rows=3232 loops=3)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=9696)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2010)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..31.86 rows=1 width=8) (actual time=0.013..0.033 rows=1 loops=495)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                              Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%201%'::text) OR (info ~~ 'USA:%201%'::text)))
                                                              Rows Removed by Filter: 70
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.41 rows=5 width=8) (actual time=0.003..0.007 rows=18 loops=738)
                                                  Index Cond: (movie_id = mk.movie_id)
                                      ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=13560)
                                            Index Cond: (id = mc.company_id)
                                            Filter: ((country_code)::text = '[us]'::text)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.81 rows=1 width=16) (actual time=0.052..0.080 rows=4 loops=3406)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                      Rows Removed by Filter: 169
                          ->  Index Scan using name_pkey on name n  (cost=0.43..1.85 rows=1 width=19) (actual time=0.002..0.002 rows=0 loops=13758)
                                Index Cond: (id = ci.person_id)
                                Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                Rows Removed by Filter: 1
                    ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.74 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=143)
                          Index Cond: (id = ci.person_role_id)
        ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.002..0.003 rows=2 loops=141)
              Index Cond: (person_id = ci.person_id)
              Heap Fetches: 275
Planning time: 49.951 ms
Execution time: 413.303 ms
