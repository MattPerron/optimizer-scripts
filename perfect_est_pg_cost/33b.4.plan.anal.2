Aggregate  (cost=5639.44..5639.45 rows=1 width=192) (actual time=8.079..8.079 rows=1 loops=1)
  ->  Nested Loop  (cost=42.53..5639.43 rows=1 width=82) (actual time=0.766..8.070 rows=4 loops=1)
        Join Filter: ((ml.linked_movie_id = t2.id) AND (kt2.id = t2.kind_id))
        ->  Nested Loop  (cost=42.10..5636.76 rows=5 width=81) (actual time=0.760..8.040 rows=10 loops=1)
              ->  Nested Loop  (cost=41.68..5634.54 rows=5 width=66) (actual time=0.757..8.001 rows=10 loops=1)
                    Join Filter: (ml.linked_movie_id = mc2.movie_id)
                    ->  Nested Loop  (cost=41.25..5633.80 rows=1 width=58) (actual time=0.752..7.975 rows=4 loops=1)
                          ->  Nested Loop  (cost=40.83..5633.36 rows=1 width=43) (actual time=0.743..7.769 rows=81 loops=1)
                                Join Filter: (kt1.id = t1.kind_id)
                                Rows Removed by Join Filter: 5
                                ->  Nested Loop  (cost=0.15..88.76 rows=1 width=8) (actual time=0.010..0.013 rows=1 loops=1)
                                      ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.15..66.00 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                            Filter: ((kind)::text = 'tv series'::text)
                                            Rows Removed by Filter: 6
                                      ->  Seq Scan on kind_type kt1  (cost=0.00..22.75 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                            Filter: ((kind)::text = 'tv series'::text)
                                            Rows Removed by Filter: 6
                                ->  Nested Loop  (cost=40.68..5544.53 rows=5 width=43) (actual time=0.732..7.743 rows=86 loops=1)
                                      Join Filter: (ml.movie_id = t1.id)
                                      ->  Nested Loop  (cost=40.25..5541.89 rows=5 width=34) (actual time=0.715..7.543 rows=86 loops=1)
                                            Join Filter: ((ml.movie_id = mi_idx1.movie_id) AND (it1.id = mi_idx1.info_type_id))
                                            Rows Removed by Join Filter: 172
                                            ->  Nested Loop  (cost=39.82..5446.87 rows=175 width=29) (actual time=0.710..7.329 rows=93 loops=1)
                                                  ->  Nested Loop  (cost=39.39..5311.86 rows=34 width=21) (actual time=0.704..7.184 rows=34 loops=1)
                                                        ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..14.12 rows=1 width=4) (actual time=0.017..0.020 rows=1 loops=1)
                                                              Filter: ((info)::text = 'rating'::text)
                                                              Rows Removed by Filter: 112
                                                        ->  Nested Loop  (cost=39.25..5297.40 rows=34 width=17) (actual time=0.687..7.160 rows=34 loops=1)
                                                              Join Filter: (mi_idx2.info_type_id = it2.id)
                                                              Rows Removed by Join Filter: 2910
                                                              ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                                                                    Filter: ((info)::text = 'rating'::text)
                                                                    Rows Removed by Filter: 112
                                                              ->  Nested Loop  (cost=39.25..5258.19 rows=2944 width=21) (actual time=0.077..6.980 rows=2944 loops=1)
                                                                    ->  Nested Loop  (cost=38.82..487.93 rows=2315 width=8) (actual time=0.066..0.869 rows=2315 loops=1)
                                                                          ->  Seq Scan on link_type lt  (cost=0.00..18.88 rows=2 width=4) (actual time=0.003..0.009 rows=2 loops=1)
                                                                                Filter: ((link)::text ~~ '%follow%'::text)
                                                                                Rows Removed by Filter: 16
                                                                          ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.055..0.298 rows=1158 loops=2)
                                                                                Recheck Cond: (link_type_id = lt.id)
                                                                                Heap Blocks: exact=191
                                                                                ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.043..0.043 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=13) (actual time=0.002..0.002 rows=1 loops=2315)
                                                                          Index Cond: (movie_id = ml.linked_movie_id)
                                                                          Filter: (info < '3.0'::text)
                                                                          Rows Removed by Filter: 1
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..3.92 rows=5 width=8) (actual time=0.003..0.004 rows=3 loops=34)
                                                        Index Cond: (movie_id = ml.movie_id)
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..0.50 rows=3 width=13) (actual time=0.001..0.002 rows=3 loops=93)
                                                  Index Cond: (movie_id = mc1.movie_id)
                                      ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=86)
                                            Index Cond: (id = mc1.movie_id)
                          ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=81)
                                Index Cond: (id = mc1.company_id)
                                Filter: ((country_code)::text = '[nl]'::text)
                                Rows Removed by Filter: 1
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.004..0.006 rows=2 loops=4)
                          Index Cond: (movie_id = mi_idx2.movie_id)
              ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=10)
                    Index Cond: (id = mc2.company_id)
        ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=10)
              Index Cond: (id = mc2.movie_id)
              Filter: (production_year = 2007)
              Rows Removed by Filter: 1
Planning time: 61.172 ms
Execution time: 8.189 ms
