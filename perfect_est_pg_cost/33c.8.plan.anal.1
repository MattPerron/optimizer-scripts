Aggregate  (cost=5707.10..5707.11 rows=1 width=192) (actual time=9.221..9.221 rows=1 loops=1)
  ->  Nested Loop  (cost=42.68..5707.08 rows=1 width=82) (actual time=0.799..9.152 rows=114 loops=1)
        ->  Nested Loop  (cost=42.53..5706.90 rows=1 width=86) (actual time=0.797..9.045 rows=114 loops=1)
              Join Filter: (ml.movie_id = t1.id)
              ->  Nested Loop  (cost=42.10..5706.37 rows=1 width=77) (actual time=0.791..8.834 rows=114 loops=1)
                    ->  Nested Loop  (cost=41.68..5705.93 rows=1 width=62) (actual time=0.788..8.608 rows=114 loops=1)
                          ->  Nested Loop  (cost=41.25..5705.26 rows=1 width=70) (actual time=0.782..8.455 rows=46 loops=1)
                                ->  Nested Loop  (cost=41.10..5698.78 rows=38 width=74) (actual time=0.777..8.379 rows=72 loops=1)
                                      Join Filter: (ml.linked_movie_id = t2.id)
                                      ->  Nested Loop  (cost=40.67..5633.29 rows=91 width=49) (actual time=0.770..8.122 rows=91 loops=1)
                                            Join Filter: ((ml.movie_id = mi_idx1.movie_id) AND (it1.id = mi_idx1.info_type_id))
                                            Rows Removed by Join Filter: 182
                                            ->  Nested Loop  (cost=40.24..5580.08 rows=98 width=44) (actual time=0.764..7.880 rows=98 loops=1)
                                                  ->  Nested Loop  (cost=39.82..5523.90 rows=126 width=29) (actual time=0.744..7.555 rows=126 loops=1)
                                                        ->  Nested Loop  (cost=39.39..5337.27 rows=47 width=21) (actual time=0.727..7.338 rows=47 loops=1)
                                                              Join Filter: (it2.id = mi_idx2.info_type_id)
                                                              Rows Removed by Join Filter: 3033
                                                              ->  Nested Loop  (cost=0.14..16.54 rows=1 width=8) (actual time=0.030..0.035 rows=1 loops=1)
                                                                    ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..14.12 rows=1 width=4) (actual time=0.020..0.022 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.012 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                              ->  Nested Loop  (cost=39.25..5282.23 rows=3080 width=21) (actual time=0.077..7.117 rows=3080 loops=1)
                                                                    ->  Nested Loop  (cost=38.82..488.81 rows=2315 width=8) (actual time=0.066..0.876 rows=2315 loops=1)
                                                                          ->  Seq Scan on link_type lt  (cost=0.00..19.76 rows=2 width=4) (actual time=0.004..0.007 rows=2 loops=1)
                                                                                Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                Rows Removed by Filter: 16
                                                                          ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.056..0.309 rows=1158 loops=2)
                                                                                Recheck Cond: (link_type_id = lt.id)
                                                                                Heap Blocks: exact=191
                                                                                ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.044..0.044 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=2 width=13) (actual time=0.002..0.002 rows=1 loops=2315)
                                                                          Index Cond: (movie_id = ml.linked_movie_id)
                                                                          Filter: (info < '3.5'::text)
                                                                          Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..3.92 rows=5 width=8) (actual time=0.003..0.004 rows=3 loops=47)
                                                              Index Cond: (movie_id = ml.movie_id)
                                                  ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=126)
                                                        Index Cond: (id = mc1.company_id)
                                                        Filter: ((country_code)::text <> '[us]'::text)
                                                        Rows Removed by Filter: 0
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..0.50 rows=3 width=13) (actual time=0.002..0.002 rows=3 loops=98)
                                                  Index Cond: (movie_id = mc1.movie_id)
                                      ->  Index Scan using title_pkey on title t2  (cost=0.43..0.71 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=91)
                                            Index Cond: (id = mi_idx2.movie_id)
                                            Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                            Rows Removed by Filter: 0
                                ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.15..0.17 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=72)
                                      Index Cond: (id = t2.kind_id)
                                      Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                      Rows Removed by Filter: 0
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.002..0.003 rows=2 loops=46)
                                Index Cond: (movie_id = t2.id)
                    ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=114)
                          Index Cond: (id = mc2.company_id)
              ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=114)
                    Index Cond: (id = mc1.movie_id)
        ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.15..0.17 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=114)
              Index Cond: (id = t1.kind_id)
              Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
Planning time: 59.454 ms
Execution time: 9.336 ms
