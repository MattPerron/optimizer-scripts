Aggregate  (cost=22434.03..22434.04 rows=1 width=68) (actual time=5.221..5.221 rows=1 loops=1)
  ->  Nested Loop  (cost=6463.11..22429.92 rows=549 width=45) (actual time=0.079..5.163 rows=142 loops=1)
        Join Filter: (mc.company_type_id = ct.id)
        Rows Removed by Join Filter: 5
        ->  Seq Scan on company_type ct  (cost=0.00..18.88 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
              Filter: ((kind)::text = 'production companies'::text)
              Rows Removed by Filter: 3
        ->  Nested Loop  (cost=6463.11..22409.20 rows=147 width=49) (actual time=0.075..5.136 rows=147 loops=1)
              Join Filter: (mc.movie_id = t.id)
              ->  Nested Loop  (cost=6462.68..22322.41 rows=147 width=36) (actual time=0.069..4.744 rows=147 loops=1)
                    ->  Nested Loop  (cost=6462.25..22162.36 rows=250 width=4) (actual time=0.034..0.087 rows=250 loops=1)
                          ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                Filter: ((info)::text = 'top 250 rank'::text)
                                Rows Removed by Filter: 112
                          ->  Bitmap Heap Scan on movie_info_idx mi_idx  (cost=6462.25..18709.86 rows=345009 width=8) (actual time=0.022..0.045 rows=250 loops=1)
                                Recheck Cond: (info_type_id = it.id)
                                Heap Blocks: exact=2
                                ->  Bitmap Index Scan on info_type_id_movie_info_idx  (cost=0.00..6375.99 rows=345009 width=0) (actual time=0.015..0.015 rows=250 loops=1)
                                      Index Cond: (info_type_id = it.id)
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.63 rows=1 width=32) (actual time=0.018..0.018 rows=1 loops=250)
                          Index Cond: (movie_id = mi_idx.movie_id)
                          Filter: ((note !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text) AND ((note ~~ '%(co-production)%'::text) OR (note ~~ '%(presents)%'::text)))
                          Rows Removed by Filter: 33
              ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=147)
                    Index Cond: (id = mi_idx.movie_id)
Planning time: 0.844 ms
Execution time: 5.287 ms
