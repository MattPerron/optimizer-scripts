Aggregate  (cost=66603.61..66603.62 rows=1 width=64) (actual time=622.021..622.021 rows=1 loops=1)
  ->  Nested Loop  (cost=7012.43..66603.52 rows=17 width=59) (actual time=52.548..621.877 rows=328 loops=1)
        ->  Nested Loop  (cost=7012.01..66596.06 rows=17 width=63) (actual time=52.537..620.974 rows=328 loops=1)
              ->  Nested Loop  (cost=7011.58..66594.26 rows=1 width=75) (actual time=50.242..620.609 rows=57 loops=1)
                    ->  Nested Loop  (cost=7011.44..66594.06 rows=1 width=79) (actual time=50.235..620.438 rows=57 loops=1)
                          ->  Nested Loop  (cost=7011.00..66549.11 rows=23 width=29) (actual time=44.835..515.305 rows=5134 loops=1)
                                ->  Nested Loop  (cost=7010.57..66508.36 rows=43 width=8) (actual time=44.823..484.468 rows=13699 loops=1)
                                      ->  Hash Join  (cost=7010.15..66268.48 rows=247 width=4) (actual time=44.599..414.938 rows=43837 loops=1)
                                            Hash Cond: (mc.company_type_id = ct.id)
                                            ->  Hash Join  (cost=6993.00..65698.44 rows=43837 width=8) (actual time=44.584..406.737 rows=43837 loops=1)
                                                  Hash Cond: (mc.company_id = cn.id)
                                                  ->  Seq Scan on movie_companies mc  (cost=0.00..57926.93 rows=61664 width=12) (actual time=0.007..346.391 rows=61664 loops=1)
                                                        Filter: ((note ~~ '%(200%)%'::text) AND (note ~~ '%(worldwide)%'::text))
                                                        Rows Removed by Filter: 2547465
                                                  ->  Hash  (cost=5932.46..5932.46 rows=84843 width=4) (actual time=44.429..44.429 rows=84843 loops=1)
                                                        Buckets: 131072  Batches: 1  Memory Usage: 4007kB
                                                        ->  Seq Scan on company_name cn  (cost=0.00..5932.46 rows=84843 width=4) (actual time=0.006..32.614 rows=84843 loops=1)
                                                              Filter: ((country_code)::text = '[us]'::text)
                                                              Rows Removed by Filter: 150154
                                            ->  Hash  (cost=17.10..17.10 rows=4 width=4) (actual time=0.009..0.009 rows=4 loops=1)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                  ->  Seq Scan on company_type ct  (cost=0.00..17.10 rows=4 width=4) (actual time=0.006..0.006 rows=4 loops=1)
                                      ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..0.94 rows=3 width=4) (actual time=0.001..0.001 rows=0 loops=43837)
                                            Index Cond: (movie_id = mc.movie_id)
                                            Heap Fetches: 13699
                                ->  Index Scan using title_pkey on title t  (cost=0.43..0.95 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=13699)
                                      Index Cond: (id = at.movie_id)
                                      Filter: (production_year > 2000)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.94 rows=1 width=50) (actual time=0.020..0.020 rows=0 loops=5134)
                                Index Cond: (movie_id = t.id)
                                Filter: ((note ~~ '%internet%'::text) AND (info ~~ 'USA:% 200%'::text))
                                Rows Removed by Filter: 72
                    ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.17 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=57)
                          Index Cond: (id = mi.info_type_id)
                          Filter: ((info)::text = 'release dates'::text)
              ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=46 width=8) (actual time=0.004..0.005 rows=6 loops=57)
                    Index Cond: (movie_id = t.id)
        ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=328)
              Index Cond: (id = mk.keyword_id)
              Heap Fetches: 328
Planning time: 7.983 ms
Execution time: 622.118 ms
