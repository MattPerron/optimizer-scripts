Aggregate  (cost=2976.63..2976.64 rows=1 width=192) (actual time=50.897..50.897 rows=1 loops=1)
  ->  Nested Loop  (cost=620.86..2976.62 rows=1 width=82) (actual time=10.043..50.884 rows=4 loops=1)
        ->  Nested Loop  (cost=620.72..2976.44 rows=1 width=86) (actual time=10.011..50.868 rows=8 loops=1)
              Join Filter: ((ml.linked_movie_id = t2.id) AND (kt2.id = t2.kind_id))
              Rows Removed by Join Filter: 34
              ->  Nested Loop  (cost=620.29..2973.77 rows=5 width=85) (actual time=1.387..45.862 rows=3049 loops=1)
                    ->  Nested Loop  (cost=619.87..2971.55 rows=5 width=70) (actual time=1.383..40.650 rows=3049 loops=1)
                          Join Filter: (ml.linked_movie_id = mc2.movie_id)
                          ->  Nested Loop  (cost=619.44..2970.81 rows=1 width=62) (actual time=1.376..38.486 rows=519 loops=1)
                                ->  Nested Loop  (cost=619.01..2968.75 rows=1 width=49) (actual time=1.366..37.245 rows=393 loops=1)
                                      ->  Nested Loop  (cost=618.59..2968.31 rows=1 width=34) (actual time=1.344..27.421 rows=5590 loops=1)
                                            ->  Nested Loop  (cost=618.16..2967.70 rows=1 width=42) (actual time=1.338..23.322 rows=1220 loops=1)
                                                  Join Filter: (kt1.id = t1.kind_id)
                                                  Rows Removed by Join Filter: 844
                                                  ->  Nested Loop  (cost=618.16..2921.36 rows=55 width=42) (actual time=1.331..22.614 rows=2064 loops=1)
                                                        Join Filter: (ml.movie_id = t1.id)
                                                        ->  Nested Loop  (cost=617.73..2888.89 rows=55 width=17) (actual time=1.323..18.466 rows=2064 loops=1)
                                                              Join Filter: (it1.id = mi_idx1.info_type_id)
                                                              Rows Removed by Join Filter: 4128
                                                              ->  Merge Join  (cost=617.73..2793.59 rows=6192 width=21) (actual time=1.304..16.801 rows=6192 loops=1)
                                                                    Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43815.31 rows=1380035 width=13) (actual time=0.009..9.606 rows=63901 loops=1)
                                                                    ->  Sort  (cost=617.30..623.08 rows=2315 width=8) (actual time=1.269..1.648 rows=6443 loops=1)
                                                                          Sort Key: ml.movie_id
                                                                          Sort Method: quicksort  Memory: 205kB
                                                                          ->  Nested Loop  (cost=38.82..487.93 rows=2315 width=8) (actual time=0.081..0.909 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..18.88 rows=2 width=4) (actual time=0.008..0.011 rows=2 loops=1)
                                                                                      Filter: ((link)::text ~~ '%follow%'::text)
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.061..0.321 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.048..0.048 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                              ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6192)
                                                                    ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                        ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=2064)
                                                              Index Cond: (id = mi_idx1.movie_id)
                                                  ->  Materialize  (cost=0.00..45.52 rows=1 width=8) (actual time=0.000..0.000 rows=1 loops=2064)
                                                        ->  Nested Loop  (cost=0.00..45.51 rows=1 width=8) (actual time=0.005..0.006 rows=1 loops=1)
                                                              ->  Seq Scan on kind_type kt1  (cost=0.00..22.75 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'tv series'::text)
                                                                    Rows Removed by Filter: 6
                                                              ->  Seq Scan on kind_type kt2  (cost=0.00..22.75 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'tv series'::text)
                                                                    Rows Removed by Filter: 6
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=5 loops=1220)
                                                  Index Cond: (movie_id = t1.id)
                                      ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=5590)
                                            Index Cond: (id = mc1.company_id)
                                            Filter: ((country_code)::text = '[nl]'::text)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=13) (actual time=0.002..0.003 rows=1 loops=393)
                                      Index Cond: (movie_id = ml.linked_movie_id)
                                      Filter: (info < '3.0'::text)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.002..0.003 rows=6 loops=519)
                                Index Cond: (movie_id = mi_idx2.movie_id)
                    ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=3049)
                          Index Cond: (id = mc2.company_id)
              ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.001..0.001 rows=0 loops=3049)
                    Index Cond: (id = mc2.movie_id)
                    Filter: (production_year = 2007)
                    Rows Removed by Filter: 1
        ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=8)
              Index Cond: (id = mi_idx2.info_type_id)
              Filter: ((info)::text = 'rating'::text)
              Rows Removed by Filter: 0
Planning time: 61.125 ms
Execution time: 51.048 ms
