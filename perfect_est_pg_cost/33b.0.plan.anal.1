Aggregate  (cost=367.00..367.01 rows=1 width=192) (actual time=33.296..33.296 rows=1 loops=1)
  ->  Nested Loop  (cost=42.53..366.98 rows=1 width=82) (actual time=2.602..33.286 rows=4 loops=1)
        Join Filter: ((t2.id = mi_idx2.movie_id) AND (it2.id = mi_idx2.info_type_id))
        Rows Removed by Join Filter: 4
        ->  Nested Loop  (cost=42.11..366.46 rows=1 width=93) (actual time=2.593..33.269 rows=4 loops=1)
              ->  Nested Loop  (cost=41.96..366.28 rows=1 width=97) (actual time=2.591..33.263 rows=4 loops=1)
                    Join Filter: (ml.movie_id = t1.id)
                    ->  Nested Loop  (cost=41.53..365.76 rows=1 width=88) (actual time=2.586..33.252 rows=4 loops=1)
                          ->  Nested Loop  (cost=41.11..365.31 rows=1 width=73) (actual time=2.583..33.232 rows=4 loops=1)
                                ->  Nested Loop  (cost=40.68..363.88 rows=1 width=65) (actual time=2.577..33.223 rows=1 loops=1)
                                      ->  Nested Loop  (cost=40.53..363.71 rows=1 width=69) (actual time=2.572..33.205 rows=6 loops=1)
                                            ->  Nested Loop  (cost=40.10..359.23 rows=1 width=44) (actual time=0.859..32.026 rows=477 loops=1)
                                                  ->  Nested Loop  (cost=40.10..356.81 rows=1 width=40) (actual time=0.851..28.456 rows=477 loops=1)
                                                        ->  Nested Loop  (cost=39.68..354.58 rows=5 width=25) (actual time=0.093..13.297 rows=9674 loops=1)
                                                              Join Filter: (ml.movie_id = mc1.movie_id)
                                                              ->  Nested Loop  (cost=39.25..353.93 rows=1 width=17) (actual time=0.088..6.695 rows=2064 loops=1)
                                                                    Join Filter: (mi_idx1.info_type_id = it1.id)
                                                                    Rows Removed by Join Filter: 4128
                                                                    ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                                    ->  Nested Loop  (cost=39.25..349.95 rows=125 width=21) (actual time=0.072..6.153 rows=6192 loops=1)
                                                                          ->  Nested Loop  (cost=38.82..262.88 rows=42 width=8) (actual time=0.067..0.927 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..18.88 rows=1 width=4) (actual time=0.004..0.009 rows=2 loops=1)
                                                                                      Filter: ((link)::text ~~ '%follow%'::text)
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=12) (actual time=0.057..0.321 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.045..0.045 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..2.04 rows=3 width=13) (actual time=0.001..0.002 rows=3 loops=2315)
                                                                                Index Cond: (movie_id = ml.movie_id)
                                                              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.002..0.002 rows=5 loops=2064)
                                                                    Index Cond: (movie_id = mi_idx1.movie_id)
                                                        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.001..0.001 rows=0 loops=9674)
                                                              Index Cond: (id = mc1.company_id)
                                                              Filter: ((country_code)::text = '[nl]'::text)
                                                              Rows Removed by Filter: 1
                                                  ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=477)
                                                        Filter: ((info)::text = 'rating'::text)
                                                        Rows Removed by Filter: 112
                                            ->  Index Scan using title_pkey on title t2  (cost=0.43..4.47 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=477)
                                                  Index Cond: (id = ml.linked_movie_id)
                                                  Filter: (production_year = 2007)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.15..0.17 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=6)
                                            Index Cond: (id = t2.kind_id)
                                            Filter: ((kind)::text = 'tv series'::text)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..1.38 rows=5 width=8) (actual time=0.005..0.007 rows=4 loops=1)
                                      Index Cond: (movie_id = t2.id)
                          ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.005..0.005 rows=1 loops=4)
                                Index Cond: (id = mc2.company_id)
                    ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=4)
                          Index Cond: (id = mc1.movie_id)
              ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.15..0.17 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=4)
                    Index Cond: (id = t1.kind_id)
                    Filter: ((kind)::text = 'tv series'::text)
        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.51 rows=1 width=13) (actual time=0.003..0.004 rows=2 loops=4)
              Index Cond: (movie_id = mc2.movie_id)
              Filter: (info < '3.0'::text)
              Rows Removed by Filter: 1
Planning time: 61.164 ms
Execution time: 33.415 ms
