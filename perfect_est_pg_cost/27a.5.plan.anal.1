Aggregate  (cost=2335.47..2335.48 rows=1 width=96) (actual time=30.039..30.039 rows=1 loops=1)
  ->  Nested Loop  (cost=42.59..2335.47 rows=1 width=118) (actual time=2.705..29.894 rows=477 loops=1)
        Join Filter: (ml.movie_id = mi.movie_id)
        ->  Nested Loop  (cost=42.16..2333.92 rows=1 width=138) (actual time=2.692..28.470 rows=172 loops=1)
              ->  Nested Loop  (cost=41.74..2333.46 rows=1 width=123) (actual time=1.847..27.677 rows=398 loops=1)
                    ->  Nested Loop  (cost=41.32..2313.14 rows=46 width=127) (actual time=0.769..17.128 rows=7281 loops=1)
                          Join Filter: (ml.movie_id = mk.movie_id)
                          ->  Nested Loop  (cost=40.88..2311.21 rows=1 width=119) (actual time=0.762..13.978 rows=691 loops=1)
                                Join Filter: (ml.movie_id = t.id)
                                ->  Nested Loop  (cost=40.45..2310.60 rows=1 width=98) (actual time=0.754..12.745 rows=705 loops=1)
                                      Join Filter: (mc.company_type_id = ct.id)
                                      Rows Removed by Join Filter: 89
                                      ->  Seq Scan on company_type ct  (cost=0.00..18.88 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                            Filter: ((kind)::text = 'production companies'::text)
                                            Rows Removed by Filter: 3
                                      ->  Nested Loop  (cost=40.45..2285.82 rows=473 width=102) (actual time=0.744..12.624 rows=794 loops=1)
                                            Join Filter: (ml.movie_id = mc.movie_id)
                                            ->  Hash Join  (cost=40.02..2035.71 rows=189 width=90) (actual time=0.731..11.819 rows=189 loops=1)
                                                  Hash Cond: (ml.link_type_id = lt.id)
                                                  ->  Nested Loop  (cost=21.12..1974.61 rows=3346 width=12) (actual time=0.040..11.527 rows=3346 loops=1)
                                                        Join Filter: (cct2.id = cc.status_id)
                                                        Rows Removed by Join Filter: 1503
                                                        ->  Seq Scan on comp_cast_type cct2  (cost=0.00..18.88 rows=1 width=4) (actual time=0.003..0.005 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'complete'::text)
                                                              Rows Removed by Filter: 3
                                                        ->  Hash Join  (cost=21.12..1895.13 rows=4849 width=16) (actual time=0.037..11.020 rows=4849 loops=1)
                                                              Hash Cond: (cc.subject_id = cct1.id)
                                                              ->  Merge Join  (cost=2.22..1815.07 rows=4849 width=20) (actual time=0.029..10.170 rows=4849 loops=1)
                                                                    Merge Cond: (ml.movie_id = cc.movie_id)
                                                                    ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.007..4.348 rows=29997 loops=1)
                                                                    ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6336.58 rows=135086 width=12) (actual time=0.005..2.451 rows=9987 loops=1)
                                                              ->  Hash  (cost=18.88..18.88 rows=2 width=4) (actual time=0.003..0.003 rows=2 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on comp_cast_type cct1  (cost=0.00..18.88 rows=2 width=4) (actual time=0.002..0.003 rows=2 loops=1)
                                                                          Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                                                          Rows Removed by Filter: 2
                                                  ->  Hash  (cost=18.88..18.88 rows=2 width=86) (actual time=0.010..0.010 rows=2 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on link_type lt  (cost=0.00..18.88 rows=2 width=86) (actual time=0.005..0.008 rows=2 loops=1)
                                                              Filter: ((link)::text ~~ '%follow%'::text)
                                                              Rows Removed by Filter: 16
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=3 width=12) (actual time=0.002..0.003 rows=4 loops=189)
                                                  Index Cond: (movie_id = cc.movie_id)
                                                  Filter: (note IS NULL)
                                                  Rows Removed by Filter: 3
                                ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=705)
                                      Index Cond: (id = mc.movie_id)
                                      Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                      Rows Removed by Filter: 0
                          ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.35 rows=46 width=8) (actual time=0.002..0.003 rows=11 loops=691)
                                Index Cond: (movie_id = mc.movie_id)
                    ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=7281)
                          Index Cond: (id = mk.keyword_id)
                          Filter: (keyword = 'sequel'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=398)
                    Index Cond: (id = mc.company_id)
                    Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                    Rows Removed by Filter: 1
        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.54 rows=1 width=4) (actual time=0.006..0.008 rows=3 loops=172)
              Index Cond: (movie_id = mk.movie_id)
              Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
              Rows Removed by Filter: 17
Planning time: 47.448 ms
Execution time: 30.139 ms
