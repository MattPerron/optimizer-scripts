Aggregate  (cost=7276.00..7276.01 rows=1 width=64) (actual time=27.866..27.866 rows=1 loops=1)
  ->  Nested Loop  (cost=2.57..7275.95 rows=10 width=59) (actual time=6.014..27.851 rows=37 loops=1)
        ->  Nested Loop  (cost=2.15..7259.72 rows=37 width=63) (actual time=6.007..27.733 rows=37 loops=1)
              ->  Nested Loop  (cost=1.72..7254.01 rows=3 width=75) (actual time=5.021..27.705 rows=3 loops=1)
                    Join Filter: (mi.info_type_id = it1.id)
                    ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.015 rows=1 loops=1)
                          Filter: ((info)::text = 'release dates'::text)
                          Rows Removed by Filter: 112
                    ->  Nested Loop  (cost=1.72..7251.56 rows=3 width=79) (actual time=5.013..27.688 rows=3 loops=1)
                          Join Filter: (mc.company_type_id = ct.id)
                          Rows Removed by Join Filter: 9
                          ->  Seq Scan on company_type ct  (cost=0.00..17.10 rows=4 width=4) (actual time=0.002..0.004 rows=4 loops=1)
                          ->  Materialize  (cost=1.72..7234.29 rows=3 width=83) (actual time=1.253..6.920 rows=3 loops=4)
                                ->  Nested Loop  (cost=1.72..7234.27 rows=3 width=83) (actual time=5.008..27.675 rows=3 loops=1)
                                      ->  Nested Loop  (cost=1.28..7169.29 rows=26 width=33) (actual time=4.192..27.264 rows=26 loops=1)
                                            ->  Nested Loop  (cost=0.85..7143.63 rows=27 width=12) (actual time=4.184..27.138 rows=27 loops=1)
                                                  ->  Nested Loop  (cost=0.43..6873.65 rows=278 width=8) (actual time=3.993..26.541 rows=278 loops=1)
                                                        ->  Seq Scan on company_name cn  (cost=0.00..6519.95 rows=1 width=4) (actual time=3.974..25.253 rows=1 loops=1)
                                                              Filter: (((country_code)::text = '[us]'::text) AND (name = 'YouTube'::text))
                                                              Rows Removed by Filter: 234996
                                                        ->  Index Scan using company_id_movie_companies on movie_companies mc  (cost=0.43..353.69 rows=1 width=12) (actual time=0.018..1.257 rows=278 loops=1)
                                                              Index Cond: (company_id = cn.id)
                                                              Filter: ((note ~~ '%(200%)%'::text) AND (note ~~ '%(worldwide)%'::text))
                                                              Rows Removed by Filter: 1180
                                                  ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..0.94 rows=3 width=4) (actual time=0.002..0.002 rows=0 loops=278)
                                                        Index Cond: (movie_id = mc.movie_id)
                                                        Heap Fetches: 27
                                            ->  Index Scan using title_pkey on title t  (cost=0.43..0.95 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=27)
                                                  Index Cond: (id = at.movie_id)
                                                  Filter: ((production_year >= 2005) AND (production_year <= 2010))
                                                  Rows Removed by Filter: 0
                                      ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.49 rows=1 width=50) (actual time=0.015..0.016 rows=0 loops=26)
                                            Index Cond: (movie_id = t.id)
                                            Filter: ((note ~~ '%internet%'::text) AND (info ~~ 'USA:% 200%'::text))
                                            Rows Removed by Filter: 19
              ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.44 rows=46 width=8) (actual time=0.005..0.007 rows=12 loops=3)
                    Index Cond: (movie_id = t.id)
        ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=37)
              Index Cond: (id = mk.keyword_id)
              Heap Fetches: 37
Planning time: 7.899 ms
Execution time: 27.933 ms
