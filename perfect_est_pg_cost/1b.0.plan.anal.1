Aggregate  (cost=30453.39..30453.40 rows=1 width=68) (actual time=0.266..0.266 rows=1 loops=1)
  ->  Nested Loop  (cost=6482.03..30453.01 rows=51 width=45) (actual time=0.253..0.259 rows=3 loops=1)
        ->  Hash Join  (cost=6481.60..30346.20 rows=182 width=32) (actual time=0.104..0.224 rows=5 loops=1)
              Hash Cond: (mc.company_type_id = ct.id)
              ->  Nested Loop  (cost=6462.68..29920.14 rows=32280 width=36) (actual time=0.026..0.200 rows=100 loops=1)
                    ->  Nested Loop  (cost=6462.25..22162.36 rows=12213 width=4) (actual time=0.017..0.020 rows=10 loops=1)
                          ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                Filter: ((info)::text = 'bottom 10 rank'::text)
                                Rows Removed by Filter: 112
                          ->  Bitmap Heap Scan on movie_info_idx mi_idx  (cost=6462.25..18709.86 rows=345009 width=8) (actual time=0.006..0.007 rows=10 loops=1)
                                Recheck Cond: (info_type_id = it.id)
                                Heap Blocks: exact=1
                                ->  Bitmap Index Scan on info_type_id_movie_info_idx  (cost=0.00..6375.99 rows=345009 width=0) (actual time=0.004..0.004 rows=10 loops=1)
                                      Index Cond: (info_type_id = it.id)
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.61 rows=3 width=32) (actual time=0.011..0.017 rows=10 loops=10)
                          Index Cond: (movie_id = mi_idx.movie_id)
                          Filter: (note !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text)
                          Rows Removed by Filter: 2
              ->  Hash  (cost=18.88..18.88 rows=4 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                    ->  Seq Scan on company_type ct  (cost=0.00..18.88 rows=4 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                          Filter: ((kind)::text = 'production companies'::text)
                          Rows Removed by Filter: 3
        ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=25) (actual time=0.007..0.007 rows=1 loops=5)
              Index Cond: (id = mc.movie_id)
              Filter: ((production_year >= 2005) AND (production_year <= 2010))
              Rows Removed by Filter: 0
Planning time: 0.756 ms
Execution time: 0.331 ms
