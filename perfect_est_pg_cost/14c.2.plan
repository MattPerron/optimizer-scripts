Aggregate
  ->  Nested Loop
        ->  Nested Loop
              Join Filter: (t.id = mi.movie_id)
              ->  Nested Loop
                    Join Filter: (mi_idx.info_type_id = it2.id)
                    ->  Seq Scan on info_type it2
                          Filter: ((info)::text = 'rating'::text)
                    ->  Nested Loop
                          Join Filter: (t.id = mi_idx.movie_id)
                          ->  Hash Join
                                Hash Cond: (t.kind_id = kt.id)
                                ->  Nested Loop
                                      ->  Nested Loop
                                            ->  Seq Scan on keyword k
                                                  Filter: ((keyword IS NOT NULL) AND (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[])))
                                            ->  Bitmap Heap Scan on movie_keyword mk
                                                  Recheck Cond: (keyword_id = k.id)
                                                  ->  Bitmap Index Scan on keyword_id_movie_keyword
                                                        Index Cond: (keyword_id = k.id)
                                      ->  Index Scan using title_pkey on title t
                                            Index Cond: (id = mk.movie_id)
                                            Filter: (production_year > 2005)
                                ->  Hash
                                      ->  Seq Scan on kind_type kt
                                            Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx
                                Index Cond: (movie_id = mk.movie_id)
                                Filter: (info < '8.5'::text)
              ->  Index Scan using movie_id_movie_info on movie_info mi
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
        ->  Index Scan using info_type_pkey on info_type it1
              Index Cond: (id = mi.info_type_id)
              Filter: ((info)::text = 'countries'::text)
