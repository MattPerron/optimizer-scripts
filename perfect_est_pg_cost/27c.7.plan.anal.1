Aggregate  (cost=2896.37..2896.38 rows=1 width=96) (actual time=40.004..40.004 rows=1 loops=1)
  ->  Nested Loop  (cost=23.69..2896.36 rows=1 width=118) (actual time=2.744..39.774 rows=743 loops=1)
        ->  Nested Loop  (cost=23.27..2894.99 rows=3 width=103) (actual time=1.663..36.829 rows=1808 loops=1)
              Join Filter: (ml.movie_id = mi.movie_id)
              ->  Nested Loop  (cost=22.84..2893.17 rows=1 width=123) (actual time=1.640..32.569 rows=399 loops=1)
                    ->  Nested Loop  (cost=22.42..2872.85 rows=46 width=127) (actual time=0.699..17.953 rows=9471 loops=1)
                          Join Filter: (ml.movie_id = mk.movie_id)
                          ->  Nested Loop  (cost=21.98..2870.96 rows=1 width=119) (actual time=0.693..13.850 rows=763 loops=1)
                                Join Filter: (mc.company_type_id = ct.id)
                                Rows Removed by Join Filter: 101
                                ->  Seq Scan on company_type ct  (cost=0.00..18.88 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                      Filter: ((kind)::text = 'production companies'::text)
                                      Rows Removed by Filter: 3
                                ->  Nested Loop  (cost=21.98..2841.29 rows=864 width=123) (actual time=0.686..13.704 rows=864 loops=1)
                                      Join Filter: (ml.movie_id = t.id)
                                      ->  Nested Loop  (cost=21.55..2317.29 rows=864 width=102) (actual time=0.679..12.082 rows=864 loops=1)
                                            Join Filter: (cc.subject_id = cct1.id)
                                            Rows Removed by Join Filter: 179
                                            ->  Seq Scan on comp_cast_type cct1  (cost=0.00..18.88 rows=1 width=4) (actual time=0.002..0.004 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'cast'::text)
                                                  Rows Removed by Filter: 3
                                            ->  Nested Loop  (cost=21.55..2285.38 rows=1043 width=106) (actual time=0.676..11.932 rows=1043 loops=1)
                                                  Join Filter: (cc.status_id = cct2.id)
                                                  Rows Removed by Join Filter: 249
                                                  ->  Nested Loop  (cost=21.55..2235.22 rows=1043 width=110) (actual time=0.672..11.614 rows=1043 loops=1)
                                                        Join Filter: (ml.movie_id = mc.movie_id)
                                                        ->  Hash Join  (cost=21.12..1895.13 rows=257 width=98) (actual time=0.660..10.486 rows=257 loops=1)
                                                              Hash Cond: (ml.link_type_id = lt.id)
                                                              ->  Merge Join  (cost=2.22..1815.07 rows=4849 width=20) (actual time=0.028..10.080 rows=4849 loops=1)
                                                                    Merge Cond: (ml.movie_id = cc.movie_id)
                                                                    ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.006..4.272 rows=29997 loops=1)
                                                                    ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6336.58 rows=135086 width=12) (actual time=0.005..2.492 rows=9987 loops=1)
                                                              ->  Hash  (cost=18.88..18.88 rows=2 width=86) (actual time=0.008..0.008 rows=2 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on link_type lt  (cost=0.00..18.88 rows=2 width=86) (actual time=0.003..0.006 rows=2 loops=1)
                                                                          Filter: ((link)::text ~~ '%follow%'::text)
                                                                          Rows Removed by Filter: 16
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=3 width=12) (actual time=0.003..0.004 rows=4 loops=257)
                                                              Index Cond: (movie_id = cc.movie_id)
                                                              Filter: (note IS NULL)
                                                              Rows Removed by Filter: 3
                                                  ->  Materialize  (cost=0.00..18.89 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=1043)
                                                        ->  Seq Scan on comp_cast_type cct2  (cost=0.00..18.88 rows=2 width=4) (actual time=0.002..0.002 rows=2 loops=1)
                                                              Filter: ((kind)::text ~~ 'complete%'::text)
                                                              Rows Removed by Filter: 2
                                      ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=864)
                                            Index Cond: (id = mc.movie_id)
                                            Filter: ((production_year >= 1950) AND (production_year <= 2010))
                          ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.32 rows=46 width=8) (actual time=0.002..0.003 rows=12 loops=763)
                                Index Cond: (movie_id = t.id)
                    ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=9471)
                          Index Cond: (id = mk.keyword_id)
                          Filter: (keyword = 'sequel'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.79 rows=2 width=4) (actual time=0.008..0.010 rows=5 loops=399)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
                    Rows Removed by Filter: 17
        ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.001..0.001 rows=0 loops=1808)
              Index Cond: (id = mc.company_id)
              Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
              Rows Removed by Filter: 1
Planning time: 46.836 ms
Execution time: 40.096 ms
