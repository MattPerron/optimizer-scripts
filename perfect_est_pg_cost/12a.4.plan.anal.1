Aggregate  (cost=68160.75..68160.76 rows=1 width=96) (actual time=325.837..325.837 rows=1 loops=1)
  ->  Nested Loop  (cost=13373.72..68160.74 rows=1 width=41) (actual time=81.015..325.628 rows=397 loops=1)
        Join Filter: (mi.info_type_id = it1.id)
        ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.006..0.014 rows=1 loops=1)
              Filter: ((info)::text = 'genres'::text)
              Rows Removed by Filter: 112
        ->  Nested Loop  (cost=13373.72..68158.09 rows=19 width=45) (actual time=81.006..325.532 rows=397 loops=1)
              Join Filter: (t.id = mi.movie_id)
              ->  Nested Loop  (cost=13373.28..68058.66 rows=63 width=53) (actual time=70.345..265.075 rows=5674 loops=1)
                    Join Filter: (mi_idx.movie_id = t.id)
                    ->  Hash Join  (cost=13372.85..67867.50 rows=358 width=32) (actual time=69.411..224.338 rows=19791 loops=1)
                          Hash Cond: (mc.company_id = cn.id)
                          ->  Nested Loop  (cost=6379.85..60568.56 rows=24233 width=17) (actual time=16.466..165.198 rows=24233 loops=1)
                                Join Filter: (mc.company_type_id = ct.id)
                                Rows Removed by Join Filter: 40474
                                ->  Seq Scan on company_type ct  (cost=0.00..18.88 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                      Filter: ((kind)::text = 'production companies'::text)
                                      Rows Removed by Filter: 3
                                ->  Nested Loop  (cost=6379.85..59740.85 rows=64707 width=21) (actual time=16.450..159.480 rows=64707 loops=1)
                                      ->  Nested Loop  (cost=6379.42..19628.99 rows=15849 width=9) (actual time=16.425..104.740 rows=15849 loops=1)
                                            ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.014 rows=1 loops=1)
                                                  Filter: ((info)::text = 'rating'::text)
                                                  Rows Removed by Filter: 112
                                            ->  Bitmap Heap Scan on movie_info_idx mi_idx  (cost=6379.42..19489.56 rows=13702 width=13) (actual time=16.411..103.035 rows=15849 loops=1)
                                                  Recheck Cond: (info_type_id = it2.id)
                                                  Filter: (info > '8.0'::text)
                                                  Rows Removed by Filter: 444076
                                                  Heap Blocks: exact=7934
                                                  ->  Bitmap Index Scan on info_type_id_movie_info_idx  (cost=0.00..6375.99 rows=345009 width=0) (actual time=15.431..15.431 rows=459925 loops=1)
                                                        Index Cond: (info_type_id = it2.id)
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.48 rows=5 width=12) (actual time=0.002..0.003 rows=4 loops=15849)
                                            Index Cond: (movie_id = mi_idx.movie_id)
                          ->  Hash  (cost=5932.46..5932.46 rows=84843 width=23) (actual time=52.534..52.534 rows=84843 loops=1)
                                Buckets: 131072  Batches: 1  Memory Usage: 5810kB
                                ->  Seq Scan on company_name cn  (cost=0.00..5932.46 rows=84843 width=23) (actual time=0.005..33.993 rows=84843 loops=1)
                                      Filter: ((country_code)::text = '[us]'::text)
                                      Rows Removed by Filter: 150154
                    ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=19791)
                          Index Cond: (id = mc.movie_id)
                          Filter: ((production_year >= 2005) AND (production_year <= 2008))
                          Rows Removed by Filter: 1
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.57 rows=1 width=8) (actual time=0.010..0.010 rows=0 loops=5674)
                    Index Cond: (movie_id = mc.movie_id)
                    Filter: (info = ANY ('{Drama,Horror}'::text[]))
                    Rows Removed by Filter: 28
Planning time: 3.379 ms
Execution time: 325.931 ms
