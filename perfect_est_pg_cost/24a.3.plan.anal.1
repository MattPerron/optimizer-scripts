Aggregate  (cost=31687.14..31687.15 rows=1 width=96) (actual time=216.963..216.963 rows=1 loops=1)
  ->  Nested Loop  (cost=10.39..31687.13 rows=1 width=48) (actual time=25.095..216.857 rows=275 loops=1)
        Join Filter: (mi.info_type_id = it.id)
        ->  Nested Loop  (cost=10.39..31684.71 rows=1 width=52) (actual time=25.083..216.006 rows=275 loops=1)
              Join Filter: (n.id = an.person_id)
              ->  Nested Loop  (cost=9.97..31682.60 rows=1 width=60) (actual time=11.084..215.575 rows=141 loops=1)
                    Join Filter: (t.id = mi.movie_id)
                    ->  Nested Loop  (cost=9.53..31650.73 rows=1 width=72) (actual time=11.065..213.250 rows=107 loops=1)
                          ->  Nested Loop  (cost=9.10..31648.88 rows=1 width=53) (actual time=1.011..209.287 rows=1578 loops=1)
                                Join Filter: (rt.id = ci.role_id)
                                Rows Removed by Join Filter: 5617
                                ->  Seq Scan on role_type rt  (cost=0.00..18.88 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                      Filter: ((role)::text = 'actress'::text)
                                      Rows Removed by Filter: 11
                                ->  Nested Loop  (cost=9.10..31629.63 rows=30 width=57) (actual time=0.966..208.657 rows=7195 loops=1)
                                      ->  Nested Loop  (cost=8.67..31519.97 rows=63 width=45) (actual time=0.956..192.084 rows=7316 loops=1)
                                            Join Filter: (t.id = ci.movie_id)
                                            ->  Nested Loop  (cost=8.11..24193.10 rows=184 width=29) (actual time=0.719..74.686 rows=1576 loops=1)
                                                  ->  Nested Loop  (cost=7.69..23439.70 rows=511 width=33) (actual time=0.710..60.577 rows=5566 loops=1)
                                                        Join Filter: (t.id = mc.movie_id)
                                                        ->  Nested Loop  (cost=7.26..21722.29 rows=495 width=25) (actual time=0.702..56.284 rows=495 loops=1)
                                                              ->  Nested Loop  (cost=6.83..6178.12 rows=9696 width=4) (actual time=0.651..28.243 rows=9696 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.012..15.947 rows=3 loops=1)
                                                                          Filter: (keyword = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                          Rows Removed by Filter: 134167
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.83..1125.00 rows=309 width=8) (actual time=0.645..3.778 rows=3232 loops=3)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=7446
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.75 rows=309 width=0) (actual time=0.349..0.349 rows=3232 loops=3)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=9696)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2010)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.41 rows=5 width=8) (actual time=0.004..0.007 rows=11 loops=495)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                  ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=5566)
                                                        Index Cond: (id = mc.company_id)
                                                        Filter: ((country_code)::text = '[us]'::text)
                                                        Rows Removed by Filter: 1
                                            ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.81 rows=1 width=16) (actual time=0.048..0.074 rows=5 loops=1576)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                  Rows Removed by Filter: 136
                                      ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.74 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=7316)
                                            Index Cond: (id = ci.person_role_id)
                          ->  Index Scan using name_pkey on name n  (cost=0.43..1.85 rows=1 width=19) (actual time=0.002..0.002 rows=0 loops=1578)
                                Index Cond: (id = ci.person_id)
                                Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                Rows Removed by Filter: 1
                    ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..31.86 rows=1 width=8) (actual time=0.006..0.021 rows=1 loops=107)
                          Index Cond: (movie_id = mk.movie_id)
                          Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%201%'::text) OR (info ~~ 'USA:%201%'::text)))
                          Rows Removed by Filter: 57
              ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.002..0.002 rows=2 loops=141)
                    Index Cond: (person_id = ci.person_id)
                    Heap Fetches: 275
        ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=275)
              Filter: ((info)::text = 'release dates'::text)
              Rows Removed by Filter: 15
Planning time: 50.050 ms
Execution time: 217.071 ms
