Aggregate  (cost=9254.55..9254.56 rows=1 width=192) (actual time=32.704..32.704 rows=1 loops=1)
  ->  Nested Loop  (cost=621.75..9254.53 rows=1 width=82) (actual time=5.503..32.687 rows=8 loops=1)
        Join Filter: ((ml.movie_id = t1.id) AND (kt1.id = t1.kind_id))
        ->  Nested Loop  (cost=621.32..9254.00 rows=1 width=81) (actual time=5.495..32.666 rows=8 loops=1)
              ->  Nested Loop  (cost=620.90..9253.56 rows=1 width=66) (actual time=5.489..32.643 rows=8 loops=1)
                    Join Filter: (t2.id = mc2.movie_id)
                    ->  Nested Loop  (cost=620.47..9252.82 rows=1 width=74) (actual time=5.481..32.627 rows=2 loops=1)
                          ->  Nested Loop  (cost=620.33..9252.48 rows=2 width=78) (actual time=1.612..32.511 rows=96 loops=1)
                                ->  Nested Loop  (cost=619.91..9250.25 rows=5 width=63) (actual time=1.600..31.648 rows=378 loops=1)
                                      Join Filter: (ml.movie_id = mc1.movie_id)
                                      ->  Nested Loop  (cost=619.48..9249.59 rows=1 width=55) (actual time=1.593..31.209 rows=95 loops=1)
                                            Join Filter: (kt2.id = t2.kind_id)
                                            Rows Removed by Join Filter: 181
                                            ->  Nested Loop  (cost=619.48..9199.94 rows=276 width=55) (actual time=1.247..31.108 rows=276 loops=1)
                                                  Join Filter: (ml.linked_movie_id = t2.id)
                                                  ->  Nested Loop  (cost=619.05..7142.83 rows=2786 width=30) (actual time=1.237..24.743 rows=2786 loops=1)
                                                        ->  Nested Loop  (cost=618.62..2889.78 rows=2064 width=17) (actual time=1.227..18.490 rows=2064 loops=1)
                                                              Join Filter: (it1.id = mi_idx1.info_type_id)
                                                              Rows Removed by Join Filter: 4128
                                                              ->  Merge Join  (cost=618.62..2794.48 rows=6192 width=21) (actual time=1.207..16.870 rows=6192 loops=1)
                                                                    Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43815.31 rows=1380035 width=13) (actual time=0.007..9.668 rows=63901 loops=1)
                                                                    ->  Sort  (cost=618.18..623.97 rows=2315 width=8) (actual time=1.175..1.552 rows=6443 loops=1)
                                                                          Sort Key: ml.movie_id
                                                                          Sort Method: quicksort  Memory: 205kB
                                                                          ->  Nested Loop  (cost=38.82..488.81 rows=2315 width=8) (actual time=0.071..0.822 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..19.76 rows=2 width=4) (actual time=0.006..0.009 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.057..0.279 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.045..0.045 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                              ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6192)
                                                                    ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=13) (actual time=0.002..0.003 rows=1 loops=2064)
                                                              Index Cond: (movie_id = ml.linked_movie_id)
                                                              Filter: (info < '3.0'::text)
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using title_pkey on title t2  (cost=0.43..0.73 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2786)
                                                        Index Cond: (id = mi_idx2.movie_id)
                                                        Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                                        Rows Removed by Filter: 1
                                            ->  Materialize  (cost=0.00..45.52 rows=1 width=8) (actual time=0.000..0.000 rows=1 loops=276)
                                                  ->  Nested Loop  (cost=0.00..45.51 rows=1 width=8) (actual time=0.006..0.007 rows=1 loops=1)
                                                        ->  Seq Scan on kind_type kt1  (cost=0.00..22.75 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'tv series'::text)
                                                              Rows Removed by Filter: 6
                                                        ->  Seq Scan on kind_type kt2  (cost=0.00..22.75 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'tv series'::text)
                                                              Rows Removed by Filter: 6
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.002..0.004 rows=4 loops=95)
                                            Index Cond: (movie_id = mi_idx1.movie_id)
                                ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=378)
                                      Index Cond: (id = mc1.company_id)
                                      Filter: ((country_code)::text = '[us]'::text)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=96)
                                Index Cond: (id = mi_idx2.info_type_id)
                                Filter: ((info)::text = 'rating'::text)
                                Rows Removed by Filter: 1
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.004..0.005 rows=4 loops=2)
                          Index Cond: (movie_id = mi_idx2.movie_id)
              ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=8)
                    Index Cond: (id = mc2.company_id)
        ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=8)
              Index Cond: (id = mc1.movie_id)
Planning time: 60.967 ms
Execution time: 32.838 ms
