Aggregate  (cost=5078.38..5078.39 rows=1 width=96) (actual time=16.896..16.896 rows=1 loops=1)
  ->  Nested Loop  (cost=11.24..5078.37 rows=1 width=48) (actual time=1.871..16.885 rows=15 loops=1)
        ->  Nested Loop  (cost=10.81..5074.30 rows=1 width=36) (actual time=1.860..16.846 rows=15 loops=1)
              Join Filter: (n.id = an.person_id)
              ->  Nested Loop  (cost=10.39..5071.40 rows=1 width=48) (actual time=1.851..16.817 rows=5 loops=1)
                    Join Filter: (ci.person_id = n.id)
                    ->  Nested Loop  (cost=9.96..5069.16 rows=1 width=29) (actual time=1.841..16.749 rows=20 loops=1)
                          Join Filter: (it.id = mi.info_type_id)
                          ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.015 rows=1 loops=1)
                                Filter: ((info)::text = 'release dates'::text)
                                Rows Removed by Filter: 112
                          ->  Nested Loop  (cost=9.96..5066.74 rows=1 width=33) (actual time=1.831..16.729 rows=20 loops=1)
                                Join Filter: (t.id = mi.movie_id)
                                ->  Nested Loop  (cost=9.52..5024.88 rows=1 width=49) (actual time=1.807..15.016 rows=20 loops=1)
                                      Join Filter: (cct1.id = cc.subject_id)
                                      ->  Seq Scan on comp_cast_type cct1  (cost=0.00..18.88 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                            Filter: ((kind)::text = 'cast'::text)
                                            Rows Removed by Filter: 3
                                      ->  Nested Loop  (cost=9.52..5006.00 rows=1 width=53) (actual time=1.803..15.007 rows=20 loops=1)
                                            Join Filter: (cct2.id = cc.status_id)
                                            ->  Seq Scan on comp_cast_type cct2  (cost=0.00..18.88 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'complete+verified'::text)
                                                  Rows Removed by Filter: 3
                                            ->  Nested Loop  (cost=9.52..4987.11 rows=1 width=57) (actual time=1.801..15.000 rows=20 loops=1)
                                                  Join Filter: (t.id = cc.movie_id)
                                                  ->  Nested Loop  (cost=9.10..4984.31 rows=1 width=45) (actual time=1.793..14.950 rows=20 loops=1)
                                                        Join Filter: (it3.id = pi.info_type_id)
                                                        Rows Removed by Join Filter: 3520
                                                        ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.004..0.010 rows=1 loops=1)
                                                              Filter: ((info)::text = 'height'::text)
                                                              Rows Removed by Filter: 112
                                                        ->  Nested Loop  (cost=9.10..4981.59 rows=25 width=49) (actual time=1.730..14.731 rows=3540 loops=1)
                                                              ->  Nested Loop  (cost=8.67..4961.83 rows=1 width=41) (actual time=1.722..13.554 rows=55 loops=1)
                                                                    Join Filter: (rt.id = ci.role_id)
                                                                    Rows Removed by Join Filter: 135
                                                                    ->  Seq Scan on role_type rt  (cost=0.00..18.88 rows=1 width=4) (actual time=0.003..0.005 rows=1 loops=1)
                                                                          Filter: ((role)::text = 'actress'::text)
                                                                          Rows Removed by Filter: 11
                                                                    ->  Nested Loop  (cost=8.67..4942.93 rows=2 width=45) (actual time=1.686..13.531 rows=190 loops=1)
                                                                          Join Filter: (t.id = ci.movie_id)
                                                                          ->  Nested Loop  (cost=8.11..4705.04 rows=5 width=29) (actual time=1.673..12.772 rows=5 loops=1)
                                                                                ->  Nested Loop  (cost=7.69..4660.45 rows=22 width=33) (actual time=1.665..12.684 rows=22 loops=1)
                                                                                      Join Filter: (t.id = mc.movie_id)
                                                                                      ->  Nested Loop  (cost=7.26..4655.58 rows=1 width=25) (actual time=1.655..12.663 rows=1 loops=1)
                                                                                            ->  Nested Loop  (cost=6.83..3768.21 rows=414 width=4) (actual time=0.116..11.123 rows=414 loops=1)
                                                                                                  ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.034..10.546 rows=1 loops=1)
                                                                                                        Filter: (keyword = 'computer-animation'::text)
                                                                                                        Rows Removed by Filter: 134169
                                                                                                  ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.83..1138.99 rows=309 width=8) (actual time=0.081..0.533 rows=414 loops=1)
                                                                                                        Recheck Cond: (keyword_id = k.id)
                                                                                                        Heap Blocks: exact=358
                                                                                                        ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.75 rows=309 width=0) (actual time=0.044..0.044 rows=414 loops=1)
                                                                                                              Index Cond: (keyword_id = k.id)
                                                                                            ->  Index Scan using title_pkey on title t  (cost=0.43..2.14 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=414)
                                                                                                  Index Cond: (id = mk.movie_id)
                                                                                                  Filter: ((production_year >= 2000) AND (production_year <= 2005) AND (title = 'Shrek 2'::text))
                                                                                                  Rows Removed by Filter: 1
                                                                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.81 rows=5 width=8) (actual time=0.008..0.015 rows=22 loops=1)
                                                                                            Index Cond: (movie_id = mk.movie_id)
                                                                                ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=22)
                                                                                      Index Cond: (id = mc.company_id)
                                                                                      Filter: ((country_code)::text = '[us]'::text)
                                                                                      Rows Removed by Filter: 1
                                                                          ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.57 rows=1 width=16) (actual time=0.005..0.146 rows=38 loops=5)
                                                                                Index Cond: (movie_id = mk.movie_id)
                                                                                Filter: (note = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                Rows Removed by Filter: 191
                                                              ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.50 rows=25 width=8) (actual time=0.002..0.012 rows=64 loops=55)
                                                                    Index Cond: (person_id = ci.person_id)
                                                  ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=20)
                                                        Index Cond: (movie_id = mk.movie_id)
                                ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..41.84 rows=1 width=8) (actual time=0.010..0.085 rows=1 loops=20)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: (info ~~ 'USA:%200%'::text)
                                      Rows Removed by Filter: 456
                    ->  Index Scan using name_pkey on name n  (cost=0.43..2.22 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=20)
                          Index Cond: (id = pi.person_id)
                          Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                          Rows Removed by Filter: 1
              ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.87 rows=2 width=4) (actual time=0.004..0.005 rows=3 loops=5)
                    Index Cond: (person_id = pi.person_id)
                    Heap Fetches: 15
        ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.25 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15)
              Index Cond: (id = ci.person_role_id)
              Filter: (name = 'Queen'::text)
Planning time: 79.140 ms
Execution time: 17.032 ms
