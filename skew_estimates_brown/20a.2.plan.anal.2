Aggregate  (cost=12359.93..12359.94 rows=1 width=32) (actual time=6191.748..6191.748 rows=1 loops=1)
  ->  Nested Loop  (cost=9.04..12359.93 rows=1 width=17) (actual time=47.388..6191.643 rows=33 loops=1)
        ->  Nested Loop  (cost=8.61..12359.48 rows=1 width=21) (actual time=47.368..6191.136 rows=33 loops=1)
              ->  Nested Loop  (cost=8.18..12346.59 rows=28 width=25) (actual time=7.331..3923.838 rows=532809 loops=1)
                    Join Filter: (t.id = ci.movie_id)
                    ->  Nested Loop  (cost=7.62..12330.70 rows=8 width=29) (actual time=7.308..1259.840 rows=6016 loops=1)
                          Join Filter: (cc.status_id = cct2.id)
                          Rows Removed by Join Filter: 6016
                          ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.006..0.008 rows=2 loops=1)
                                Filter: ((kind)::text ~~ '%complete%'::text)
                                Rows Removed by Filter: 2
                          ->  Nested Loop  (cost=7.62..12329.26 rows=31 width=33) (actual time=7.250..628.219 rows=6016 loops=2)
                                Join Filter: (cc.subject_id = cct1.id)
                                Rows Removed by Join Filter: 2355
                                ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.004 rows=1 loops=2)
                                      Filter: ((kind)::text = 'cast'::text)
                                      Rows Removed by Filter: 3
                                ->  Nested Loop  (cost=7.62..12327.60 rows=49 width=37) (actual time=7.247..625.744 rows=8371 loops=2)
                                      ->  Nested Loop  (cost=7.20..12311.38 rows=34 width=25) (actual time=7.158..563.869 rows=15994 loops=2)
                                            Join Filter: (t.kind_id = kt.id)
                                            Rows Removed by Join Filter: 15613
                                            ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.001..0.005 rows=1 loops=2)
                                                  Filter: ((kind)::text = 'movie'::text)
                                                  Rows Removed by Filter: 6
                                            ->  Nested Loop  (cost=7.20..12307.31 rows=239 width=29) (actual time=0.748..557.178 rows=31607 loops=2)
                                                  ->  Nested Loop  (cost=6.77..12178.50 rows=263 width=4) (actual time=0.727..229.898 rows=35548 loops=2)
                                                        ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=4) (actual time=0.167..50.308 rows=8 loops=2)
                                                              Filter: (keyword = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                                              Rows Removed by Filter: 134162
                                                        ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.77..1065.25 rows=301 width=8) (actual time=1.184..21.567 rows=4444 loops=16)
                                                              Recheck Cond: (keyword_id = k.id)
                                                              Heap Blocks: exact=46976
                                                              ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.69 rows=301 width=0) (actual time=0.676..0.676 rows=4444 loops=16)
                                                                    Index Cond: (keyword_id = k.id)
                                                  ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.009..0.009 rows=1 loops=71096)
                                                        Index Cond: (id = mk.movie_id)
                                                        Filter: (production_year > 1950)
                                                        Rows Removed by Filter: 0
                                      ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.003..0.003 rows=1 loops=31988)
                                            Index Cond: (movie_id = t.id)
                    ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.016..0.414 rows=89 loops=6016)
                          Index Cond: (movie_id = mk.movie_id)
              ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=532809)
                    Index Cond: (id = ci.person_role_id)
                    Filter: ((name !~~ '%Sherlock%'::text) AND ((name ~~ '%Tony%Stark%'::text) OR (name ~~ '%Iron%Man%'::text)))
                    Rows Removed by Filter: 0
        ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=33)
              Index Cond: (id = ci.person_id)
              Heap Fetches: 33
Planning time: 13.047 ms
Execution time: 6191.861 ms
