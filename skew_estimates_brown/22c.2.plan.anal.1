Aggregate  (cost=7419.11..7419.12 rows=1 width=96) (actual time=3296.927..3296.927 rows=1 loops=1)
  ->  Nested Loop  (cost=8.91..7419.10 rows=1 width=42) (actual time=5.049..3275.791 rows=21489 loops=1)
        Join Filter: (mi.info_type_id = it1.id)
        Rows Removed by Join Filter: 3123
        ->  Nested Loop  (cost=8.91..7416.68 rows=1 width=46) (actual time=5.044..3142.065 rows=24612 loops=1)
              Join Filter: (t.id = mi.movie_id)
              ->  Nested Loop  (cost=8.47..7414.81 rows=1 width=58) (actual time=4.980..873.301 rows=23425 loops=1)
                    ->  Nested Loop  (cost=8.05..7414.26 rows=1 width=43) (actual time=4.973..737.757 rows=25316 loops=1)
                          Join Filter: (mc.company_type_id = ct.id)
                          ->  Nested Loop  (cost=8.05..7413.00 rows=4 width=47) (actual time=4.969..723.071 rows=25316 loops=1)
                                Join Filter: (mi_idx.info_type_id = it2.id)
                                Rows Removed by Join Filter: 50544
                                ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.019 rows=1 loops=1)
                                      Filter: ((info)::text = 'rating'::text)
                                      Rows Removed by Filter: 112
                                ->  Nested Loop  (cost=8.05..7410.44 rows=12 width=51) (actual time=4.785..710.029 rows=75860 loops=1)
                                      Join Filter: (t.id = mi_idx.movie_id)
                                      ->  Nested Loop  (cost=7.63..7408.30 rows=4 width=37) (actual time=4.761..545.929 rows=25853 loops=1)
                                            Join Filter: (t.id = mc.movie_id)
                                            ->  Nested Loop  (cost=7.20..7399.63 rows=15 width=25) (actual time=4.280..380.575 rows=8073 loops=1)
                                                  Join Filter: (t.kind_id = kt.id)
                                                  Rows Removed by Join Filter: 4332
                                                  ->  Nested Loop  (cost=7.20..7397.03 rows=53 width=29) (actual time=4.237..374.384 rows=9739 loops=1)
                                                        ->  Nested Loop  (cost=6.77..7332.86 rows=131 width=4) (actual time=4.227..162.792 rows=37091 loops=1)
                                                              ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.411..33.413 rows=3 loops=1)
                                                                    Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                    Rows Removed by Filter: 134167
                                                              ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.77..1089.82 rows=301 width=8) (actual time=3.477..40.739 rows=12364 loops=3)
                                                                    Recheck Cond: (keyword_id = k.id)
                                                                    Heap Blocks: exact=26312
                                                                    ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.69 rows=301 width=0) (actual time=1.891..1.891 rows=12364 loops=3)
                                                                          Index Cond: (keyword_id = k.id)
                                                        ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=37091)
                                                              Index Cond: (id = mk.movie_id)
                                                              Filter: (production_year > 2005)
                                                              Rows Removed by Filter: 1
                                                  ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                        ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.004..0.006 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                              Rows Removed by Filter: 5
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.012..0.019 rows=3 loops=8073)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                                  Rows Removed by Filter: 7
                                      ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.004..0.005 rows=3 loops=25853)
                                            Index Cond: (movie_id = mk.movie_id)
                                            Filter: (info < '8.5'::text)
                                            Rows Removed by Filter: 0
                          ->  Materialize  (cost=0.00..1.06 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=25316)
                                ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.56 rows=1 width=23) (actual time=0.005..0.005 rows=1 loops=25316)
                          Index Cond: (id = mc.company_id)
                          Filter: ((country_code)::text <> '[us]'::text)
                          Rows Removed by Filter: 0
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.84 rows=2 width=8) (actual time=0.080..0.096 rows=1 loops=23425)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                    Rows Removed by Filter: 180
        ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.005 rows=1 loops=24612)
              Filter: ((info)::text = 'countries'::text)
              Rows Removed by Filter: 20
Planning time: 29.428 ms
Execution time: 3297.039 ms
