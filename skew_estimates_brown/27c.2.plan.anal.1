Aggregate  (cost=3763.43..3763.44 rows=1 width=96) (actual time=185.363..185.363 rows=1 loops=1)
  ->  Nested Loop  (cost=9.19..3763.42 rows=1 width=48) (actual time=4.977..184.762 rows=743 loops=1)
        ->  Nested Loop  (cost=8.77..3762.97 rows=1 width=33) (actual time=3.175..179.488 rows=1808 loops=1)
              Join Filter: (ct.id = mc.company_type_id)
              Rows Removed by Join Filter: 105
              ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                    Filter: ((kind)::text = 'production companies'::text)
                    Rows Removed by Filter: 3
              ->  Nested Loop  (cost=8.77..3761.88 rows=3 width=37) (actual time=3.169..179.096 rows=1913 loops=1)
                    Join Filter: (ml.movie_id = mc.movie_id)
                    ->  Nested Loop  (cost=8.34..3761.30 rows=1 width=49) (actual time=3.159..177.189 rows=251 loops=1)
                          Join Filter: (cct1.id = cc.subject_id)
                          Rows Removed by Join Filter: 95
                          ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                Filter: ((kind)::text = 'cast'::text)
                                Rows Removed by Filter: 3
                          ->  Nested Loop  (cost=8.34..3760.24 rows=1 width=53) (actual time=3.157..177.106 rows=346 loops=1)
                                Join Filter: (cct2.id = cc.status_id)
                                Rows Removed by Join Filter: 346
                                ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.004 rows=2 loops=1)
                                      Filter: ((kind)::text ~~ 'complete%'::text)
                                      Rows Removed by Filter: 2
                                ->  Nested Loop  (cost=8.34..3759.15 rows=3 width=57) (actual time=3.066..88.478 rows=346 loops=2)
                                      Join Filter: (ml.movie_id = cc.movie_id)
                                      ->  Nested Loop  (cost=7.92..3758.19 rows=2 width=45) (actual time=2.905..86.737 rows=746 loops=2)
                                            Join Filter: (ml.movie_id = t.id)
                                            ->  Nested Loop  (cost=7.49..3757.18 rows=2 width=24) (actual time=2.891..84.621 rows=746 loops=2)
                                                  Join Filter: (ml.movie_id = mi.movie_id)
                                                  ->  Nested Loop  (cost=7.05..3755.36 rows=1 width=20) (actual time=2.858..81.214 rows=199 loops=2)
                                                        Join Filter: (lt.id = ml.link_type_id)
                                                        Rows Removed by Join Filter: 303
                                                        ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=16) (actual time=0.002..0.007 rows=2 loops=2)
                                                              Filter: ((link)::text ~~ '%follow%'::text)
                                                              Rows Removed by Filter: 16
                                                        ->  Nested Loop  (cost=7.05..3754.01 rows=10 width=12) (actual time=2.846..40.562 rows=251 loops=4)
                                                              ->  Nested Loop  (cost=6.77..3739.98 rows=33 width=4) (actual time=2.839..26.301 rows=10544 loops=4)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.782..14.090 rows=1 loops=4)
                                                                          Filter: (keyword = 'sequel'::text)
                                                                          Rows Removed by Filter: 134169
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.77..1110.84 rows=301 width=8) (actual time=2.054..10.381 rows=10544 loops=4)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=22280
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.69 rows=301 width=0) (actual time=1.108..1.108 rows=10544 loops=4)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=42176)
                                                                    Index Cond: (movie_id = mk.movie_id)
                                                  ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.79 rows=2 width=4) (actual time=0.013..0.016 rows=4 loops=398)
                                                        Index Cond: (movie_id = mk.movie_id)
                                                        Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
                                                        Rows Removed by Filter: 17
                                            ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=1492)
                                                  Index Cond: (id = mk.movie_id)
                                                  Filter: ((production_year >= 1950) AND (production_year <= 2010))
                                      ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=1492)
                                            Index Cond: (movie_id = mk.movie_id)
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.003..0.005 rows=8 loops=251)
                          Index Cond: (movie_id = mk.movie_id)
                          Filter: (note IS NULL)
                          Rows Removed by Filter: 1
        ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1808)
              Index Cond: (id = mc.company_id)
              Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
              Rows Removed by Filter: 1
Planning time: 69.941 ms
Execution time: 185.469 ms
