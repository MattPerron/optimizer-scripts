Aggregate  (cost=90370.20..90370.21 rows=1 width=96) (actual time=1220.066..1220.066 rows=1 loops=1)
  ->  Nested Loop  (cost=13377.11..90370.11 rows=12 width=41) (actual time=65.800..1218.221 rows=4711 loops=1)
        Join Filter: (mi.info_type_id = it1.id)
        ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.006..0.013 rows=1 loops=1)
              Filter: ((info)::text = 'genres'::text)
              Rows Removed by Filter: 112
        ->  Nested Loop  (cost=13377.11..90357.37 rows=826 width=45) (actual time=65.792..1217.461 rows=4711 loops=1)
              Join Filter: (t.id = mi.movie_id)
              ->  Nested Loop  (cost=13376.67..79735.26 rows=6320 width=53) (actual time=65.078..775.464 rows=42332 loops=1)
                    Join Filter: (mi_idx.movie_id = t.id)
                    ->  Nested Loop  (cost=13376.24..71663.72 rows=15116 width=32) (actual time=65.058..593.579 rows=91314 loops=1)
                          Join Filter: (mc.company_type_id = ct.id)
                          Rows Removed by Join Filter: 96726
                          ->  Seq Scan on company_type ct  (cost=0.00..18.88 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                Filter: ((kind)::text = 'production companies'::text)
                                Rows Removed by Filter: 3
                          ->  Hash Join  (cost=13376.24..71266.95 rows=30232 width=36) (actual time=65.051..574.978 rows=188040 loops=1)
                                Hash Cond: (mc.company_id = cn.id)
                                ->  Nested Loop  (cost=6388.88..63087.47 rows=94425 width=21) (actual time=15.967..451.646 rows=383016 loops=1)
                                      ->  Nested Loop  (cost=6388.45..19999.21 rows=39349 width=9) (actual time=15.955..127.180 rows=121572 loops=1)
                                            ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.017 rows=1 loops=1)
                                                  Filter: ((info)::text = 'rating'::text)
                                                  Rows Removed by Filter: 112
                                            ->  Bitmap Heap Scan on movie_info_idx mi_idx  (cost=6388.45..19498.59 rows=49821 width=13) (actual time=15.937..115.305 rows=121572 loops=1)
                                                  Recheck Cond: (info_type_id = it2.id)
                                                  Filter: (info > '7.0'::text)
                                                  Rows Removed by Filter: 338353
                                                  Heap Blocks: exact=7934
                                                  ->  Bitmap Index Scan on info_type_id_movie_info_idx  (cost=0.00..6375.99 rows=345009 width=0) (actual time=14.953..14.953 rows=459925 loops=1)
                                                        Index Cond: (info_type_id = it2.id)
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.05 rows=5 width=12) (actual time=0.001..0.002 rows=3 loops=121572)
                                            Index Cond: (movie_id = mi_idx.movie_id)
                                ->  Hash  (cost=5932.46..5932.46 rows=84392 width=23) (actual time=48.942..48.942 rows=84843 loops=1)
                                      Buckets: 131072  Batches: 1  Memory Usage: 5810kB
                                      ->  Seq Scan on company_name cn  (cost=0.00..5932.46 rows=84392 width=23) (actual time=0.005..34.177 rows=84843 loops=1)
                                            Filter: ((country_code)::text = '[us]'::text)
                                            Rows Removed by Filter: 150154
                    ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=91314)
                          Index Cond: (id = mc.movie_id)
                          Filter: ((production_year >= 2000) AND (production_year <= 2010))
                          Rows Removed by Filter: 1
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.67 rows=1 width=8) (actual time=0.010..0.010 rows=0 loops=42332)
                    Index Cond: (movie_id = mc.movie_id)
                    Filter: (info = ANY ('{Drama,Horror,Western,Family}'::text[]))
                    Rows Removed by Filter: 29
Planning time: 3.500 ms
Execution time: 1220.158 ms
