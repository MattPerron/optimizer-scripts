Aggregate  (cost=11911.80..11911.81 rows=1 width=192) (actual time=178.304..178.304 rows=1 loops=1)
  ->  Nested Loop  (cost=714.99..11911.42 rows=25 width=82) (actual time=28.182..178.289 rows=8 loops=1)
        Join Filter: ((t2.id = mi_idx2.movie_id) AND (it2.id = mi_idx2.info_type_id))
        Rows Removed by Join Filter: 807
        ->  Nested Loop  (cost=714.56..11903.62 rows=15 width=93) (actual time=4.099..177.194 rows=465 loops=1)
              Join Filter: ((ml.linked_movie_id = t2.id) AND (kt2.id = t2.kind_id))
              Rows Removed by Join Filter: 418
              ->  Nested Loop  (cost=714.13..11594.07 rows=577 width=76) (actual time=1.671..159.946 rows=10658 loops=1)
                    ->  Nested Loop  (cost=713.71..11307.20 rows=647 width=61) (actual time=1.667..141.832 rows=10658 loops=1)
                          ->  Nested Loop  (cost=713.28..10239.05 rows=269 width=53) (actual time=1.660..134.587 rows=1849 loops=1)
                                ->  Nested Loop  (cost=712.86..9863.61 rows=842 width=38) (actual time=1.629..124.667 rows=5590 loops=1)
                                      ->  Nested Loop  (cost=712.43..9650.01 rows=351 width=46) (actual time=1.622..120.469 rows=1220 loops=1)
                                            ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.021..0.025 rows=1 loops=1)
                                                  Filter: ((info)::text = 'rating'::text)
                                                  Rows Removed by Filter: 112
                                            ->  Nested Loop  (cost=712.29..9632.38 rows=351 width=42) (actual time=1.600..120.270 rows=1220 loops=1)
                                                  Join Filter: (mi_idx1.info_type_id = it1.id)
                                                  Rows Removed by Join Filter: 2440
                                                  ->  Nested Loop  (cost=712.29..9603.67 rows=1753 width=46) (actual time=1.585..119.246 rows=3660 loops=1)
                                                        ->  Nested Loop  (cost=711.86..9295.00 rows=584 width=33) (actual time=1.577..115.539 rows=1454 loops=1)
                                                              ->  Nested Loop  (cost=711.86..9264.94 rows=584 width=29) (actual time=1.575..115.038 rows=1454 loops=1)
                                                                    Join Filter: (t1.kind_id = kt1.id)
                                                                    Rows Removed by Join Filter: 861
                                                                    ->  Merge Join  (cost=711.86..9189.59 rows=3507 width=33) (actual time=1.567..114.395 rows=2315 loops=1)
                                                                          Merge Cond: (t1.id = ml.movie_id)
                                                                          ->  Index Scan using title_pkey on title t1  (cost=0.43..110297.12 rows=2528312 width=25) (actual time=0.005..98.688 rows=186176 loops=1)
                                                                          ->  Sort  (cost=711.43..720.80 rows=3750 width=8) (actual time=1.258..1.460 rows=2315 loops=1)
                                                                                Sort Key: ml.movie_id
                                                                                Sort Method: quicksort  Memory: 205kB
                                                                                ->  Nested Loop  (cost=38.82..488.81 rows=3750 width=8) (actual time=0.107..0.880 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..19.76 rows=2 width=4) (actual time=0.004..0.007 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.085..0.309 rows=1158 loops=2)
                                                                                            Recheck Cond: (link_type_id = lt.id)
                                                                                            Heap Blocks: exact=191
                                                                                            ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.073..0.073 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                    ->  Materialize  (cost=0.00..22.75 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=2315)
                                                                          ->  Seq Scan on kind_type kt1  (cost=0.00..22.75 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                                                                                Filter: ((kind)::text = 'tv series'::text)
                                                                                Rows Removed by Filter: 6
                                                              ->  Materialize  (cost=0.00..22.75 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=1454)
                                                                    ->  Seq Scan on kind_type kt2  (cost=0.00..22.75 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                          Filter: ((kind)::text = 'tv series'::text)
                                                                          Rows Removed by Filter: 6
                                                        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..0.50 rows=3 width=13) (actual time=0.002..0.002 rows=3 loops=1454)
                                                              Index Cond: (movie_id = t1.id)
                                                  ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=3660)
                                                        ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                              Filter: ((info)::text = 'rating'::text)
                                                              Rows Removed by Filter: 112
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=5 loops=1220)
                                            Index Cond: (movie_id = t1.id)
                                ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=5590)
                                      Index Cond: (id = mc1.company_id)
                                      Filter: ((country_code)::text = '[us]'::text)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..3.92 rows=5 width=8) (actual time=0.002..0.003 rows=6 loops=1849)
                                Index Cond: (movie_id = ml.linked_movie_id)
                    ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=10658)
                          Index Cond: (id = mc2.company_id)
              ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.001..0.001 rows=0 loops=10658)
                    Index Cond: (id = mc2.movie_id)
                    Filter: ((production_year >= 2005) AND (production_year <= 2008))
                    Rows Removed by Filter: 1
        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.51 rows=1 width=13) (actual time=0.002..0.002 rows=2 loops=465)
              Index Cond: (movie_id = mc2.movie_id)
              Filter: (info < '3.0'::text)
              Rows Removed by Filter: 1
Planning time: 60.282 ms
Execution time: 178.427 ms
