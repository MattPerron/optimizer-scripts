Aggregate  (cost=3449.92..3449.93 rows=1 width=192) (actual time=30.787..30.787 rows=1 loops=1)
  ->  Nested Loop  (cost=929.44..3449.90 rows=1 width=84) (actual time=5.264..30.703 rows=114 loops=1)
        ->  Nested Loop  (cost=929.02..3449.46 rows=1 width=69) (actual time=5.256..30.452 rows=114 loops=1)
              ->  Nested Loop  (cost=928.59..3448.79 rows=1 width=77) (actual time=5.249..30.288 rows=46 loops=1)
                    ->  Nested Loop  (cost=928.46..3448.63 rows=1 width=81) (actual time=4.535..30.186 rows=72 loops=1)
                          ->  Nested Loop  (cost=928.04..3448.18 rows=1 width=66) (actual time=4.526..29.973 rows=77 loops=1)
                                ->  Nested Loop  (cost=927.61..3447.57 rows=1 width=74) (actual time=4.518..29.849 rows=27 loops=1)
                                      Join Filter: (ml.linked_movie_id = t2.id)
                                      ->  Nested Loop  (cost=927.18..3446.85 rows=1 width=49) (actual time=4.509..29.688 rows=41 loops=1)
                                            Join Filter: (it2.id = mi_idx2.info_type_id)
                                            Rows Removed by Join Filter: 2863
                                            ->  Hash Join  (cost=926.75..3367.98 rows=38 width=43) (actual time=1.607..23.932 rows=2064 loops=1)
                                                  Hash Cond: (t1.kind_id = kt1.id)
                                                  ->  Nested Loop  (cost=925.64..3365.37 rows=132 width=47) (actual time=1.581..23.374 rows=2064 loops=1)
                                                        Join Filter: (ml.movie_id = t1.id)
                                                        ->  Hash Join  (cost=925.21..3287.44 rows=132 width=22) (actual time=1.572..19.388 rows=2064 loops=1)
                                                              Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                              ->  Merge Join  (cost=920.36..3225.39 rows=14902 width=22) (actual time=1.537..18.458 rows=6192 loops=1)
                                                                    Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43804.18 rows=1380035 width=14) (actual time=0.014..9.465 rows=63901 loops=1)
                                                                    ->  Sort  (cost=919.92..932.42 rows=5000 width=8) (actual time=1.495..1.991 rows=6443 loops=1)
                                                                          Sort Key: ml.movie_id
                                                                          Sort Method: quicksort  Memory: 205kB
                                                                          ->  Nested Loop  (cost=37.49..612.73 rows=5000 width=8) (actual time=0.070..0.991 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.003..0.006 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=37.49..185.08 rows=1875 width=12) (actual time=0.058..0.310 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..37.02 rows=1875 width=0) (actual time=0.045..0.045 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                              ->  Hash  (cost=4.83..4.83 rows=1 width=8) (actual time=0.023..0.023 rows=1 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Nested Loop  (cost=0.00..4.83 rows=1 width=8) (actual time=0.018..0.021 rows=1 loops=1)
                                                                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                                          ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                        ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=2064)
                                                              Index Cond: (id = mi_idx1.movie_id)
                                                  ->  Hash  (cost=1.09..1.09 rows=2 width=4) (actual time=0.013..0.013 rows=2 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=2 width=4) (actual time=0.008..0.010 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                              Rows Removed by Filter: 5
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=2 width=14) (actual time=0.002..0.002 rows=1 loops=2064)
                                                  Index Cond: (movie_id = ml.linked_movie_id)
                                                  Filter: (info < '3.5'::text)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using title_pkey on title t2  (cost=0.43..0.71 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=41)
                                            Index Cond: (id = mi_idx2.movie_id)
                                            Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                            Rows Removed by Filter: 0
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.003..0.004 rows=3 loops=27)
                                      Index Cond: (movie_id = t1.id)
                          ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=77)
                                Index Cond: (id = mc1.company_id)
                                Filter: ((country_code)::text <> '[us]'::text)
                                Rows Removed by Filter: 0
                    ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=72)
                          Index Cond: (id = t2.kind_id)
                          Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                          Rows Removed by Filter: 0
              ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.002..0.003 rows=2 loops=46)
                    Index Cond: (movie_id = t2.id)
        ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=114)
              Index Cond: (id = mc2.company_id)
Planning time: 159.780 ms
Execution time: 31.002 ms
