Aggregate  (cost=11040.83..11040.84 rows=1 width=96) (actual time=854.422..854.422 rows=1 loops=1)
  ->  Nested Loop  (cost=3782.97..11040.83 rows=1 width=42) (actual time=47.709..851.213 rows=8373 loops=1)
        ->  Nested Loop  (cost=3782.83..11040.64 rows=1 width=46) (actual time=47.698..824.040 rows=24852 loops=1)
              Join Filter: (t.id = mi_idx.movie_id)
              ->  Nested Loop  (cost=3782.40..11040.11 rows=1 width=56) (actual time=47.683..795.806 rows=8493 loops=1)
                    ->  Nested Loop  (cost=3782.26..11039.93 rows=1 width=60) (actual time=47.672..783.907 rows=9609 loops=1)
                          Join Filter: (t.id = mi.movie_id)
                          ->  Nested Loop  (cost=3781.82..11038.06 rows=1 width=52) (actual time=47.637..199.919 rows=8286 loops=1)
                                ->  Nested Loop  (cost=3781.69..11037.90 rows=1 width=56) (actual time=47.626..192.222 rows=8286 loops=1)
                                      ->  Nested Loop  (cost=3781.27..11037.41 rows=1 width=41) (actual time=47.617..168.075 rows=8705 loops=1)
                                            Join Filter: (t.id = mc.movie_id)
                                            ->  Hash Join  (cost=3780.84..11035.68 rows=3 width=29) (actual time=47.597..154.358 rows=922 loops=1)
                                                  Hash Cond: (t.kind_id = kt.id)
                                                  ->  Nested Loop  (cost=3779.73..11034.46 rows=9 width=33) (actual time=47.571..154.034 rows=1041 loops=1)
                                                        ->  Hash Join  (cost=3779.30..11023.68 rows=22 width=8) (actual time=47.499..131.250 rows=6704 loops=1)
                                                              Hash Cond: (cc.status_id = cct2.id)
                                                              ->  Hash Join  (cost=3778.24..11021.69 rows=89 width=12) (actual time=47.483..128.712 rows=13808 loops=1)
                                                                    Hash Cond: (cc.subject_id = cct1.id)
                                                                    ->  Hash Join  (cost=3777.18..11020.12 rows=49 width=16) (actual time=47.471..124.581 rows=20024 loops=1)
                                                                          Hash Cond: (mk.movie_id = cc.movie_id)
                                                                          ->  Nested Loop  (cost=6.74..6229.24 rows=37091 width=4) (actual time=3.413..65.186 rows=37091 loops=1)
                                                                                ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=3 width=4) (actual time=0.808..15.643 rows=3 loops=1)
                                                                                      Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                      Rows Removed by Filter: 134167
                                                                                ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.74..1086.25 rows=298 width=8) (actual time=2.587..14.532 rows=12364 loops=3)
                                                                                      Recheck Cond: (keyword_id = k.id)
                                                                                      Heap Blocks: exact=26312
                                                                                      ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=298 width=0) (actual time=1.465..1.465 rows=12364 loops=3)
                                                                                            Index Cond: (keyword_id = k.id)
                                                                          ->  Hash  (cost=2081.86..2081.86 rows=135086 width=12) (actual time=43.003..43.003 rows=135086 loops=1)
                                                                                Buckets: 262144  Batches: 1  Memory Usage: 7853kB
                                                                                ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.008..16.988 rows=135086 loops=1)
                                                                    ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                          ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1)
                                                                                Filter: ((kind)::text = 'cast'::text)
                                                                                Rows Removed by Filter: 3
                                                              ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                                                          Filter: ((kind)::text = 'complete'::text)
                                                                          Rows Removed by Filter: 3
                                                        ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=6704)
                                                              Index Cond: (id = mk.movie_id)
                                                              Filter: (production_year > 2005)
                                                              Rows Removed by Filter: 1
                                                  ->  Hash  (cost=1.09..1.09 rows=2 width=4) (actual time=0.014..0.014 rows=2 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.009..0.011 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                              Rows Removed by Filter: 5
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.006..0.012 rows=9 loops=922)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                                  Rows Removed by Filter: 11
                                      ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=8705)
                                            Index Cond: (id = mc.company_id)
                                            Filter: ((country_code)::text <> '[us]'::text)
                                            Rows Removed by Filter: 0
                                ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=8286)
                                      Index Cond: (id = mc.company_type_id)
                                      Heap Fetches: 0
                          ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.84 rows=2 width=8) (actual time=0.059..0.070 rows=1 loops=8286)
                                Index Cond: (movie_id = mk.movie_id)
                                Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                Rows Removed by Filter: 213
                    ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=9609)
                          Index Cond: (id = mi.info_type_id)
                          Filter: ((info)::text = 'countries'::text)
                          Rows Removed by Filter: 0
              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=8493)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (info < '8.5'::text)
                    Rows Removed by Filter: 0
        ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=24852)
              Index Cond: (id = mi_idx.info_type_id)
              Filter: ((info)::text = 'rating'::text)
              Rows Removed by Filter: 1
Planning time: 194.199 ms
Execution time: 854.669 ms
