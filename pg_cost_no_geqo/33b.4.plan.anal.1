Aggregate  (cost=4769.16..4769.17 rows=1 width=192) (actual time=32.256..32.256 rows=1 loops=1)
  ->  Nested Loop  (cost=603.20..4769.15 rows=1 width=84) (actual time=5.800..32.240 rows=4 loops=1)
        ->  Nested Loop  (cost=603.07..4768.98 rows=1 width=88) (actual time=5.793..32.228 rows=4 loops=1)
              ->  Nested Loop  (cost=602.65..4768.53 rows=1 width=73) (actual time=5.784..32.204 rows=4 loops=1)
                    Join Filter: (t2.id = mc2.movie_id)
                    ->  Nested Loop  (cost=602.22..4767.79 rows=1 width=81) (actual time=5.776..32.193 rows=1 loops=1)
                          ->  Nested Loop  (cost=601.80..4767.35 rows=1 width=66) (actual time=5.764..32.167 rows=4 loops=1)
                                ->  Nested Loop  (cost=601.37..4766.74 rows=1 width=74) (actual time=5.750..32.145 rows=2 loops=1)
                                      Join Filter: (ml.linked_movie_id = t2.id)
                                      ->  Nested Loop  (cost=600.94..4747.61 rows=26 width=49) (actual time=5.744..32.032 rows=28 loops=1)
                                            Join Filter: (mi_idx2.info_type_id = it2.id)
                                            Rows Removed by Join Filter: 1581
                                            ->  Nested Loop  (cost=600.94..4738.89 rows=420 width=53) (actual time=1.613..31.374 rows=1609 loops=1)
                                                  ->  Nested Loop  (cost=600.51..4131.02 rows=295 width=39) (actual time=1.604..27.236 rows=1220 loops=1)
                                                        Join Filter: (t1.kind_id = kt1.id)
                                                        Rows Removed by Join Filter: 844
                                                        ->  Nested Loop  (cost=600.51..4098.97 rows=2064 width=43) (actual time=1.598..26.444 rows=2064 loops=1)
                                                              Join Filter: (ml.movie_id = t1.id)
                                                              ->  Nested Loop  (cost=600.08..2880.38 rows=2064 width=18) (actual time=1.588..22.295 rows=2064 loops=1)
                                                                    Join Filter: (mi_idx1.info_type_id = it1.id)
                                                                    Rows Removed by Join Filter: 4128
                                                                    ->  Merge Join  (cost=600.08..2785.08 rows=6192 width=22) (actual time=1.569..20.030 rows=6192 loops=1)
                                                                          Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43804.18 rows=1380035 width=14) (actual time=0.016..10.399 rows=63901 loops=1)
                                                                          ->  Sort  (cost=599.65..605.43 rows=2315 width=8) (actual time=1.523..2.016 rows=6443 loops=1)
                                                                                Sort Key: ml.movie_id
                                                                                Sort Method: quicksort  Memory: 205kB
                                                                                ->  Nested Loop  (cost=38.82..470.28 rows=2315 width=8) (actual time=0.084..1.014 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=4) (actual time=0.006..0.009 rows=2 loops=1)
                                                                                            Filter: ((link)::text ~~ '%follow%'::text)
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.064..0.316 rows=1158 loops=2)
                                                                                            Recheck Cond: (link_type_id = lt.id)
                                                                                            Heap Blocks: exact=191
                                                                                            ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.051..0.051 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                    ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6192)
                                                                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                              ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=2064)
                                                                    Index Cond: (id = mi_idx1.movie_id)
                                                        ->  Materialize  (cost=0.00..1.09 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=2064)
                                                              ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'tv series'::text)
                                                                    Rows Removed by Filter: 6
                                                  ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.002..0.003 rows=1 loops=1220)
                                                        Index Cond: (movie_id = ml.linked_movie_id)
                                                        Filter: (info < '3.0'::text)
                                                        Rows Removed by Filter: 1
                                            ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=1609)
                                                  ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                        Filter: ((info)::text = 'rating'::text)
                                                        Rows Removed by Filter: 112
                                      ->  Index Scan using title_pkey on title t2  (cost=0.43..0.72 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=28)
                                            Index Cond: (id = mi_idx2.movie_id)
                                            Filter: (production_year = 2007)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.009..0.009 rows=2 loops=2)
                                      Index Cond: (movie_id = t1.id)
                          ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.006..0.006 rows=0 loops=4)
                                Index Cond: (id = mc1.company_id)
                                Filter: ((country_code)::text = '[nl]'::text)
                                Rows Removed by Filter: 1
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.007..0.009 rows=4 loops=1)
                          Index Cond: (movie_id = mi_idx2.movie_id)
              ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.005..0.005 rows=1 loops=4)
                    Index Cond: (id = mc2.company_id)
        ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=4)
              Index Cond: (id = t2.kind_id)
              Filter: ((kind)::text = 'tv series'::text)
Planning time: 268.790 ms
Execution time: 32.469 ms
