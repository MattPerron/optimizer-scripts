Aggregate  (cost=65662.89..65662.90 rows=1 width=96) (actual time=337.709..337.709 rows=1 loops=1)
  ->  Nested Loop  (cost=12100.38..65662.88 rows=1 width=42) (actual time=83.610..337.477 rows=397 loops=1)
        Join Filter: (mi.info_type_id = it1.id)
        ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.012 rows=1 loops=1)
              Filter: ((info)::text = 'genres'::text)
              Rows Removed by Filter: 112
        ->  Nested Loop  (cost=12100.38..65660.23 rows=19 width=46) (actual time=83.604..337.374 rows=397 loops=1)
              Join Filter: (t.id = mi.movie_id)
              ->  Nested Loop  (cost=12099.95..65560.81 rows=63 width=54) (actual time=72.201..279.369 rows=5674 loops=1)
                    Join Filter: (mi_idx.movie_id = t.id)
                    ->  Hash Join  (cost=12099.52..65369.64 rows=358 width=33) (actual time=71.101..238.563 rows=19791 loops=1)
                          Hash Cond: (mc.company_id = cn.id)
                          ->  Hash Join  (cost=5106.52..58070.70 rows=24233 width=18) (actual time=15.776..176.093 rows=24233 loops=1)
                                Hash Cond: (mc.company_type_id = ct.id)
                                ->  Nested Loop  (cost=5105.46..57396.28 rows=64707 width=22) (actual time=15.748..165.770 rows=64707 loops=1)
                                      ->  Nested Loop  (cost=5105.03..17284.42 rows=15849 width=10) (actual time=15.736..106.249 rows=15849 loops=1)
                                            ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                                                  Filter: ((info)::text = 'rating'::text)
                                                  Rows Removed by Filter: 112
                                            ->  Bitmap Heap Scan on movie_info_idx mi_idx  (cost=5105.03..17180.13 rows=10188 width=14) (actual time=15.727..103.767 rows=15849 loops=1)
                                                  Recheck Cond: (info_type_id = it2.id)
                                                  Filter: (info > '8.0'::text)
                                                  Rows Removed by Filter: 444076
                                                  Heap Blocks: exact=7934
                                                  ->  Bitmap Index Scan on info_type_id_movie_info_idx  (cost=0.00..5102.48 rows=276007 width=0) (actual time=14.745..14.745 rows=459925 loops=1)
                                                        Index Cond: (info_type_id = it2.id)
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.48 rows=5 width=12) (actual time=0.002..0.003 rows=4 loops=15849)
                                            Index Cond: (movie_id = mi_idx.movie_id)
                                ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                      ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                            Filter: ((kind)::text = 'production companies'::text)
                                            Rows Removed by Filter: 3
                          ->  Hash  (cost=5932.46..5932.46 rows=84843 width=23) (actual time=54.886..54.886 rows=84843 loops=1)
                                Buckets: 131072  Batches: 1  Memory Usage: 5810kB
                                ->  Seq Scan on company_name cn  (cost=0.00..5932.46 rows=84843 width=23) (actual time=0.006..35.775 rows=84843 loops=1)
                                      Filter: ((country_code)::text = '[us]'::text)
                                      Rows Removed by Filter: 150154
                    ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=19791)
                          Index Cond: (id = mc.movie_id)
                          Filter: ((production_year >= 2005) AND (production_year <= 2008))
                          Rows Removed by Filter: 1
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.57 rows=1 width=8) (actual time=0.010..0.010 rows=0 loops=5674)
                    Index Cond: (movie_id = mc.movie_id)
                    Filter: (info = ANY ('{Drama,Horror}'::text[]))
                    Rows Removed by Filter: 28
Planning time: 3.430 ms
Execution time: 337.797 ms
