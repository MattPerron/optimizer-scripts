Aggregate  (cost=10824.67..10824.68 rows=1 width=96) (actual time=258.542..258.542 rows=1 loops=1)
  ->  Nested Loop  (cost=4113.49..10824.66 rows=1 width=42) (actual time=42.171..258.462 rows=148 loops=1)
        ->  Nested Loop  (cost=4113.35..10824.48 rows=1 width=46) (actual time=42.163..258.186 rows=224 loops=1)
              Join Filter: (t.id = mi_idx.movie_id)
              ->  Nested Loop  (cost=4112.92..10823.97 rows=1 width=56) (actual time=42.148..257.512 rows=210 loops=1)
                    ->  Nested Loop  (cost=4112.78..10823.78 rows=1 width=60) (actual time=42.139..257.172 rows=233 loops=1)
                          Join Filter: (t.id = mi.movie_id)
                          ->  Nested Loop  (cost=4112.34..10822.23 rows=1 width=52) (actual time=41.914..135.271 rows=1685 loops=1)
                                ->  Nested Loop  (cost=4112.21..10822.08 rows=1 width=56) (actual time=41.902..133.718 rows=1685 loops=1)
                                      ->  Nested Loop  (cost=4111.79..10821.59 rows=1 width=41) (actual time=41.891..128.685 rows=1735 loops=1)
                                            Join Filter: (t.id = mc.movie_id)
                                            ->  Nested Loop  (cost=4111.36..10821.01 rows=1 width=29) (actual time=41.874..125.344 rows=273 loops=1)
                                                  ->  Nested Loop  (cost=4111.23..10820.40 rows=4 width=33) (actual time=41.859..124.907 rows=315 loops=1)
                                                        ->  Hash Join  (cost=4110.80..10815.50 rows=10 width=8) (actual time=41.842..111.976 rows=3832 loops=1)
                                                              Hash Cond: (cc.status_id = cct2.id)
                                                              ->  Hash Join  (cost=4109.71..10749.73 rows=6216 width=12) (actual time=41.815..110.765 rows=6216 loops=1)
                                                                    Hash Cond: (mk.movie_id = cc.movie_id)
                                                                    ->  Nested Loop  (cost=6.74..6229.24 rows=37091 width=4) (actual time=3.240..61.933 rows=37091 loops=1)
                                                                          ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=3 width=4) (actual time=0.784..14.999 rows=3 loops=1)
                                                                                Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                Rows Removed by Filter: 134167
                                                                          ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.74..1086.25 rows=298 width=8) (actual time=2.470..13.782 rows=12364 loops=3)
                                                                                Recheck Cond: (keyword_id = k.id)
                                                                                Heap Blocks: exact=26312
                                                                                ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=298 width=0) (actual time=1.329..1.329 rows=12364 loops=3)
                                                                                      Index Cond: (keyword_id = k.id)
                                                                    ->  Hash  (cost=3488.66..3488.66 rows=49145 width=8) (actual time=38.427..38.427 rows=49145 loops=1)
                                                                          Buckets: 65536  Batches: 1  Memory Usage: 2432kB
                                                                          ->  Hash Join  (cost=1.06..3488.66 rows=49145 width=8) (actual time=15.302..30.641 rows=49145 loops=1)
                                                                                Hash Cond: (cc.subject_id = cct1.id)
                                                                                ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.006..11.116 rows=135086 loops=1)
                                                                                ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                                                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                      ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                                                                            Filter: ((kind)::text = 'crew'::text)
                                                                                            Rows Removed by Filter: 3
                                                              ->  Hash  (cost=1.05..1.05 rows=3 width=4) (actual time=0.014..0.014 rows=3 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.008..0.009 rows=3 loops=1)
                                                                          Filter: ((kind)::text <> 'complete+verified'::text)
                                                                          Rows Removed by Filter: 1
                                                        ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=3832)
                                                              Index Cond: (id = mk.movie_id)
                                                              Filter: (production_year > 2005)
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=315)
                                                        Index Cond: (id = t.kind_id)
                                                        Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                        Rows Removed by Filter: 0
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.006..0.011 rows=6 loops=273)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                                  Rows Removed by Filter: 10
                                      ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=1735)
                                            Index Cond: (id = mc.company_id)
                                            Filter: ((country_code)::text <> '[us]'::text)
                                            Rows Removed by Filter: 0
                                ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=1685)
                                      Index Cond: (id = mc.company_type_id)
                                      Heap Fetches: 0
                          ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.54 rows=1 width=8) (actual time=0.072..0.072 rows=0 loops=1685)
                                Index Cond: (movie_id = mk.movie_id)
                                Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                Rows Removed by Filter: 315
                    ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=233)
                          Index Cond: (id = mi.info_type_id)
                          Filter: ((info)::text = 'countries'::text)
                          Rows Removed by Filter: 0
              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.002..0.003 rows=1 loops=210)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (info > '6.5'::text)
                    Rows Removed by Filter: 2
        ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=224)
              Index Cond: (id = mi_idx.info_type_id)
              Filter: ((info)::text = 'rating'::text)
              Rows Removed by Filter: 0
Planning time: 191.469 ms
Execution time: 258.764 ms
