Aggregate  (cost=434312.82..434312.83 rows=1 width=64) (actual time=16634.666..16634.666 rows=1 loops=1)
  ->  Nested Loop  (cost=228340.66..434301.46 rows=2273 width=32) (actual time=2417.418..16224.708 rows=1760645 loops=1)
        ->  Nested Loop  (cost=228340.23..432517.00 rows=2072 width=40) (actual time=2416.440..14571.976 rows=787043 loops=1)
              ->  Nested Loop  (cost=228339.80..431111.37 rows=1540 width=44) (actual time=2416.424..13234.698 rows=880631 loops=1)
                    ->  Nested Loop  (cost=228339.38..426120.28 rows=4264 width=48) (actual time=2416.403..6805.475 rows=3671284 loops=1)
                          Join Filter: (t.id = mc.movie_id)
                          ->  Nested Loop  (cost=228338.95..423568.10 rows=953 width=56) (actual time=2416.391..4742.445 rows=371543 loops=1)
                                ->  Hash Join  (cost=228338.52..417025.91 rows=4130 width=37) (actual time=2416.372..3908.084 rows=371852 loops=1)
                                      Hash Cond: (mi.movie_id = t.id)
                                      ->  Nested Loop  (cost=4026.76..179514.07 rows=3036719 width=4) (actual time=95.895..934.437 rows=3036719 loops=1)
                                            ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.015 rows=1 loops=1)
                                                  Filter: ((info)::text = 'release dates'::text)
                                                  Rows Removed by Filter: 112
                                            ->  Bitmap Heap Scan on movie_info mi  (cost=4026.76..177361.56 rows=215010 width=8) (actual time=95.885..488.178 rows=3036719 loops=1)
                                                  Recheck Cond: (info_type_id = it.id)
                                                  Heap Blocks: exact=25448
                                                  ->  Bitmap Index Scan on info_type_id_movie_info  (cost=0.00..3973.01 rows=215010 width=0) (actual time=92.248..92.248 rows=3036719 loops=1)
                                                        Index Cond: (info_type_id = it.id)
                                      ->  Hash  (cost=222425.57..222425.57 rows=150895 width=33) (actual time=2320.149..2320.149 rows=168407 loops=1)
                                            Buckets: 262144  Batches: 1  Memory Usage: 14124kB
                                            ->  Hash Join  (cost=84870.63..222425.57 rows=150895 width=33) (actual time=809.342..2270.206 rows=168407 loops=1)
                                                  Hash Cond: (ci.movie_id = t.id)
                                                  ->  Nested Loop  (cost=0.56..134068.91 rows=276166 width=12) (actual time=0.134..1342.176 rows=276166 loops=1)
                                                        ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.009..0.012 rows=1 loops=1)
                                                              Filter: ((role)::text = 'actress'::text)
                                                              Rows Removed by Filter: 11
                                                        ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133251.71 rows=81605 width=16) (actual time=0.122..1302.382 rows=276166 loops=1)
                                                              Index Cond: (role_id = rt.id)
                                                              Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                              Rows Removed by Filter: 7175807
                                                  ->  Hash  (cost=67601.90..67601.90 rows=1381453 width=21) (actual time=806.601..806.601 rows=1381453 loops=1)
                                                        Buckets: 2097152  Batches: 1  Memory Usage: 90381kB
                                                        ->  Seq Scan on title t  (cost=0.00..67601.90 rows=1381453 width=21) (actual time=0.007..411.697 rows=1381453 loops=1)
                                                              Filter: (production_year > 2000)
                                                              Rows Removed by Filter: 1146859
                                ->  Index Scan using name_pkey on name n  (cost=0.43..1.58 rows=1 width=19) (actual time=0.002..0.002 rows=1 loops=371852)
                                      Index Cond: (id = ci.person_id)
                                      Filter: ((gender)::text = 'f'::text)
                                      Rows Removed by Filter: 0
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.62 rows=5 width=8) (actual time=0.001..0.003 rows=10 loops=371543)
                                Index Cond: (movie_id = mi.movie_id)
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.17 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=3671284)
                          Index Cond: (id = mc.company_id)
                          Filter: ((country_code)::text = '[us]'::text)
                          Rows Removed by Filter: 1
              ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..0.91 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=880631)
                    Index Cond: (id = ci.person_role_id)
                    Heap Fetches: 0
        ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..0.84 rows=2 width=4) (actual time=0.001..0.002 rows=2 loops=787043)
              Index Cond: (person_id = n.id)
              Heap Fetches: 0
Planning time: 12.585 ms
Execution time: 16635.155 ms
