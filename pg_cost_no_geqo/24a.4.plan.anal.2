Aggregate  (cost=38866.54..38866.55 rows=1 width=96) (actual time=552.869..552.869 rows=1 loops=1)
  ->  Nested Loop  (cost=10.31..38866.53 rows=1 width=48) (actual time=58.864..552.734 rows=275 loops=1)
        Join Filter: (ci.role_id = rt.id)
        ->  Nested Loop  (cost=10.31..38865.37 rows=1 width=52) (actual time=58.855..552.415 rows=275 loops=1)
              ->  Nested Loop  (cost=9.88..38863.52 rows=1 width=45) (actual time=0.995..482.400 rows=36578 loops=1)
                    ->  Nested Loop  (cost=9.45..38861.77 rows=1 width=33) (actual time=0.987..412.843 rows=36786 loops=1)
                          ->  Nested Loop  (cost=9.02..38860.76 rows=1 width=29) (actual time=0.977..377.224 rows=13758 loops=1)
                                Join Filter: (t.id = ci.movie_id)
                                ->  Nested Loop  (cost=8.46..38472.88 rows=10 width=33) (actual time=0.737..110.181 rows=3406 loops=1)
                                      ->  Nested Loop  (cost=8.04..38390.32 rows=56 width=37) (actual time=0.729..80.918 rows=13560 loops=1)
                                            Join Filter: (t.id = mc.movie_id)
                                            ->  Nested Loop  (cost=7.61..37447.22 rows=272 width=29) (actual time=0.722..72.730 rows=738 loops=1)
                                                  Join Filter: (mi.info_type_id = it.id)
                                                  ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.017 rows=1 loops=1)
                                                        Filter: ((info)::text = 'release dates'::text)
                                                        Rows Removed by Filter: 112
                                                  ->  Nested Loop  (cost=7.61..37435.59 rows=738 width=33) (actual time=0.711..72.533 rows=738 loops=1)
                                                        Join Filter: (t.id = mi.movie_id)
                                                        ->  Nested Loop  (cost=7.17..21605.69 rows=495 width=25) (actual time=0.700..56.803 rows=495 loops=1)
                                                              ->  Nested Loop  (cost=6.74..6061.53 rows=9696 width=4) (actual time=0.651..27.550 rows=9696 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.009..13.984 rows=3 loops=1)
                                                                          Filter: (keyword = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                          Rows Removed by Filter: 134167
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.74..1086.25 rows=298 width=8) (actual time=0.635..4.005 rows=3232 loops=3)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=7446
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=298 width=0) (actual time=0.339..0.339 rows=3232 loops=3)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=9696)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2010)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..31.97 rows=1 width=8) (actual time=0.012..0.031 rows=1 loops=495)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                              Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%201%'::text) OR (info ~~ 'USA:%201%'::text)))
                                                              Rows Removed by Filter: 70
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.40 rows=5 width=8) (actual time=0.003..0.007 rows=18 loops=738)
                                                  Index Cond: (movie_id = mk.movie_id)
                                      ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=13560)
                                            Index Cond: (id = mc.company_id)
                                            Filter: ((country_code)::text = '[us]'::text)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..38.78 rows=1 width=16) (actual time=0.050..0.077 rows=4 loops=3406)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                      Rows Removed by Filter: 169
                          ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..0.99 rows=2 width=4) (actual time=0.002..0.002 rows=3 loops=13758)
                                Index Cond: (person_id = ci.person_id)
                                Heap Fetches: 0
                    ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.74 rows=1 width=20) (actual time=0.001..0.001 rows=1 loops=36786)
                          Index Cond: (id = ci.person_role_id)
              ->  Index Scan using name_pkey on name n  (cost=0.43..1.85 rows=1 width=19) (actual time=0.002..0.002 rows=0 loops=36578)
                    Index Cond: (id = ci.person_id)
                    Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                    Rows Removed by Filter: 1
        ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=275)
              Filter: ((role)::text = 'actress'::text)
              Rows Removed by Filter: 1
Planning time: 53.345 ms
Execution time: 552.991 ms
