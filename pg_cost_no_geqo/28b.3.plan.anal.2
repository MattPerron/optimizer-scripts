Aggregate  (cost=10762.47..10762.48 rows=1 width=96) (actual time=306.009..306.009 rows=1 loops=1)
  ->  Nested Loop  (cost=4112.53..10762.46 rows=1 width=42) (actual time=40.902..305.925 rows=148 loops=1)
        ->  Nested Loop  (cost=4112.40..10762.29 rows=1 width=46) (actual time=40.893..305.684 rows=161 loops=1)
              ->  Nested Loop  (cost=4112.26..10762.11 rows=1 width=50) (actual time=40.886..305.440 rows=175 loops=1)
                    Join Filter: (t.id = mi.movie_id)
                    ->  Nested Loop  (cost=4111.82..10760.56 rows=1 width=66) (actual time=40.648..197.535 rows=1404 loops=1)
                          ->  Nested Loop  (cost=4111.39..10760.07 rows=1 width=41) (actual time=40.635..183.926 rows=6376 loops=1)
                                ->  Nested Loop  (cost=4111.26..10759.92 rows=1 width=45) (actual time=40.625..178.180 rows=6376 loops=1)
                                      ->  Nested Loop  (cost=4110.84..10759.42 rows=1 width=30) (actual time=40.614..160.597 rows=6570 loops=1)
                                            ->  Nested Loop  (cost=4110.41..10758.85 rows=1 width=18) (actual time=40.600..144.241 rows=1591 loops=1)
                                                  ->  Nested Loop  (cost=4110.28..10758.69 rows=1 width=22) (actual time=40.592..140.722 rows=3041 loops=1)
                                                        ->  Nested Loop  (cost=4110.14..10757.86 rows=5 width=26) (actual time=40.582..135.804 rows=4161 loops=1)
                                                              ->  Hash Join  (cost=4109.71..10749.73 rows=16 width=12) (actual time=40.560..111.475 rows=6216 loops=1)
                                                                    Hash Cond: (mk.movie_id = cc.movie_id)
                                                                    ->  Nested Loop  (cost=6.74..6229.24 rows=37091 width=4) (actual time=3.055..63.765 rows=37091 loops=1)
                                                                          ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=3 width=4) (actual time=0.713..15.335 rows=3 loops=1)
                                                                                Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                Rows Removed by Filter: 134167
                                                                          ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.74..1086.25 rows=298 width=8) (actual time=2.498..14.225 rows=12364 loops=3)
                                                                                Recheck Cond: (keyword_id = k.id)
                                                                                Heap Blocks: exact=26312
                                                                                ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=298 width=0) (actual time=1.408..1.408 rows=12364 loops=3)
                                                                                      Index Cond: (keyword_id = k.id)
                                                                    ->  Hash  (cost=3488.66..3488.66 rows=49145 width=8) (actual time=37.380..37.380 rows=49145 loops=1)
                                                                          Buckets: 65536  Batches: 1  Memory Usage: 2432kB
                                                                          ->  Hash Join  (cost=1.06..3488.66 rows=49145 width=8) (actual time=14.754..29.971 rows=49145 loops=1)
                                                                                Hash Cond: (cc.subject_id = cct1.id)
                                                                                ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.005..10.519 rows=135086 loops=1)
                                                                                ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                      ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                                                            Filter: ((kind)::text = 'crew'::text)
                                                                                            Rows Removed by Filter: 3
                                                              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.003..0.004 rows=1 loops=6216)
                                                                    Index Cond: (movie_id = mk.movie_id)
                                                                    Filter: (info > '6.5'::text)
                                                                    Rows Removed by Filter: 2
                                                        ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=4161)
                                                              Index Cond: (id = mi_idx.info_type_id)
                                                              Filter: ((info)::text = 'rating'::text)
                                                              Rows Removed by Filter: 0
                                                  ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=3041)
                                                        Index Cond: (id = cc.status_id)
                                                        Filter: ((kind)::text <> 'complete+verified'::text)
                                                        Rows Removed by Filter: 0
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.005..0.009 rows=4 loops=1591)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                                  Rows Removed by Filter: 10
                                      ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=6570)
                                            Index Cond: (id = mc.company_id)
                                            Filter: ((country_code)::text <> '[us]'::text)
                                            Rows Removed by Filter: 0
                                ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6376)
                                      Index Cond: (id = mc.company_type_id)
                                      Heap Fetches: 0
                          ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=6376)
                                Index Cond: (id = mk.movie_id)
                                Filter: (production_year > 2005)
                                Rows Removed by Filter: 1
                    ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.54 rows=1 width=8) (actual time=0.076..0.077 rows=0 loops=1404)
                          Index Cond: (movie_id = mk.movie_id)
                          Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                          Rows Removed by Filter: 332
              ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=175)
                    Index Cond: (id = mi.info_type_id)
                    Filter: ((info)::text = 'countries'::text)
                    Rows Removed by Filter: 0
        ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=161)
              Index Cond: (id = t.kind_id)
              Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
              Rows Removed by Filter: 0
Planning time: 192.187 ms
Execution time: 306.215 ms
