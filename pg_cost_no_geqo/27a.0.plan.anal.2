Aggregate  (cost=1205.74..1205.75 rows=1 width=96) (actual time=23.191..23.191 rows=1 loops=1)
  ->  Nested Loop  (cost=340.58..1205.73 rows=1 width=48) (actual time=2.341..23.019 rows=477 loops=1)
        ->  Nested Loop  (cost=340.16..1193.36 rows=28 width=52) (actual time=2.329..13.395 rows=6483 loops=1)
              Join Filter: (ml.movie_id = mk.movie_id)
              ->  Nested Loop  (cost=339.73..1191.43 rows=1 width=68) (actual time=2.319..10.120 rows=705 loops=1)
                    Join Filter: (ml.movie_id = mi.movie_id)
                    ->  Nested Loop  (cost=339.29..1183.38 rows=4 width=64) (actual time=1.957..7.461 rows=269 loops=1)
                          Join Filter: (ml.movie_id = t.id)
                          ->  Nested Loop  (cost=338.86..1176.70 rows=11 width=43) (actual time=1.947..6.948 rows=273 loops=1)
                                ->  Hash Join  (cost=338.44..1146.99 rows=65 width=28) (actual time=1.787..5.584 rows=705 loops=1)
                                      Hash Cond: (mc.company_type_id = ct.id)
                                      ->  Nested Loop  (cost=337.38..1143.20 rows=262 width=32) (actual time=1.771..5.377 rows=794 loops=1)
                                            Join Filter: (ml.movie_id = mc.movie_id)
                                            ->  Hash Join  (cost=336.95..713.13 rows=325 width=20) (actual time=1.757..4.516 rows=189 loops=1)
                                                  Hash Cond: (cc.subject_id = cct1.id)
                                                  ->  Hash Join  (cost=335.88..705.28 rows=650 width=24) (actual time=1.749..4.457 rows=189 loops=1)
                                                        Hash Cond: (cc.status_id = cct2.id)
                                                        ->  Merge Join  (cost=334.81..677.19 rows=2598 width=28) (actual time=1.742..4.395 rows=257 loops=1)
                                                              Merge Cond: (cc.movie_id = ml.movie_id)
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6332.07 rows=135086 width=12) (actual time=0.012..1.883 rows=5993 loops=1)
                                                              ->  Sort  (cost=334.38..338.55 rows=1666 width=16) (actual time=1.514..1.679 rows=2341 loops=1)
                                                                    Sort Key: ml.movie_id
                                                                    Sort Method: quicksort  Memory: 205kB
                                                                    ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=16) (actual time=0.067..1.010 rows=2315 loops=1)
                                                                          ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=16) (actual time=0.004..0.007 rows=2 loops=1)
                                                                                Filter: ((link)::text ~~ '%follow%'::text)
                                                                                Rows Removed by Filter: 16
                                                                          ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.057..0.312 rows=1158 loops=2)
                                                                                Recheck Cond: (link_type_id = lt.id)
                                                                                Heap Blocks: exact=191
                                                                                ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.045..0.045 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                        ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                              ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'complete'::text)
                                                                    Rows Removed by Filter: 3
                                                  ->  Hash  (cost=1.05..1.05 rows=2 width=4) (actual time=0.005..0.005 rows=2 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                                              Rows Removed by Filter: 2
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=3 width=12) (actual time=0.002..0.004 rows=4 loops=189)
                                                  Index Cond: (movie_id = cc.movie_id)
                                                  Filter: (note IS NULL)
                                                  Rows Removed by Filter: 3
                                      ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                            ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'production companies'::text)
                                                  Rows Removed by Filter: 3
                                ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=705)
                                      Index Cond: (id = mc.company_id)
                                      Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                                      Rows Removed by Filter: 1
                          ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=273)
                                Index Cond: (id = mc.movie_id)
                                Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                Rows Removed by Filter: 0
                    ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.00 rows=1 width=4) (actual time=0.008..0.009 rows=3 loops=269)
                          Index Cond: (movie_id = mc.movie_id)
                          Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                          Rows Removed by Filter: 23
              ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.35 rows=46 width=8) (actual time=0.001..0.003 rows=9 loops=705)
                    Index Cond: (movie_id = mc.movie_id)
        ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=6483)
              Index Cond: (id = mk.keyword_id)
              Filter: (keyword = 'sequel'::text)
              Rows Removed by Filter: 1
Planning time: 55.993 ms
Execution time: 23.316 ms
