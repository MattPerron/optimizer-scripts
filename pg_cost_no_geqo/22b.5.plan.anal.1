Aggregate  (cost=26706.02..26706.03 rows=1 width=96) (actual time=183.508..183.508 rows=1 loops=1)
  ->  Nested Loop  (cost=8.88..26706.02 rows=1 width=42) (actual time=6.402..183.471 rows=31 loops=1)
        ->  Nested Loop  (cost=8.46..26705.53 rows=1 width=27) (actual time=6.392..183.277 rows=39 loops=1)
              Join Filter: (mi_idx.info_type_id = it2.id)
              Rows Removed by Join Filter: 86
              ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.015 rows=1 loops=1)
                    Filter: ((info)::text = 'rating'::text)
                    Rows Removed by Filter: 112
              ->  Nested Loop  (cost=8.46..26703.05 rows=5 width=31) (actual time=6.376..183.233 rows=125 loops=1)
                    Join Filter: (t.id = mi_idx.movie_id)
                    ->  Nested Loop  (cost=8.04..26697.70 rows=10 width=37) (actual time=6.365..182.919 rows=47 loops=1)
                          Join Filter: (mi.info_type_id = it1.id)
                          Rows Removed by Join Filter: 5
                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.009 rows=1 loops=1)
                                Filter: ((info)::text = 'countries'::text)
                                Rows Removed by Filter: 112
                          ->  Nested Loop  (cost=8.04..26605.35 rows=7195 width=41) (actual time=6.362..182.888 rows=52 loops=1)
                                Join Filter: (t.id = mi.movie_id)
                                ->  Nested Loop  (cost=7.60..26550.69 rows=35 width=33) (actual time=6.338..180.385 rows=95 loops=1)
                                      Join Filter: (mc.company_type_id = ct.id)
                                      ->  Nested Loop  (cost=7.60..26544.80 rows=95 width=37) (actual time=6.331..180.332 rows=95 loops=1)
                                            Join Filter: (t.id = mc.movie_id)
                                            ->  Nested Loop  (cost=7.17..24512.18 rows=3517 width=25) (actual time=2.844..158.269 rows=3517 loops=1)
                                                  Join Filter: (t.kind_id = kt.id)
                                                  Rows Removed by Join Filter: 1618
                                                  ->  Nested Loop  (cost=7.17..24395.66 rows=4040 width=29) (actual time=2.835..156.638 rows=4040 loops=1)
                                                        ->  Nested Loop  (cost=6.74..6229.24 rows=37091 width=4) (actual time=2.810..61.698 rows=37091 loops=1)
                                                              ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=3 width=4) (actual time=0.826..15.652 rows=3 loops=1)
                                                                    Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                    Rows Removed by Filter: 134167
                                                              ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.74..1086.25 rows=298 width=8) (actual time=2.244..13.534 rows=12364 loops=3)
                                                                    Recheck Cond: (keyword_id = k.id)
                                                                    Heap Blocks: exact=26312
                                                                    ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=298 width=0) (actual time=1.136..1.136 rows=12364 loops=3)
                                                                          Index Cond: (keyword_id = k.id)
                                                        ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=37091)
                                                              Index Cond: (id = mk.movie_id)
                                                              Filter: (production_year > 2009)
                                                              Rows Removed by Filter: 1
                                                  ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=4040)
                                                        ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.005..0.006 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                              Rows Removed by Filter: 5
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.006..0.006 rows=0 loops=3517)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                                  Rows Removed by Filter: 8
                                      ->  Materialize  (cost=0.00..1.06 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=95)
                                            ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.54 rows=2 width=8) (actual time=0.023..0.026 rows=1 loops=95)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: (info = ANY ('{Germany,German,USA,American}'::text[]))
                                      Rows Removed by Filter: 49
                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.005..0.006 rows=3 loops=47)
                          Index Cond: (movie_id = mk.movie_id)
                          Filter: (info < '7.0'::text)
                          Rows Removed by Filter: 0
        ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=39)
              Index Cond: (id = mc.company_id)
              Filter: ((country_code)::text <> '[us]'::text)
              Rows Removed by Filter: 0
Planning time: 20.350 ms
Execution time: 183.610 ms
