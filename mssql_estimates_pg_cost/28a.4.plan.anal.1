Aggregate  (cost=7487.19..7487.20 rows=1 width=96) (actual time=651.933..651.933 rows=1 loops=1)
  ->  Nested Loop  (cost=9.36..7487.18 rows=1 width=41) (actual time=3.452..650.152 rows=4803 loops=1)
        ->  Nested Loop  (cost=8.94..7486.69 rows=1 width=26) (actual time=3.446..637.353 rows=4955 loops=1)
              Join Filter: (ct.id = mc.company_type_id)
              ->  Nested Loop  (cost=8.94..7485.60 rows=1 width=30) (actual time=3.442..631.045 rows=4955 loops=1)
                    Join Filter: (t.id = mc.movie_id)
                    ->  Nested Loop  (cost=8.51..7485.03 rows=1 width=42) (actual time=3.432..624.730 rows=432 loops=1)
                          Join Filter: (kt.id = t.kind_id)
                          Rows Removed by Join Filter: 197
                          ->  Nested Loop  (cost=8.51..7483.91 rows=1 width=46) (actual time=3.426..623.687 rows=484 loops=1)
                                Join Filter: (mi.movie_id = t.id)
                                ->  Nested Loop  (cost=8.08..7483.41 rows=1 width=21) (actual time=3.418..613.117 rows=2861 loops=1)
                                      Join Filter: (cc.subject_id = cct1.id)
                                      Rows Removed by Join Filter: 4843
                                      ->  Nested Loop  (cost=8.08..7482.35 rows=1 width=25) (actual time=3.090..600.964 rows=7704 loops=1)
                                            Join Filter: (it1.id = mi.info_type_id)
                                            Rows Removed by Join Filter: 3012
                                            ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.015 rows=1 loops=1)
                                                  Filter: ((info)::text = 'countries'::text)
                                                  Rows Removed by Filter: 112
                                            ->  Nested Loop  (cost=8.08..7479.91 rows=2 width=29) (actual time=3.082..599.452 rows=10716 loops=1)
                                                  ->  Nested Loop  (cost=7.64..7478.08 rows=1 width=21) (actual time=3.013..237.607 rows=10071 loops=1)
                                                        Join Filter: (cc.status_id = cct2.id)
                                                        Rows Removed by Join Filter: 47961
                                                        ->  Nested Loop  (cost=7.64..7476.99 rows=1 width=25) (actual time=2.987..204.299 rows=19344 loops=1)
                                                              Join Filter: (it2.id = mi_idx.info_type_id)
                                                              Rows Removed by Join Filter: 38564
                                                              ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                                                    Filter: ((info)::text = 'rating'::text)
                                                                    Rows Removed by Filter: 112
                                                              ->  Nested Loop  (cost=7.64..7473.22 rows=109 width=29) (actual time=2.976..198.688 rows=57908 loops=1)
                                                                    ->  Nested Loop  (cost=7.22..7453.68 rows=37 width=16) (actual time=2.966..127.763 rows=20024 loops=1)
                                                                          ->  Nested Loop  (cost=6.80..7389.43 rows=135 width=4) (actual time=2.827..63.537 rows=37091 loops=1)
                                                                                ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.854..17.406 rows=3 loops=1)
                                                                                      Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                      Rows Removed by Filter: 134167
                                                                                ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.80..1103.92 rows=305 width=8) (actual time=2.320..13.878 rows=12364 loops=3)
                                                                                      Recheck Cond: (keyword_id = k.id)
                                                                                      Heap Blocks: exact=26312
                                                                                      ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.72 rows=305 width=0) (actual time=1.179..1.179 rows=12364 loops=3)
                                                                                            Index Cond: (keyword_id = k.id)
                                                                          ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.001..0.001 rows=1 loops=37091)
                                                                                Index Cond: (movie_id = mk.movie_id)
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.002..0.003 rows=3 loops=20024)
                                                                          Index Cond: (movie_id = mk.movie_id)
                                                                          Filter: (info < '8.5'::text)
                                                                          Rows Removed by Filter: 0
                                                        ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.000..0.001 rows=3 loops=19344)
                                                              Filter: ((kind)::text <> 'complete+verified'::text)
                                                              Rows Removed by Filter: 0
                                                  ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.81 rows=2 width=8) (actual time=0.030..0.036 rows=1 loops=10071)
                                                        Index Cond: (movie_id = mk.movie_id)
                                                        Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                                        Rows Removed by Filter: 72
                                      ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.001 rows=1 loops=7704)
                                            Filter: ((kind)::text = 'crew'::text)
                                            Rows Removed by Filter: 2
                                ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=2861)
                                      Index Cond: (id = mk.movie_id)
                                      Filter: (production_year > 2000)
                                      Rows Removed by Filter: 1
                          ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.001..0.001 rows=1 loops=484)
                                Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                Rows Removed by Filter: 1
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.005..0.013 rows=11 loops=432)
                          Index Cond: (movie_id = mk.movie_id)
                          Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                          Rows Removed by Filter: 10
              ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=4955)
        ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=4955)
              Index Cond: (id = mc.company_id)
              Filter: ((country_code)::text <> '[us]'::text)
              Rows Removed by Filter: 0
Planning time: 60.665 ms
Execution time: 652.032 ms
