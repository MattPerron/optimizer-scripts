Aggregate  (cost=4142.65..4142.66 rows=1 width=192) (actual time=44.652..44.653 rows=1 loops=1)
  ->  Nested Loop  (cost=696.48..4142.63 rows=1 width=82) (actual time=6.825..44.574 rows=114 loops=1)
        ->  Nested Loop  (cost=696.06..4142.18 rows=1 width=67) (actual time=6.821..44.305 rows=131 loops=1)
              ->  Nested Loop  (cost=695.63..4141.58 rows=1 width=75) (actual time=6.815..44.157 rows=44 loops=1)
                    ->  Nested Loop  (cost=695.21..4141.13 rows=1 width=60) (actual time=6.808..44.053 rows=44 loops=1)
                          ->  Nested Loop  (cost=694.78..4140.47 rows=1 width=68) (actual time=6.801..43.957 rows=19 loops=1)
                                ->  Nested Loop  (cost=694.65..4140.30 rows=1 width=72) (actual time=6.796..43.928 rows=19 loops=1)
                                      Join Filter: (it2.id = mi_idx2.info_type_id)
                                      Rows Removed by Join Filter: 1045
                                      ->  Nested Loop  (cost=694.22..4133.62 rows=12 width=67) (actual time=1.656..41.979 rows=737 loops=1)
                                            Join Filter: (t2.kind_id = kt2.id)
                                            Rows Removed by Join Filter: 731
                                            ->  Nested Loop  (cost=694.22..4131.30 rows=43 width=71) (actual time=1.295..41.658 rows=851 loops=1)
                                                  ->  Nested Loop  (cost=693.79..3670.36 rows=103 width=46) (actual time=1.287..36.731 rows=2064 loops=1)
                                                        Join Filter: (ml.movie_id = t1.id)
                                                        ->  Merge Join  (cost=693.36..3609.54 rows=103 width=21) (actual time=1.280..32.866 rows=2064 loops=1)
                                                              Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                              ->  Nested Loop  (cost=0.43..64521.07 rows=12213 width=13) (actual time=0.033..29.903 rows=21301 loops=1)
                                                                    Join Filter: (it1.id = mi_idx1.info_type_id)
                                                                    Rows Removed by Join Filter: 42602
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43815.71 rows=1380035 width=13) (actual time=0.007..9.839 rows=63903 loops=1)
                                                                    ->  Materialize  (cost=0.00..4.84 rows=1 width=8) (actual time=0.000..0.000 rows=1 loops=63903)
                                                                          ->  Nested Loop  (cost=0.00..4.83 rows=1 width=8) (actual time=0.021..0.023 rows=1 loops=1)
                                                                                ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                                                                      Filter: ((info)::text = 'rating'::text)
                                                                                      Rows Removed by Filter: 112
                                                                                ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                                      Filter: ((info)::text = 'rating'::text)
                                                                                      Rows Removed by Filter: 112
                                                              ->  Sort  (cost=692.91..702.29 rows=3750 width=8) (actual time=1.195..1.344 rows=2315 loops=1)
                                                                    Sort Key: ml.movie_id
                                                                    Sort Method: quicksort  Memory: 205kB
                                                                    ->  Nested Loop  (cost=38.82..470.30 rows=3750 width=8) (actual time=0.065..0.828 rows=2315 loops=1)
                                                                          ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.003..0.006 rows=2 loops=1)
                                                                                Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                Rows Removed by Filter: 16
                                                                          ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.055..0.284 rows=1158 loops=2)
                                                                                Recheck Cond: (link_type_id = lt.id)
                                                                                Heap Blocks: exact=191
                                                                                ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.043..0.043 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                        ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=2064)
                                                              Index Cond: (id = mi_idx1.movie_id)
                                                  ->  Index Scan using title_pkey on title t2  (cost=0.43..4.48 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2064)
                                                        Index Cond: (id = ml.linked_movie_id)
                                                        Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                        Rows Removed by Filter: 1
                                            ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=851)
                                                  ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=1)
                                                        Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                        Rows Removed by Filter: 5
                                      ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.53 rows=2 width=13) (actual time=0.002..0.002 rows=1 loops=737)
                                            Index Cond: (movie_id = t2.id)
                                            Filter: (info < '3.5'::text)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=19)
                                      Index Cond: (id = t1.kind_id)
                                      Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.004..0.004 rows=2 loops=19)
                                Index Cond: (movie_id = t2.id)
                    ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=44)
                          Index Cond: (id = mc2.company_id)
              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=3 loops=44)
                    Index Cond: (movie_id = t1.id)
        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=131)
              Index Cond: (id = mc1.company_id)
              Filter: ((country_code)::text <> '[us]'::text)
              Rows Removed by Filter: 0
Planning time: 60.402 ms
Execution time: 44.761 ms
