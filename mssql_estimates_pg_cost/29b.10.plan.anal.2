Aggregate  (cost=3965.34..3965.35 rows=1 width=96) (actual time=13.377..13.378 rows=1 loops=1)
  ->  Nested Loop  (cost=11.21..3965.33 rows=1 width=48) (actual time=1.956..13.366 rows=15 loops=1)
        Join Filter: (n.id = an.person_id)
        ->  Nested Loop  (cost=10.79..3962.43 rows=1 width=60) (actual time=1.947..13.343 rows=5 loops=1)
              Join Filter: (it3.id = pi.info_type_id)
              Rows Removed by Join Filter: 810
              ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.014 rows=1 loops=1)
                    Filter: ((info)::text = 'height'::text)
                    Rows Removed by Filter: 112
              ->  Nested Loop  (cost=10.79..3960.01 rows=1 width=64) (actual time=1.884..13.275 rows=815 loops=1)
                    Join Filter: (n.id = pi.person_id)
                    ->  Nested Loop  (cost=10.36..3940.39 rows=1 width=56) (actual time=1.877..12.998 rows=5 loops=1)
                          ->  Nested Loop  (cost=9.94..3938.37 rows=1 width=60) (actual time=1.870..12.918 rows=22 loops=1)
                                Join Filter: (t.id = mc.movie_id)
                                ->  Nested Loop  (cost=9.51..3933.52 rows=1 width=76) (actual time=1.861..12.900 rows=1 loops=1)
                                      Join Filter: (cct2.id = cc.status_id)
                                      ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                            Filter: ((kind)::text = 'complete+verified'::text)
                                            Rows Removed by Filter: 3
                                      ->  Nested Loop  (cost=9.51..3932.46 rows=1 width=80) (actual time=1.858..12.895 rows=1 loops=1)
                                            Join Filter: (cct1.id = cc.subject_id)
                                            ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'cast'::text)
                                                  Rows Removed by Filter: 3
                                            ->  Nested Loop  (cost=9.51..3931.40 rows=1 width=84) (actual time=1.856..12.891 rows=1 loops=1)
                                                  Join Filter: (t.id = cc.movie_id)
                                                  ->  Nested Loop  (cost=9.09..3928.60 rows=1 width=72) (actual time=1.848..12.883 rows=1 loops=1)
                                                        Join Filter: (it.id = mi.info_type_id)
                                                        ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.010 rows=1 loops=1)
                                                              Filter: ((info)::text = 'release dates'::text)
                                                              Rows Removed by Filter: 112
                                                        ->  Nested Loop  (cost=9.09..3926.18 rows=1 width=76) (actual time=1.844..12.872 rows=1 loops=1)
                                                              Join Filter: (t.id = mi.movie_id)
                                                              ->  Nested Loop  (cost=8.65..3885.18 rows=1 width=68) (actual time=1.822..12.745 rows=1 loops=1)
                                                                    Join Filter: (rt.id = ci.role_id)
                                                                    ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.003..0.005 rows=1 loops=1)
                                                                          Filter: ((role)::text = 'actress'::text)
                                                                          Rows Removed by Filter: 11
                                                                    ->  Nested Loop  (cost=8.65..3884.02 rows=1 width=72) (actual time=1.818..12.739 rows=1 loops=1)
                                                                          ->  Nested Loop  (cost=8.22..3879.94 rows=1 width=60) (actual time=1.809..12.730 rows=1 loops=1)
                                                                                ->  Nested Loop  (cost=7.79..3877.60 rows=1 width=41) (actual time=1.670..12.576 rows=38 loops=1)
                                                                                      Join Filter: (t.id = ci.movie_id)
                                                                                      ->  Nested Loop  (cost=7.23..3827.56 rows=1 width=25) (actual time=1.659..12.299 rows=1 loops=1)
                                                                                            ->  Nested Loop  (cost=6.80..3754.10 rows=34 width=4) (actual time=0.117..10.754 rows=414 loops=1)
                                                                                                  ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.034..10.148 rows=1 loops=1)
                                                                                                        Filter: (keyword = 'computer-animation'::text)
                                                                                                        Rows Removed by Filter: 134169
                                                                                                  ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.80..1124.92 rows=305 width=8) (actual time=0.082..0.561 rows=414 loops=1)
                                                                                                        Recheck Cond: (keyword_id = k.id)
                                                                                                        Heap Blocks: exact=358
                                                                                                        ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.72 rows=305 width=0) (actual time=0.044..0.044 rows=414 loops=1)
                                                                                                              Index Cond: (keyword_id = k.id)
                                                                                            ->  Index Scan using title_pkey on title t  (cost=0.43..2.14 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=414)
                                                                                                  Index Cond: (id = mk.movie_id)
                                                                                                  Filter: ((production_year >= 2000) AND (production_year <= 2005) AND (title = 'Shrek 2'::text))
                                                                                                  Rows Removed by Filter: 1
                                                                                      ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..50.03 rows=1 width=16) (actual time=0.010..0.270 rows=38 loops=1)
                                                                                            Index Cond: (movie_id = mk.movie_id)
                                                                                            Filter: (note = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                            Rows Removed by Filter: 191
                                                                                ->  Index Scan using name_pkey on name n  (cost=0.43..2.34 rows=1 width=19) (actual time=0.004..0.004 rows=0 loops=38)
                                                                                      Index Cond: (id = ci.person_id)
                                                                                      Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                                      Rows Removed by Filter: 1
                                                                          ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.25 rows=1 width=20) (actual time=0.008..0.008 rows=1 loops=1)
                                                                                Index Cond: (id = ci.person_role_id)
                                                                                Filter: (name = 'Queen'::text)
                                                              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..40.99 rows=1 width=8) (actual time=0.021..0.126 rows=1 loops=1)
                                                                    Index Cond: (movie_id = mk.movie_id)
                                                                    Filter: (info ~~ 'USA:%200%'::text)
                                                                    Rows Removed by Filter: 456
                                                  ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.006..0.007 rows=1 loops=1)
                                                        Index Cond: (movie_id = mk.movie_id)
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.78 rows=5 width=8) (actual time=0.007..0.013 rows=22 loops=1)
                                      Index Cond: (movie_id = mk.movie_id)
                          ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=22)
                                Index Cond: (id = mc.company_id)
                                Filter: ((country_code)::text = '[us]'::text)
                                Rows Removed by Filter: 1
                    ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.30 rows=25 width=8) (actual time=0.002..0.029 rows=163 loops=5)
                          Index Cond: (person_id = ci.person_id)
        ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.87 rows=2 width=4) (actual time=0.003..0.004 rows=3 loops=5)
              Index Cond: (person_id = pi.person_id)
              Heap Fetches: 15
Planning time: 80.899 ms
Execution time: 13.506 ms
