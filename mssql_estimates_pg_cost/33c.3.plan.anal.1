Aggregate  (cost=3640.28..3640.29 rows=1 width=192) (actual time=28.897..28.897 rows=1 loops=1)
  ->  Nested Loop  (cost=696.37..3640.27 rows=1 width=82) (actual time=4.617..28.817 rows=114 loops=1)
        ->  Nested Loop  (cost=695.95..3639.82 rows=1 width=67) (actual time=4.613..28.536 rows=131 loops=1)
              ->  Nested Loop  (cost=695.52..3639.21 rows=1 width=75) (actual time=4.606..28.377 rows=44 loops=1)
                    ->  Nested Loop  (cost=695.10..3638.77 rows=1 width=60) (actual time=4.600..28.268 rows=44 loops=1)
                          ->  Nested Loop  (cost=694.67..3638.11 rows=1 width=68) (actual time=4.592..28.179 rows=19 loops=1)
                                Join Filter: (it2.id = mi_idx2.info_type_id)
                                Rows Removed by Join Filter: 1045
                                ->  Nested Loop  (cost=694.24..3636.43 rows=3 width=63) (actual time=1.443..26.184 rows=737 loops=1)
                                      Join Filter: (t2.kind_id = kt2.id)
                                      Rows Removed by Join Filter: 731
                                      ->  Nested Loop  (cost=694.24..3635.00 rows=12 width=67) (actual time=1.240..25.865 rows=851 loops=1)
                                            ->  Nested Loop  (cost=694.24..3632.44 rows=12 width=63) (actual time=1.231..25.560 rows=851 loops=1)
                                                  Join Filter: (kt1.id = t1.kind_id)
                                                  Rows Removed by Join Filter: 503
                                                  ->  Nested Loop  (cost=694.24..3630.14 rows=42 width=67) (actual time=1.227..25.242 rows=851 loops=1)
                                                        Join Filter: (ml.movie_id = t1.id)
                                                        ->  Nested Loop  (cost=693.81..3605.35 rows=42 width=42) (actual time=1.222..23.639 rows=851 loops=1)
                                                              ->  Nested Loop  (cost=693.38..3157.83 rows=100 width=17) (actual time=1.214..18.407 rows=2064 loops=1)
                                                                    Join Filter: (it1.id = mi_idx1.info_type_id)
                                                                    Rows Removed by Join Filter: 4128
                                                                    ->  Merge Join  (cost=693.38..2986.68 rows=11249 width=21) (actual time=1.197..16.808 rows=6192 loops=1)
                                                                          Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43815.71 rows=1380035 width=13) (actual time=0.007..9.699 rows=63901 loops=1)
                                                                          ->  Sort  (cost=692.91..702.29 rows=3750 width=8) (actual time=1.166..1.528 rows=6443 loops=1)
                                                                                Sort Key: ml.movie_id
                                                                                Sort Method: quicksort  Memory: 205kB
                                                                                ->  Nested Loop  (cost=38.82..470.30 rows=3750 width=8) (actual time=0.064..0.811 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.004..0.007 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.054..0.275 rows=1158 loops=2)
                                                                                            Recheck Cond: (link_type_id = lt.id)
                                                                                            Heap Blocks: exact=191
                                                                                            ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.043..0.043 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                    ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6192)
                                                                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                              ->  Index Scan using title_pkey on title t2  (cost=0.43..4.48 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2064)
                                                                    Index Cond: (id = ml.linked_movie_id)
                                                                    Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=851)
                                                              Index Cond: (id = mi_idx1.movie_id)
                                                  ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=851)
                                                        ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                              Rows Removed by Filter: 5
                                            ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=851)
                                                  ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                        Filter: ((info)::text = 'rating'::text)
                                                        Rows Removed by Filter: 112
                                      ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=851)
                                            ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.002..0.003 rows=2 loops=1)
                                                  Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                  Rows Removed by Filter: 5
                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.53 rows=2 width=13) (actual time=0.002..0.002 rows=1 loops=737)
                                      Index Cond: (movie_id = t2.id)
                                      Filter: (info < '3.5'::text)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.003..0.004 rows=2 loops=19)
                                Index Cond: (movie_id = t2.id)
                    ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=44)
                          Index Cond: (id = mc2.company_id)
              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=3 loops=44)
                    Index Cond: (movie_id = t1.id)
        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=131)
              Index Cond: (id = mc1.company_id)
              Filter: ((country_code)::text <> '[us]'::text)
              Rows Removed by Filter: 0
Planning time: 60.454 ms
Execution time: 29.003 ms
