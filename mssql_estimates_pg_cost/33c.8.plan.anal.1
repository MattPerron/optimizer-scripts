Aggregate  (cost=15412.78..15412.79 rows=1 width=192) (actual time=73.134..73.134 rows=1 loops=1)
  ->  Nested Loop  (cost=42.37..15412.77 rows=1 width=82) (actual time=4.294..73.056 rows=114 loops=1)
        ->  Nested Loop  (cost=42.23..15412.00 rows=5 width=86) (actual time=4.290..72.934 rows=114 loops=1)
              Join Filter: (ml.movie_id = t1.id)
              ->  Nested Loop  (cost=41.80..15409.36 rows=5 width=77) (actual time=4.284..72.719 rows=114 loops=1)
                    Join Filter: (mi_idx2.info_type_id = it2.id)
                    Rows Removed by Join Filter: 20020
                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                          Filter: ((info)::text = 'rating'::text)
                          Rows Removed by Filter: 112
                    ->  Nested Loop  (cost=41.80..15399.87 rows=566 width=81) (actual time=0.134..71.535 rows=20134 loops=1)
                          ->  Nested Loop  (cost=41.38..15148.91 rows=566 width=66) (actual time=0.130..41.320 rows=20134 loops=1)
                                ->  Nested Loop  (cost=40.95..14783.56 rows=549 width=74) (actual time=0.125..29.067 rows=4086 loops=1)
                                      ->  Nested Loop  (cost=40.53..14330.09 rows=1017 width=59) (actual time=0.121..21.450 rows=4518 loops=1)
                                            Join Filter: (ml.movie_id = mc1.movie_id)
                                            ->  Nested Loop  (cost=40.10..14024.11 rows=467 width=51) (actual time=0.114..17.955 rows=1064 loops=1)
                                                  Join Filter: (it1.id = mi_idx1.info_type_id)
                                                  Rows Removed by Join Filter: 2128
                                                  ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                        Filter: ((info)::text = 'rating'::text)
                                                        Rows Removed by Filter: 112
                                                  ->  Nested Loop  (cost=40.10..13992.51 rows=2335 width=55) (actual time=0.105..17.626 rows=3192 loops=1)
                                                        ->  Nested Loop  (cost=39.68..12379.64 rows=778 width=42) (actual time=0.102..15.013 rows=1130 loops=1)
                                                              Join Filter: (kt2.id = t2.kind_id)
                                                              Rows Removed by Join Filter: 1112
                                                              ->  Nested Loop  (cost=39.68..12311.84 rows=2335 width=46) (actual time=0.079..14.555 rows=1318 loops=1)
                                                                    Join Filter: (ml.linked_movie_id = t2.id)
                                                                    ->  Nested Loop  (cost=39.25..8235.01 rows=5612 width=21) (actual time=0.072..7.592 rows=3080 loops=1)
                                                                          ->  Nested Loop  (cost=38.82..470.30 rows=3750 width=8) (actual time=0.064..0.912 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.003..0.006 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.055..0.319 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.043..0.043 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=2 width=13) (actual time=0.002..0.003 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.5'::text)
                                                                                Rows Removed by Filter: 1
                                                                    ->  Index Scan using title_pkey on title t2  (cost=0.43..0.71 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=3080)
                                                                          Index Cond: (id = mi_idx2.movie_id)
                                                                          Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                          Rows Removed by Filter: 1
                                                              ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=1318)
                                                                    ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=1)
                                                                          Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                                          Rows Removed by Filter: 5
                                                        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..2.04 rows=3 width=13) (actual time=0.001..0.002 rows=3 loops=1130)
                                                              Index Cond: (movie_id = ml.movie_id)
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.002..0.002 rows=4 loops=1064)
                                                  Index Cond: (movie_id = mi_idx1.movie_id)
                                      ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=4518)
                                            Index Cond: (id = mc1.company_id)
                                            Filter: ((country_code)::text <> '[us]'::text)
                                            Rows Removed by Filter: 0
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.001..0.002 rows=5 loops=4086)
                                      Index Cond: (movie_id = t2.id)
                          ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=20134)
                                Index Cond: (id = mc2.company_id)
              ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=114)
                    Index Cond: (id = mc1.movie_id)
        ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=114)
              Index Cond: (id = t1.kind_id)
              Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
Planning time: 60.130 ms
Execution time: 73.230 ms
