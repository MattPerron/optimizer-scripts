Aggregate  (cost=4494.54..4494.55 rows=1 width=192) (actual time=156.841..156.841 rows=1 loops=1)
  ->  Nested Loop  (cost=668.92..4494.53 rows=1 width=82) (actual time=19.027..156.763 rows=114 loops=1)
        Join Filter: ((t2.id = mi_idx2.movie_id) AND (it2.id = mi_idx2.info_type_id))
        Rows Removed by Join Filter: 20020
        ->  Nested Loop  (cost=668.49..4489.71 rows=9 width=93) (actual time=1.742..123.428 rows=15007 loops=1)
              Join Filter: (t1.kind_id = kt1.id)
              Rows Removed by Join Filter: 11480
              ->  Nested Loop  (cost=668.49..4487.75 rows=30 width=97) (actual time=1.739..118.328 rows=15007 loops=1)
                    Join Filter: (ml.movie_id = t1.id)
                    ->  Nested Loop  (cost=668.06..4471.88 rows=30 width=88) (actual time=1.734..94.817 rows=15007 loops=1)
                          ->  Nested Loop  (cost=667.64..4458.58 rows=30 width=73) (actual time=1.731..69.211 rows=15007 loops=1)
                                ->  Nested Loop  (cost=667.21..4439.28 rows=29 width=65) (actual time=1.726..59.194 rows=2996 loops=1)
                                      Join Filter: (kt2.id = t2.kind_id)
                                      Rows Removed by Join Filter: 3351
                                      ->  Nested Loop  (cost=667.21..4435.33 rows=100 width=69) (actual time=1.269..57.856 rows=3519 loops=1)
                                            ->  Nested Loop  (cost=666.78..3370.24 rows=238 width=44) (actual time=1.262..44.206 rows=7279 loops=1)
                                                  ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.017..0.020 rows=1 loops=1)
                                                        Filter: ((info)::text = 'rating'::text)
                                                        Rows Removed by Filter: 112
                                                  ->  Nested Loop  (cost=666.64..3353.74 rows=238 width=40) (actual time=1.243..43.231 rows=7279 loops=1)
                                                        ->  Nested Loop  (cost=666.22..3156.66 rows=442 width=25) (actual time=1.238..25.761 rows=9674 loops=1)
                                                              Join Filter: (ml.movie_id = mc1.movie_id)
                                                              ->  Nested Loop  (cost=665.79..3097.03 rows=91 width=17) (actual time=1.232..18.437 rows=2064 loops=1)
                                                                    Join Filter: (mi_idx1.info_type_id = it1.id)
                                                                    Rows Removed by Join Filter: 4128
                                                                    ->  Merge Join  (cost=665.79..2939.71 rows=10327 width=21) (actual time=1.205..16.795 rows=6192 loops=1)
                                                                          Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43815.71 rows=1380035 width=13) (actual time=0.005..9.654 rows=63901 loops=1)
                                                                          ->  Sort  (cost=665.32..673.65 rows=3333 width=8) (actual time=1.176..1.532 rows=6443 loops=1)
                                                                                Sort Key: ml.movie_id
                                                                                Sort Method: quicksort  Memory: 205kB
                                                                                ->  Nested Loop  (cost=38.82..470.30 rows=3333 width=8) (actual time=0.064..0.822 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.004..0.007 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.054..0.281 rows=1158 loops=2)
                                                                                            Recheck Cond: (link_type_id = lt.id)
                                                                                            Heap Blocks: exact=191
                                                                                            ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.042..0.042 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                    ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6192)
                                                                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.002..0.003 rows=5 loops=2064)
                                                                    Index Cond: (movie_id = mi_idx1.movie_id)
                                                        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=9674)
                                                              Index Cond: (id = mc1.company_id)
                                                              Filter: ((country_code)::text <> '[us]'::text)
                                                              Rows Removed by Filter: 0
                                            ->  Index Scan using title_pkey on title t2  (cost=0.43..4.48 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=7279)
                                                  Index Cond: (id = ml.linked_movie_id)
                                                  Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                  Rows Removed by Filter: 1
                                      ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=3519)
                                            ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=1)
                                                  Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                  Rows Removed by Filter: 5
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.002..0.002 rows=5 loops=2996)
                                      Index Cond: (movie_id = t2.id)
                          ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=15007)
                                Index Cond: (id = mc2.company_id)
                    ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=15007)
                          Index Cond: (id = mc1.movie_id)
              ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=15007)
                    ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=2 width=4) (actual time=0.002..0.004 rows=2 loops=1)
                          Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                          Rows Removed by Filter: 5
        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.51 rows=2 width=13) (actual time=0.001..0.002 rows=1 loops=15007)
              Index Cond: (movie_id = mc2.movie_id)
              Filter: (info < '3.5'::text)
              Rows Removed by Filter: 2
Planning time: 60.403 ms
Execution time: 156.956 ms
