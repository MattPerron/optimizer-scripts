Aggregate  (cost=5151.29..5151.30 rows=1 width=192) (actual time=28.367..28.367 rows=1 loops=1)
  ->  Nested Loop  (cost=671.65..5151.27 rows=1 width=82) (actual time=4.961..28.357 rows=4 loops=1)
        Join Filter: ((ml.linked_movie_id = t2.id) AND (kt2.id = t2.kind_id))
        ->  Nested Loop  (cost=671.22..5149.14 rows=4 width=81) (actual time=4.955..28.328 rows=10 loops=1)
              ->  Nested Loop  (cost=670.80..5147.37 rows=4 width=66) (actual time=4.951..28.287 rows=10 loops=1)
                    Join Filter: (ml.linked_movie_id = mc2.movie_id)
                    ->  Nested Loop  (cost=670.37..5145.90 rows=2 width=58) (actual time=4.946..28.260 rows=4 loops=1)
                          ->  Nested Loop  (cost=669.95..5056.27 rows=201 width=43) (actual time=4.939..28.043 rows=81 loops=1)
                                ->  Nested Loop  (cost=669.52..4999.68 rows=93 width=51) (actual time=4.932..27.901 rows=28 loops=1)
                                      Join Filter: (mi_idx2.info_type_id = it2.id)
                                      Rows Removed by Join Filter: 1581
                                      ->  Nested Loop  (cost=669.52..4990.30 rows=464 width=55) (actual time=1.276..27.422 rows=1609 loops=1)
                                            ->  Nested Loop  (cost=669.09..4339.16 rows=316 width=42) (actual time=1.267..23.312 rows=1220 loops=1)
                                                  ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..12.26 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                                                        Filter: ((kind)::text = 'tv series'::text)
                                                        Rows Removed by Filter: 6
                                                  ->  Nested Loop  (cost=668.96..4323.74 rows=316 width=38) (actual time=1.261..23.139 rows=1220 loops=1)
                                                        Join Filter: (t1.kind_id = kt1.id)
                                                        Rows Removed by Join Filter: 844
                                                        ->  Nested Loop  (cost=668.96..4294.24 rows=1894 width=42) (actual time=1.257..22.557 rows=2064 loops=1)
                                                              Join Filter: (ml.movie_id = t1.id)
                                                              ->  Nested Loop  (cost=668.53..3098.68 rows=2025 width=17) (actual time=1.250..18.427 rows=2064 loops=1)
                                                                    Join Filter: (mi_idx1.info_type_id = it1.id)
                                                                    Rows Removed by Join Filter: 4128
                                                                    ->  Merge Join  (cost=668.53..2944.40 rows=10124 width=21) (actual time=1.233..16.779 rows=6192 loops=1)
                                                                          Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43815.71 rows=1380035 width=13) (actual time=0.006..9.638 rows=63901 loops=1)
                                                                          ->  Sort  (cost=668.06..676.50 rows=3375 width=8) (actual time=1.202..1.545 rows=6443 loops=1)
                                                                                Sort Key: ml.movie_id
                                                                                Sort Method: quicksort  Memory: 205kB
                                                                                ->  Nested Loop  (cost=38.82..470.28 rows=3375 width=8) (actual time=0.064..0.834 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=4) (actual time=0.004..0.007 rows=2 loops=1)
                                                                                            Filter: ((link)::text ~~ '%follow%'::text)
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.054..0.286 rows=1158 loops=2)
                                                                                            Recheck Cond: (link_type_id = lt.id)
                                                                                            Heap Blocks: exact=191
                                                                                            ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.042..0.042 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                    ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6192)
                                                                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                              ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=2064)
                                                                    Index Cond: (id = mi_idx1.movie_id)
                                                        ->  Materialize  (cost=0.00..1.09 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=2064)
                                                              ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'tv series'::text)
                                                                    Rows Removed by Filter: 6
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=13) (actual time=0.002..0.003 rows=1 loops=1220)
                                                  Index Cond: (movie_id = ml.linked_movie_id)
                                                  Filter: (info < '3.0'::text)
                                                  Rows Removed by Filter: 1
                                      ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=1609)
                                            ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                  Filter: ((info)::text = 'rating'::text)
                                                  Rows Removed by Filter: 112
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.003..0.004 rows=3 loops=28)
                                      Index Cond: (movie_id = t1.id)
                          ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=81)
                                Index Cond: (id = mc1.company_id)
                                Filter: ((country_code)::text = '[nl]'::text)
                                Rows Removed by Filter: 1
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.67 rows=5 width=8) (actual time=0.004..0.006 rows=2 loops=4)
                          Index Cond: (movie_id = mi_idx2.movie_id)
              ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=10)
                    Index Cond: (id = mc2.company_id)
        ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=10)
              Index Cond: (id = mc2.movie_id)
              Filter: (production_year = 2007)
              Rows Removed by Filter: 1
Planning time: 62.500 ms
Execution time: 28.474 ms
