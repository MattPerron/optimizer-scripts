Aggregate  (cost=7471.49..7471.50 rows=1 width=96) (actual time=725.190..725.190 rows=1 loops=1)
  ->  Nested Loop  (cost=9.36..7471.48 rows=1 width=41) (actual time=3.167..722.220 rows=8373 loops=1)
        Join Filter: (it1.id = mi.info_type_id)
        Rows Removed by Join Filter: 1116
        ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.014 rows=1 loops=1)
              Filter: ((info)::text = 'countries'::text)
              Rows Removed by Filter: 112
        ->  Nested Loop  (cost=9.36..7469.05 rows=1 width=45) (actual time=3.158..720.890 rows=9489 loops=1)
              Join Filter: (t.id = mi.movie_id)
              ->  Nested Loop  (cost=8.92..7467.21 rows=1 width=61) (actual time=3.141..212.312 rows=8156 loops=1)
                    Join Filter: (it2.id = mi_idx.info_type_id)
                    Rows Removed by Join Filter: 16118
                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                          Filter: ((info)::text = 'rating'::text)
                          Rows Removed by Filter: 112
                    ->  Nested Loop  (cost=8.92..7464.79 rows=1 width=65) (actual time=3.130..209.886 rows=24274 loops=1)
                          Join Filter: (t.id = mi_idx.movie_id)
                          ->  Nested Loop  (cost=8.50..7464.25 rows=1 width=52) (actual time=3.122..186.314 rows=8286 loops=1)
                                Join Filter: (ct.id = mc.company_type_id)
                                ->  Nested Loop  (cost=8.50..7463.16 rows=1 width=56) (actual time=3.118..176.346 rows=8286 loops=1)
                                      ->  Nested Loop  (cost=8.08..7462.67 rows=1 width=41) (actual time=3.111..155.290 rows=8705 loops=1)
                                            Join Filter: (t.id = mc.movie_id)
                                            ->  Nested Loop  (cost=7.65..7462.09 rows=1 width=29) (actual time=3.102..143.103 rows=922 loops=1)
                                                  Join Filter: (t.kind_id = kt.id)
                                                  Rows Removed by Join Filter: 440
                                                  ->  Nested Loop  (cost=7.65..7460.89 rows=4 width=33) (actual time=3.093..142.718 rows=1041 loops=1)
                                                        ->  Nested Loop  (cost=7.22..7456.48 rows=9 width=8) (actual time=2.995..121.399 rows=6704 loops=1)
                                                              Join Filter: (cct1.id = cc.subject_id)
                                                              Rows Removed by Join Filter: 3832
                                                              ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'cast'::text)
                                                                    Rows Removed by Filter: 3
                                                              ->  Nested Loop  (cost=7.22..7455.20 rows=19 width=12) (actual time=2.992..120.234 rows=10536 loops=1)
                                                                    Join Filter: (cct2.id = cc.status_id)
                                                                    Rows Removed by Join Filter: 9488
                                                                    ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.003 rows=1 loops=1)
                                                                          Filter: ((kind)::text = 'complete'::text)
                                                                          Rows Removed by Filter: 3
                                                                    ->  Nested Loop  (cost=7.22..7453.68 rows=37 width=16) (actual time=2.986..118.240 rows=20024 loops=1)
                                                                          ->  Nested Loop  (cost=6.80..7389.43 rows=135 width=4) (actual time=2.844..60.444 rows=37091 loops=1)
                                                                                ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.832..17.772 rows=3 loops=1)
                                                                                      Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                      Rows Removed by Filter: 134167
                                                                                ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.80..1103.92 rows=305 width=8) (actual time=2.242..12.941 rows=12364 loops=3)
                                                                                      Recheck Cond: (keyword_id = k.id)
                                                                                      Heap Blocks: exact=26312
                                                                                      ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.72 rows=305 width=0) (actual time=1.140..1.140 rows=12364 loops=3)
                                                                                            Index Cond: (keyword_id = k.id)
                                                                          ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.001..0.001 rows=1 loops=37091)
                                                                                Index Cond: (movie_id = mk.movie_id)
                                                        ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=6704)
                                                              Index Cond: (id = mk.movie_id)
                                                              Filter: (production_year > 2005)
                                                              Rows Removed by Filter: 1
                                                  ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=1041)
                                                        ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.005..0.007 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                              Rows Removed by Filter: 5
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.006..0.012 rows=9 loops=922)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                                  Rows Removed by Filter: 11
                                      ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=8705)
                                            Index Cond: (id = mc.company_id)
                                            Filter: ((country_code)::text <> '[us]'::text)
                                            Rows Removed by Filter: 0
                                ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=8286)
                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.002..0.002 rows=3 loops=8286)
                                Index Cond: (movie_id = mk.movie_id)
                                Filter: (info < '8.5'::text)
                                Rows Removed by Filter: 0
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.81 rows=2 width=8) (actual time=0.052..0.062 rows=1 loops=8156)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                    Rows Removed by Filter: 206
Planning time: 60.531 ms
Execution time: 725.292 ms
