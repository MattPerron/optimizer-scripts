Aggregate  (cost=3986.72..3986.73 rows=1 width=96) (actual time=459.827..459.827 rows=1 loops=1)
  ->  Nested Loop  (cost=11.21..3986.71 rows=1 width=48) (actual time=2.527..454.884 rows=16308 loops=1)
        Join Filter: (it.id = mi.info_type_id)
        ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.014 rows=1 loops=1)
              Filter: ((info)::text = 'release dates'::text)
              Rows Removed by Filter: 112
        ->  Nested Loop  (cost=11.21..3984.29 rows=1 width=52) (actual time=2.518..452.654 rows=16308 loops=1)
              Join Filter: (t.id = mi.movie_id)
              ->  Nested Loop  (cost=10.78..3943.19 rows=1 width=68) (actual time=2.498..73.795 rows=5706 loops=1)
                    ->  Nested Loop  (cost=10.36..3941.16 rows=1 width=72) (actual time=2.473..27.734 rows=26268 loops=1)
                          Join Filter: (t.id = mc.movie_id)
                          ->  Nested Loop  (cost=9.93..3936.32 rows=1 width=64) (actual time=2.465..17.203 rows=1010 loops=1)
                                Join Filter: (n.id = an.person_id)
                                ->  Nested Loop  (cost=9.50..3933.42 rows=1 width=76) (actual time=2.456..16.295 rows=240 loops=1)
                                      Join Filter: (it3.id = pi.info_type_id)
                                      Rows Removed by Join Filter: 730
                                      ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.010 rows=1 loops=1)
                                            Filter: ((info)::text = 'trivia'::text)
                                            Rows Removed by Filter: 112
                                      ->  Nested Loop  (cost=9.50..3931.00 rows=1 width=80) (actual time=2.419..16.190 rows=970 loops=1)
                                            Join Filter: (n.id = pi.person_id)
                                            ->  Nested Loop  (cost=9.07..3911.39 rows=1 width=72) (actual time=2.408..15.812 rows=3 loops=1)
                                                  ->  Nested Loop  (cost=8.64..3909.05 rows=1 width=53) (actual time=0.590..15.374 rows=94 loops=1)
                                                        ->  Nested Loop  (cost=8.21..3906.81 rows=1 width=41) (actual time=0.582..14.898 rows=131 loops=1)
                                                              Join Filter: (rt.id = ci.role_id)
                                                              Rows Removed by Join Filter: 410
                                                              ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.003..0.005 rows=1 loops=1)
                                                                    Filter: ((role)::text = 'actress'::text)
                                                                    Rows Removed by Filter: 11
                                                              ->  Nested Loop  (cost=8.21..3905.65 rows=1 width=45) (actual time=0.532..14.850 rows=541 loops=1)
                                                                    Join Filter: (t.id = ci.movie_id)
                                                                    ->  Nested Loop  (cost=7.65..3855.55 rows=1 width=29) (actual time=0.512..11.726 rows=18 loops=1)
                                                                          ->  Nested Loop  (cost=7.22..3851.28 rows=2 width=8) (actual time=0.382..11.601 rows=23 loops=1)
                                                                                Join Filter: (cct1.id = cc.subject_id)
                                                                                Rows Removed by Join Filter: 2
                                                                                ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.004 rows=1 loops=1)
                                                                                      Filter: ((kind)::text = 'cast'::text)
                                                                                      Rows Removed by Filter: 3
                                                                                ->  Nested Loop  (cost=7.22..3850.17 rows=5 width=12) (actual time=0.379..11.591 rows=25 loops=1)
                                                                                      Join Filter: (cct2.id = cc.status_id)
                                                                                      Rows Removed by Join Filter: 65
                                                                                      ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                                                            Filter: ((kind)::text = 'complete+verified'::text)
                                                                                            Rows Removed by Filter: 3
                                                                                      ->  Nested Loop  (cost=7.22..3849.00 rows=9 width=16) (actual time=0.189..11.579 rows=90 loops=1)
                                                                                            ->  Nested Loop  (cost=6.80..3754.10 rows=34 width=4) (actual time=0.115..10.665 rows=414 loops=1)
                                                                                                  ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.032..10.031 rows=1 loops=1)
                                                                                                        Filter: (keyword = 'computer-animation'::text)
                                                                                                        Rows Removed by Filter: 134169
                                                                                                  ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.80..1124.92 rows=305 width=8) (actual time=0.081..0.587 rows=414 loops=1)
                                                                                                        Recheck Cond: (keyword_id = k.id)
                                                                                                        Heap Blocks: exact=358
                                                                                                        ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.72 rows=305 width=0) (actual time=0.044..0.044 rows=414 loops=1)
                                                                                                              Index Cond: (keyword_id = k.id)
                                                                                            ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=414)
                                                                                                  Index Cond: (movie_id = mk.movie_id)
                                                                          ->  Index Scan using title_pkey on title t  (cost=0.43..2.14 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=23)
                                                                                Index Cond: (id = mk.movie_id)
                                                                                Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                                Rows Removed by Filter: 0
                                                                    ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..50.08 rows=1 width=16) (actual time=0.022..0.169 rows=30 loops=18)
                                                                          Index Cond: (movie_id = mk.movie_id)
                                                                          Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                          Rows Removed by Filter: 124
                                                        ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.24 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=131)
                                                              Index Cond: (id = ci.person_role_id)
                                                  ->  Index Scan using name_pkey on name n  (cost=0.43..2.34 rows=1 width=19) (actual time=0.004..0.004 rows=0 loops=94)
                                                        Index Cond: (id = ci.person_id)
                                                        Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                        Rows Removed by Filter: 1
                                            ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.30 rows=25 width=8) (actual time=0.008..0.069 rows=323 loops=3)
                                                  Index Cond: (person_id = ci.person_id)
                                ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.87 rows=2 width=4) (actual time=0.002..0.003 rows=4 loops=240)
                                      Index Cond: (person_id = pi.person_id)
                                      Heap Fetches: 1010
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.78 rows=5 width=8) (actual time=0.002..0.006 rows=26 loops=1010)
                                Index Cond: (movie_id = mk.movie_id)
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=26268)
                          Index Cond: (id = mc.company_id)
                          Filter: ((country_code)::text = '[us]'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..41.09 rows=1 width=8) (actual time=0.009..0.066 rows=3 loops=5706)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%200%'::text) OR (info ~~ 'USA:%200%'::text)))
                    Rows Removed by Filter: 302
Planning time: 80.987 ms
Execution time: 459.950 ms
