Aggregate  (cost=4337.45..4337.46 rows=1 width=96) (actual time=56.676..56.676 rows=1 loops=1)
  ->  Nested Loop  (cost=11.21..4337.45 rows=1 width=48) (actual time=29.312..56.269 rows=1620 loops=1)
        Join Filter: (it3.id = pi.info_type_id)
        Rows Removed by Join Filter: 3270
        ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.017 rows=1 loops=1)
              Filter: ((info)::text = 'trivia'::text)
              Rows Removed by Filter: 112
        ->  Nested Loop  (cost=11.21..4335.02 rows=1 width=52) (actual time=29.294..55.865 rows=4890 loops=1)
              Join Filter: (n.id = pi.person_id)
              ->  Nested Loop  (cost=10.78..4315.42 rows=1 width=60) (actual time=29.286..54.271 rows=30 loops=1)
                    ->  Nested Loop  (cost=10.35..4313.07 rows=1 width=41) (actual time=29.278..54.205 rows=30 loops=1)
                          Join Filter: (mi.movie_id = t.id)
                          ->  Nested Loop  (cost=9.92..4310.92 rows=1 width=44) (actual time=29.269..54.133 rows=30 loops=1)
                                Join Filter: (it.id = mi.info_type_id)
                                ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.004..0.011 rows=1 loops=1)
                                      Filter: ((info)::text = 'release dates'::text)
                                      Rows Removed by Filter: 112
                                ->  Nested Loop  (cost=9.92..4308.49 rows=1 width=48) (actual time=29.264..54.116 rows=30 loops=1)
                                      Join Filter: (mc.movie_id = mi.movie_id)
                                      ->  Nested Loop  (cost=9.49..4267.40 rows=1 width=40) (actual time=1.463..48.807 rows=70 loops=1)
                                            ->  Nested Loop  (cost=9.06..4263.32 rows=1 width=28) (actual time=1.413..44.663 rows=2632 loops=1)
                                                  Join Filter: (rt.id = ci.role_id)
                                                  Rows Removed by Join Filter: 6373
                                                  ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.003..0.006 rows=1 loops=1)
                                                        Filter: ((role)::text = 'actress'::text)
                                                        Rows Removed by Filter: 11
                                                  ->  Nested Loop  (cost=9.06..4262.16 rows=1 width=32) (actual time=1.154..43.864 rows=9005 loops=1)
                                                        ->  Nested Loop  (cost=8.63..4259.25 rows=1 width=28) (actual time=1.145..32.637 rows=4128 loops=1)
                                                              Join Filter: (mc.movie_id = ci.movie_id)
                                                              ->  Nested Loop  (cost=8.07..4159.16 rows=2 width=12) (actual time=1.129..20.655 rows=129 loops=1)
                                                                    ->  Nested Loop  (cost=7.65..4147.00 rows=6 width=16) (actual time=1.122..19.141 rows=540 loops=1)
                                                                          Join Filter: (cct2.id = cc.status_id)
                                                                          Rows Removed by Join Filter: 1001
                                                                          ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                                                Filter: ((kind)::text = 'complete+verified'::text)
                                                                                Rows Removed by Filter: 3
                                                                          ->  Nested Loop  (cost=7.65..4145.81 rows=11 width=20) (actual time=0.370..18.995 rows=1541 loops=1)
                                                                                Join Filter: (cct1.id = cc.subject_id)
                                                                                Rows Removed by Join Filter: 227
                                                                                ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.003 rows=1 loops=1)
                                                                                      Filter: ((kind)::text = 'cast'::text)
                                                                                      Rows Removed by Filter: 3
                                                                                ->  Nested Loop  (cost=7.65..4144.49 rows=22 width=24) (actual time=0.368..18.765 rows=1768 loops=1)
                                                                                      ->  Nested Loop  (cost=7.23..3918.36 rows=81 width=12) (actual time=0.124..13.686 rows=3218 loops=1)
                                                                                            ->  Nested Loop  (cost=6.80..3754.10 rows=34 width=4) (actual time=0.117..10.944 rows=414 loops=1)
                                                                                                  ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.034..10.291 rows=1 loops=1)
                                                                                                        Filter: (keyword = 'computer-animation'::text)
                                                                                                        Rows Removed by Filter: 134169
                                                                                                  ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.80..1124.92 rows=305 width=8) (actual time=0.082..0.596 rows=414 loops=1)
                                                                                                        Recheck Cond: (keyword_id = k.id)
                                                                                                        Heap Blocks: exact=358
                                                                                                        ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.72 rows=305 width=0) (actual time=0.044..0.044 rows=414 loops=1)
                                                                                                              Index Cond: (keyword_id = k.id)
                                                                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.78 rows=5 width=8) (actual time=0.003..0.005 rows=8 loops=414)
                                                                                                  Index Cond: (movie_id = mk.movie_id)
                                                                                      ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.001..0.001 rows=1 loops=3218)
                                                                                            Index Cond: (movie_id = mc.movie_id)
                                                                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=540)
                                                                          Index Cond: (id = mc.company_id)
                                                                          Filter: ((country_code)::text = '[us]'::text)
                                                                          Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..50.03 rows=1 width=16) (actual time=0.010..0.088 rows=32 loops=129)
                                                                    Index Cond: (movie_id = mk.movie_id)
                                                                    Filter: (note = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                    Rows Removed by Filter: 121
                                                        ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.90 rows=2 width=4) (actual time=0.002..0.002 rows=2 loops=4128)
                                                              Index Cond: (person_id = ci.person_id)
                                                              Heap Fetches: 9005
                                            ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.25 rows=1 width=20) (actual time=0.001..0.001 rows=0 loops=2632)
                                                  Index Cond: (id = ci.person_role_id)
                                                  Filter: (name = 'Queen'::text)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..41.09 rows=1 width=8) (actual time=0.056..0.076 rows=0 loops=70)
                                            Index Cond: (movie_id = mk.movie_id)
                                            Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%200%'::text) OR (info ~~ 'USA:%200%'::text)))
                                            Rows Removed by Filter: 334
                          ->  Index Scan using title_pkey on title t  (cost=0.43..2.14 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=30)
                                Index Cond: (id = mk.movie_id)
                                Filter: ((production_year >= 2000) AND (production_year <= 2010) AND (title = 'Shrek 2'::text))
                    ->  Index Scan using name_pkey on name n  (cost=0.43..2.34 rows=1 width=19) (actual time=0.002..0.002 rows=1 loops=30)
                          Index Cond: (id = ci.person_id)
                          Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
              ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.29 rows=25 width=8) (actual time=0.002..0.027 rows=163 loops=30)
                    Index Cond: (person_id = an.person_id)
Planning time: 81.073 ms
Execution time: 56.808 ms
