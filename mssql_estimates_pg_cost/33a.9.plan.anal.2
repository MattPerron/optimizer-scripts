Aggregate  (cost=13517.99..13518.00 rows=1 width=192) (actual time=24.368..24.368 rows=1 loops=1)
  ->  Nested Loop  (cost=696.37..13517.90 rows=6 width=82) (actual time=4.245..24.357 rows=8 loops=1)
        ->  Nested Loop  (cost=695.95..13510.32 rows=17 width=67) (actual time=4.237..24.285 rows=28 loops=1)
              ->  Nested Loop  (cost=695.52..13500.59 rows=16 width=75) (actual time=4.221..24.232 rows=10 loops=1)
                    Join Filter: ((ml.movie_id = t1.id) AND (kt1.id = t1.kind_id))
                    ->  Nested Loop  (cost=695.09..13434.78 rows=111 width=58) (actual time=4.216..24.203 rows=10 loops=1)
                          ->  Nested Loop  (cost=694.67..13385.56 rows=111 width=43) (actual time=4.211..24.167 rows=10 loops=1)
                                Join Filter: (t2.id = mc2.movie_id)
                                ->  Nested Loop  (cost=694.24..13306.35 rows=108 width=51) (actual time=4.205..24.136 rows=5 loops=1)
                                      Join Filter: (it2.id = mi_idx2.info_type_id)
                                      Rows Removed by Join Filter: 90
                                      ->  Nested Loop  (cost=693.81..13266.49 rows=66 width=46) (actual time=1.466..23.879 rows=71 loops=1)
                                            ->  Nested Loop  (cost=693.81..13264.58 rows=66 width=42) (actual time=1.464..23.849 rows=71 loops=1)
                                                  Join Filter: (t2.kind_id = kt2.id)
                                                  Rows Removed by Join Filter: 139
                                                  ->  Nested Loop  (cost=693.81..13257.50 rows=399 width=46) (actual time=1.219..23.786 rows=210 loops=1)
                                                        ->  Nested Loop  (cost=693.38..3188.37 rows=2250 width=21) (actual time=1.213..18.960 rows=2064 loops=1)
                                                              ->  Nested Loop  (cost=693.38..3157.83 rows=2250 width=17) (actual time=1.204..18.295 rows=2064 loops=1)
                                                                    Join Filter: (it1.id = mi_idx1.info_type_id)
                                                                    Rows Removed by Join Filter: 4128
                                                                    ->  Merge Join  (cost=693.38..2986.68 rows=11249 width=21) (actual time=1.187..16.677 rows=6192 loops=1)
                                                                          Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43815.71 rows=1380035 width=13) (actual time=0.007..9.529 rows=63901 loops=1)
                                                                          ->  Sort  (cost=692.91..702.29 rows=3750 width=8) (actual time=1.155..1.498 rows=6443 loops=1)
                                                                                Sort Key: ml.movie_id
                                                                                Sort Method: quicksort  Memory: 205kB
                                                                                ->  Nested Loop  (cost=38.82..470.30 rows=3750 width=8) (actual time=0.063..0.810 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.004..0.007 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.053..0.272 rows=1158 loops=2)
                                                                                            Recheck Cond: (link_type_id = lt.id)
                                                                                            Heap Blocks: exact=191
                                                                                            ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.042..0.042 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                    ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6192)
                                                                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                              ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=2064)
                                                                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                        ->  Index Scan using title_pkey on title t2  (cost=0.43..4.48 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2064)
                                                              Index Cond: (id = ml.linked_movie_id)
                                                              Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                                              Rows Removed by Filter: 1
                                                  ->  Materialize  (cost=0.00..1.09 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=210)
                                                        ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'tv series'::text)
                                                              Rows Removed by Filter: 6
                                            ->  Materialize  (cost=0.00..1.09 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=71)
                                                  ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                        Filter: ((kind)::text = 'tv series'::text)
                                                        Rows Removed by Filter: 6
                                      ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.59 rows=1 width=13) (actual time=0.003..0.003 rows=1 loops=71)
                                            Index Cond: (movie_id = t2.id)
                                            Filter: (info < '3.0'::text)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.67 rows=5 width=8) (actual time=0.004..0.005 rows=2 loops=5)
                                      Index Cond: (movie_id = mi_idx2.movie_id)
                          ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=10)
                                Index Cond: (id = mc2.company_id)
                    ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=10)
                          Index Cond: (id = mi_idx1.movie_id)
              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.003..0.005 rows=3 loops=10)
                    Index Cond: (movie_id = t1.id)
        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=28)
              Index Cond: (id = mc1.company_id)
              Filter: ((country_code)::text = '[us]'::text)
              Rows Removed by Filter: 1
Planning time: 61.646 ms
Execution time: 24.463 ms
