Aggregate  (cost=2670.10..2670.11 rows=1 width=192) (actual time=49.809..49.809 rows=1 loops=1)
  ->  Nested Loop  (cost=338.09..2670.09 rows=1 width=82) (actual time=9.864..49.799 rows=4 loops=1)
        Join Filter: ((ml.linked_movie_id = t2.id) AND (kt2.id = t2.kind_id))
        ->  Nested Loop  (cost=337.66..2669.55 rows=1 width=81) (actual time=9.857..49.767 rows=10 loops=1)
              ->  Nested Loop  (cost=337.52..2668.39 rows=7 width=85) (actual time=1.285..46.805 rows=3049 loops=1)
                    Join Filter: (ml.linked_movie_id = mi_idx2.movie_id)
                    ->  Nested Loop  (cost=337.09..2665.80 rows=5 width=72) (actual time=1.276..41.912 rows=1973 loops=1)
                          ->  Nested Loop  (cost=336.67..2663.59 rows=5 width=57) (actual time=1.274..38.182 rows=1973 loops=1)
                                ->  Nested Loop  (cost=336.24..2659.62 rows=1 width=49) (actual time=1.267..36.618 rows=393 loops=1)
                                      ->  Nested Loop  (cost=335.82..2656.50 rows=7 width=34) (actual time=1.247..26.800 rows=5590 loops=1)
                                            ->  Nested Loop  (cost=335.39..2652.24 rows=7 width=42) (actual time=1.243..22.562 rows=1220 loops=1)
                                                  Join Filter: (kt1.id = t1.kind_id)
                                                  Rows Removed by Join Filter: 844
                                                  ->  Nested Loop  (cost=0.13..13.35 rows=1 width=8) (actual time=0.008..0.012 rows=1 loops=1)
                                                        ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..12.26 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'tv series'::text)
                                                              Rows Removed by Filter: 6
                                                        ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'tv series'::text)
                                                              Rows Removed by Filter: 6
                                                  ->  Nested Loop  (cost=335.26..2638.31 rows=46 width=42) (actual time=1.234..22.293 rows=2064 loops=1)
                                                        Join Filter: (ml.movie_id = t1.id)
                                                        ->  Nested Loop  (cost=334.83..2611.15 rows=46 width=17) (actual time=1.227..18.253 rows=2064 loops=1)
                                                              Join Filter: (mi_idx1.info_type_id = it1.id)
                                                              Rows Removed by Join Filter: 4128
                                                              ->  Merge Join  (cost=334.83..2531.31 rows=5162 width=21) (actual time=1.211..16.658 rows=6192 loops=1)
                                                                    Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43815.71 rows=1380035 width=13) (actual time=0.006..9.589 rows=63901 loops=1)
                                                                    ->  Sort  (cost=334.38..338.55 rows=1666 width=8) (actual time=1.180..1.536 rows=6443 loops=1)
                                                                          Sort Key: ml.movie_id
                                                                          Sort Method: quicksort  Memory: 205kB
                                                                          ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=8) (actual time=0.063..0.824 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.003..0.006 rows=2 loops=1)
                                                                                      Filter: ((link)::text ~~ '%follow%'::text)
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=12) (actual time=0.054..0.282 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.042..0.042 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                              ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6192)
                                                                    ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                        ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=2064)
                                                              Index Cond: (id = mi_idx1.movie_id)
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=5 loops=1220)
                                                  Index Cond: (movie_id = t1.id)
                                      ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=5590)
                                            Index Cond: (id = mc1.company_id)
                                            Filter: ((country_code)::text = '[nl]'::text)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..3.92 rows=5 width=8) (actual time=0.002..0.003 rows=5 loops=393)
                                      Index Cond: (movie_id = ml.linked_movie_id)
                          ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=1973)
                                Index Cond: (id = mc2.company_id)
                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.51 rows=1 width=13) (actual time=0.002..0.002 rows=2 loops=1973)
                          Index Cond: (movie_id = mc2.movie_id)
                          Filter: (info < '3.0'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=3049)
                    Index Cond: (id = mi_idx2.info_type_id)
                    Filter: ((info)::text = 'rating'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=10)
              Index Cond: (id = mc2.movie_id)
              Filter: (production_year = 2007)
              Rows Removed by Filter: 1
Planning time: 62.580 ms
Execution time: 49.914 ms
