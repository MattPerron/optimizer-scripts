Aggregate  (cost=62782.24..62782.25 rows=1 width=64) (actual time=290.547..290.547 rows=1 loops=1)
  ->  Nested Loop  (cost=11756.17..62782.23 rows=1 width=27) (actual time=229.183..290.371 rows=618 loops=1)
        ->  Nested Loop  (cost=11755.75..62781.79 rows=1 width=31) (actual time=229.173..288.949 rows=618 loops=1)
              ->  Nested Loop  (cost=11755.62..62781.64 rows=1 width=35) (actual time=229.167..288.297 rows=618 loops=1)
                    ->  Nested Loop  (cost=11755.20..62781.19 rows=1 width=39) (actual time=229.157..287.243 rows=618 loops=1)
                          Join Filter: (t.id = mc.movie_id)
                          ->  Nested Loop  (cost=11754.77..62780.59 rows=1 width=47) (actual time=229.148..286.048 rows=615 loops=1)
                                ->  Nested Loop  (cost=11754.34..62778.76 rows=1 width=39) (actual time=229.136..285.813 rows=5 loops=1)
                                      ->  Nested Loop  (cost=11754.20..62778.15 rows=3 width=43) (actual time=229.128..285.795 rows=5 loops=1)
                                            ->  Hash Join  (cost=11753.76..57404.87 rows=2648 width=35) (actual time=51.138..224.341 rows=1033 loops=1)
                                                  Hash Cond: (t.id = cc.movie_id)
                                                  ->  Nested Loop  (cost=7842.95..52476.35 rows=198248 width=31) (actual time=23.011..164.600 rows=274015 loops=1)
                                                        ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=14) (actual time=0.005..0.008 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'movie'::text)
                                                              Rows Removed by Filter: 6
                                                        ->  Bitmap Heap Scan on title t  (cost=7842.95..50162.36 rows=231290 width=25) (actual time=23.003..138.238 rows=274015 loops=1)
                                                              Recheck Cond: (kind_id = kt.id)
                                                              Filter: (production_year > 2000)
                                                              Rows Removed by Filter: 388810
                                                              Heap Blocks: exact=12863
                                                              ->  Bitmap Index Scan on kind_id_title  (cost=0.00..7785.13 rows=421427 width=0) (actual time=21.457..21.457 rows=662825 loops=1)
                                                                    Index Cond: (kind_id = kt.id)
                                                  ->  Hash  (cost=3488.66..3488.66 rows=33772 width=4) (actual time=27.658..27.658 rows=24592 loops=1)
                                                        Buckets: 65536  Batches: 1  Memory Usage: 1377kB
                                                        ->  Hash Join  (cost=1.06..3488.66 rows=33772 width=4) (actual time=0.016..24.200 rows=24592 loops=1)
                                                              Hash Cond: (cc.status_id = cct1.id)
                                                              ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=8) (actual time=0.007..10.462 rows=135086 loops=1)
                                                              ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                                          Filter: ((kind)::text = 'complete+verified'::text)
                                                                          Rows Removed by Filter: 3
                                            ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.02 rows=1 width=8) (actual time=0.059..0.059 rows=0 loops=1033)
                                                  Index Cond: (movie_id = t.id)
                                                  Filter: ((info IS NOT NULL) AND (note ~~ '%internet%'::text) AND ((info ~~ 'USA:% 199%'::text) OR (info ~~ 'USA:% 200%'::text)))
                                                  Rows Removed by Filter: 211
                                      ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.19 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=5)
                                            Index Cond: (id = mi.info_type_id)
                                            Filter: ((info)::text = 'release dates'::text)
                                ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.005..0.025 rows=123 loops=5)
                                      Index Cond: (movie_id = t.id)
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.001..0.002 rows=1 loops=615)
                                Index Cond: (movie_id = mk.movie_id)
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=618)
                          Index Cond: (id = mc.company_id)
                          Filter: ((country_code)::text = '[us]'::text)
              ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=618)
                    Index Cond: (id = mc.company_type_id)
                    Heap Fetches: 618
        ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=618)
              Index Cond: (id = mk.keyword_id)
              Heap Fetches: 618
Planning time: 19.527 ms
Execution time: 290.645 ms
