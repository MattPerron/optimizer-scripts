Aggregate  (cost=3191.94..3191.95 rows=1 width=96) (actual time=51.082..51.082 rows=1 loops=1)
  ->  Nested Loop  (cost=4.79..3191.92 rows=3 width=48) (actual time=8.539..50.853 rows=743 loops=1)
        Join Filter: (ml.movie_id = mi.movie_id)
        ->  Nested Loop  (cost=4.36..3190.12 rows=1 width=68) (actual time=8.518..49.142 rows=172 loops=1)
              Join Filter: (ml.movie_id = t.id)
              ->  Nested Loop  (cost=3.93..3189.61 rows=1 width=47) (actual time=8.513..48.834 rows=172 loops=1)
                    ->  Nested Loop  (cost=3.51..2749.64 rows=997 width=51) (actual time=1.412..43.717 rows=3296 loops=1)
                          Join Filter: (ml.movie_id = mk.movie_id)
                          ->  Nested Loop  (cost=3.07..2708.52 rows=21 width=43) (actual time=1.407..42.340 rows=277 loops=1)
                                ->  Nested Loop  (cost=2.65..2664.18 rows=97 width=28) (actual time=1.384..40.827 rows=763 loops=1)
                                      Join Filter: (ct.id = mc.company_type_id)
                                      Rows Removed by Join Filter: 101
                                      ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                            Filter: ((kind)::text = 'production companies'::text)
                                            Rows Removed by Filter: 3
                                      ->  Nested Loop  (cost=2.65..2658.27 rows=389 width=32) (actual time=1.379..40.699 rows=864 loops=1)
                                            Join Filter: (ml.movie_id = mc.movie_id)
                                            ->  Nested Loop  (cost=2.22..2443.30 rows=164 width=20) (actual time=1.371..39.673 rows=228 loops=1)
                                                  Join Filter: (cc.subject_id = cct1.id)
                                                  Rows Removed by Join Filter: 29
                                                  ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                        Filter: ((kind)::text = 'cast'::text)
                                                        Rows Removed by Filter: 3
                                                  ->  Nested Loop  (cost=2.22..2434.07 rows=654 width=24) (actual time=1.369..39.633 rows=257 loops=1)
                                                        Join Filter: (cc.status_id = cct2.id)
                                                        Rows Removed by Join Filter: 257
                                                        ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=2 loops=1)
                                                              Filter: ((kind)::text ~~ 'complete%'::text)
                                                              Rows Removed by Filter: 2
                                                        ->  Nested Loop  (cost=2.22..2400.30 rows=2618 width=28) (actual time=1.366..19.785 rows=257 loops=2)
                                                              Join Filter: (ml.link_type_id = lt.id)
                                                              Rows Removed by Join Filter: 9441
                                                              ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=16) (actual time=0.001..0.005 rows=2 loops=2)
                                                                    Filter: ((link)::text ~~ '%follow%'::text)
                                                                    Rows Removed by Filter: 16
                                                              ->  Merge Join  (cost=2.22..1810.06 rows=47121 width=20) (actual time=0.022..9.582 rows=4849 loops=4)
                                                                    Merge Cond: (ml.movie_id = cc.movie_id)
                                                                    ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.004..3.960 rows=29997 loops=4)
                                                                    ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6333.11 rows=135086 width=12) (actual time=0.004..2.311 rows=9987 loops=4)
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=2 width=12) (actual time=0.003..0.004 rows=4 loops=228)
                                                  Index Cond: (movie_id = cc.movie_id)
                                                  Filter: (note IS NULL)
                                                  Rows Removed by Filter: 3
                                ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=763)
                                      Index Cond: (id = mc.company_id)
                                      Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                                      Rows Removed by Filter: 1
                          ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.37 rows=47 width=8) (actual time=0.002..0.003 rows=12 loops=277)
                                Index Cond: (movie_id = mc.movie_id)
                    ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=3296)
                          Index Cond: (id = mk.keyword_id)
                          Filter: (keyword = 'sequel'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=172)
                    Index Cond: (id = mk.movie_id)
                    Filter: ((production_year >= 1950) AND (production_year <= 2010))
        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.76 rows=3 width=4) (actual time=0.007..0.009 rows=4 loops=172)
              Index Cond: (movie_id = mk.movie_id)
              Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
              Rows Removed by Filter: 15
Planning time: 48.543 ms
Execution time: 51.159 ms
