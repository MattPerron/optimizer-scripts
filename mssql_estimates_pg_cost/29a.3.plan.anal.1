Aggregate  (cost=3965.26..3965.27 rows=1 width=96) (actual time=23.652..23.652 rows=1 loops=1)
  ->  Nested Loop  (cost=11.21..3965.25 rows=1 width=48) (actual time=1.803..23.268 rows=1620 loops=1)
        Join Filter: (it3.id = pi.info_type_id)
        Rows Removed by Join Filter: 3270
        ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.015 rows=1 loops=1)
              Filter: ((info)::text = 'trivia'::text)
              Rows Removed by Filter: 112
        ->  Nested Loop  (cost=11.21..3962.83 rows=1 width=52) (actual time=1.787..22.868 rows=4890 loops=1)
              Join Filter: (n.id = pi.person_id)
              ->  Nested Loop  (cost=10.78..3943.22 rows=1 width=60) (actual time=1.780..21.304 rows=30 loops=1)
                    Join Filter: (cct1.id = cc.subject_id)
                    ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                          Filter: ((kind)::text = 'cast'::text)
                          Rows Removed by Filter: 3
                    ->  Nested Loop  (cost=10.78..3942.16 rows=1 width=64) (actual time=1.777..21.295 rows=30 loops=1)
                          Join Filter: (cct2.id = cc.status_id)
                          ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                Filter: ((kind)::text = 'complete+verified'::text)
                                Rows Removed by Filter: 3
                          ->  Nested Loop  (cost=10.78..3941.09 rows=1 width=68) (actual time=1.774..21.285 rows=30 loops=1)
                                Join Filter: (t.id = cc.movie_id)
                                ->  Nested Loop  (cost=10.36..3938.30 rows=1 width=80) (actual time=1.767..21.216 rows=30 loops=1)
                                      ->  Nested Loop  (cost=9.94..3936.27 rows=1 width=84) (actual time=1.761..20.936 rows=132 loops=1)
                                            Join Filter: (n.id = an.person_id)
                                            ->  Nested Loop  (cost=9.52..3933.35 rows=1 width=80) (actual time=1.751..20.778 rows=44 loops=1)
                                                  ->  Nested Loop  (cost=9.09..3931.01 rows=1 width=61) (actual time=1.744..20.673 rows=44 loops=1)
                                                        ->  Nested Loop  (cost=8.66..3926.94 rows=1 width=49) (actual time=1.736..19.680 rows=484 loops=1)
                                                              Join Filter: (rt.id = ci.role_id)
                                                              Rows Removed by Join Filter: 1188
                                                              ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.003..0.005 rows=1 loops=1)
                                                                    Filter: ((role)::text = 'actress'::text)
                                                                    Rows Removed by Filter: 11
                                                              ->  Nested Loop  (cost=8.66..3925.77 rows=1 width=53) (actual time=1.704..19.524 rows=1672 loops=1)
                                                                    Join Filter: (t.id = ci.movie_id)
                                                                    ->  Nested Loop  (cost=8.09..3875.73 rows=1 width=37) (actual time=1.694..14.616 rows=44 loops=1)
                                                                          Join Filter: (it.id = mi.info_type_id)
                                                                          ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.010 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'release dates'::text)
                                                                                Rows Removed by Filter: 112
                                                                          ->  Nested Loop  (cost=8.09..3873.30 rows=1 width=41) (actual time=1.690..14.597 rows=44 loops=1)
                                                                                Join Filter: (t.id = mi.movie_id)
                                                                                ->  Nested Loop  (cost=7.66..3832.21 rows=1 width=33) (actual time=1.667..12.349 rows=22 loops=1)
                                                                                      Join Filter: (t.id = mc.movie_id)
                                                                                      ->  Nested Loop  (cost=7.23..3827.36 rows=1 width=25) (actual time=1.660..12.329 rows=1 loops=1)
                                                                                            ->  Nested Loop  (cost=6.80..3754.10 rows=34 width=4) (actual time=0.114..10.789 rows=414 loops=1)
                                                                                                  ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.033..10.198 rows=1 loops=1)
                                                                                                        Filter: (keyword = 'computer-animation'::text)
                                                                                                        Rows Removed by Filter: 134169
                                                                                                  ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.80..1124.92 rows=305 width=8) (actual time=0.078..0.547 rows=414 loops=1)
                                                                                                        Recheck Cond: (keyword_id = k.id)
                                                                                                        Heap Blocks: exact=358
                                                                                                        ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.72 rows=305 width=0) (actual time=0.042..0.042 rows=414 loops=1)
                                                                                                              Index Cond: (keyword_id = k.id)
                                                                                            ->  Index Scan using title_pkey on title t  (cost=0.43..2.14 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=414)
                                                                                                  Index Cond: (id = mk.movie_id)
                                                                                                  Filter: ((production_year >= 2000) AND (production_year <= 2010) AND (title = 'Shrek 2'::text))
                                                                                                  Rows Removed by Filter: 1
                                                                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.78 rows=5 width=8) (actual time=0.006..0.014 rows=22 loops=1)
                                                                                            Index Cond: (movie_id = mk.movie_id)
                                                                                ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..41.09 rows=1 width=8) (actual time=0.011..0.101 rows=2 loops=22)
                                                                                      Index Cond: (movie_id = mk.movie_id)
                                                                                      Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%200%'::text) OR (info ~~ 'USA:%200%'::text)))
                                                                                      Rows Removed by Filter: 455
                                                                    ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..50.03 rows=1 width=16) (actual time=0.003..0.105 rows=38 loops=44)
                                                                          Index Cond: (movie_id = mk.movie_id)
                                                                          Filter: (note = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                          Rows Removed by Filter: 191
                                                        ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.25 rows=1 width=20) (actual time=0.002..0.002 rows=0 loops=484)
                                                              Index Cond: (id = ci.person_role_id)
                                                              Filter: (name = 'Queen'::text)
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using name_pkey on name n  (cost=0.43..2.34 rows=1 width=19) (actual time=0.002..0.002 rows=1 loops=44)
                                                        Index Cond: (id = ci.person_id)
                                                        Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                            ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.90 rows=2 width=4) (actual time=0.002..0.003 rows=3 loops=44)
                                                  Index Cond: (person_id = ci.person_id)
                                                  Heap Fetches: 132
                                      ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=132)
                                            Index Cond: (id = mc.company_id)
                                            Filter: ((country_code)::text = '[us]'::text)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=30)
                                      Index Cond: (movie_id = mk.movie_id)
              ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.29 rows=25 width=8) (actual time=0.002..0.027 rows=163 loops=30)
                    Index Cond: (person_id = an.person_id)
Planning time: 80.889 ms
Execution time: 23.776 ms
