Aggregate  (cost=5178.58..5178.59 rows=1 width=192) (actual time=28.769..28.769 rows=1 loops=1)
  ->  Nested Loop  (cost=696.37..5178.57 rows=1 width=82) (actual time=5.072..28.757 rows=8 loops=1)
        ->  Nested Loop  (cost=695.95..5178.12 rows=1 width=67) (actual time=5.064..28.670 rows=28 loops=1)
              ->  Nested Loop  (cost=695.52..5177.51 rows=1 width=75) (actual time=5.059..28.626 rows=10 loops=1)
                    Join Filter: ((ml.linked_movie_id = t2.id) AND (kt2.id = t2.kind_id))
                    ->  Nested Loop  (cost=695.09..5165.71 rows=22 width=74) (actual time=5.053..28.479 rows=54 loops=1)
                          ->  Nested Loop  (cost=694.67..5155.96 rows=22 width=59) (actual time=5.046..28.295 rows=54 loops=1)
                                Join Filter: (ml.linked_movie_id = mc2.movie_id)
                                ->  Nested Loop  (cost=694.24..5153.02 rows=4 width=51) (actual time=5.038..28.147 rows=28 loops=1)
                                      Join Filter: (mi_idx2.info_type_id = it2.id)
                                      Rows Removed by Join Filter: 1581
                                      ->  Nested Loop  (cost=694.24..5143.98 rows=442 width=55) (actual time=1.246..27.672 rows=1609 loops=1)
                                            ->  Nested Loop  (cost=693.81..4523.74 rows=301 width=42) (actual time=1.238..23.566 rows=1220 loops=1)
                                                  ->  Nested Loop  (cost=693.81..4518.89 rows=301 width=38) (actual time=1.236..23.126 rows=1220 loops=1)
                                                        Join Filter: (t1.kind_id = kt1.id)
                                                        Rows Removed by Join Filter: 844
                                                        ->  Nested Loop  (cost=693.81..4486.24 rows=2104 width=42) (actual time=1.232..22.556 rows=2064 loops=1)
                                                              Join Filter: (ml.movie_id = t1.id)
                                                              ->  Nested Loop  (cost=693.38..3157.83 rows=2250 width=17) (actual time=1.225..18.420 rows=2064 loops=1)
                                                                    Join Filter: (mi_idx1.info_type_id = it1.id)
                                                                    Rows Removed by Join Filter: 4128
                                                                    ->  Merge Join  (cost=693.38..2986.68 rows=11249 width=21) (actual time=1.207..16.772 rows=6192 loops=1)
                                                                          Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43815.71 rows=1380035 width=13) (actual time=0.007..9.610 rows=63901 loops=1)
                                                                          ->  Sort  (cost=692.91..702.29 rows=3750 width=8) (actual time=1.176..1.532 rows=6443 loops=1)
                                                                                Sort Key: ml.movie_id
                                                                                Sort Method: quicksort  Memory: 205kB
                                                                                ->  Nested Loop  (cost=38.82..470.30 rows=3750 width=8) (actual time=0.066..0.818 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.004..0.007 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.055..0.278 rows=1158 loops=2)
                                                                                            Recheck Cond: (link_type_id = lt.id)
                                                                                            Heap Blocks: exact=191
                                                                                            ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.043..0.043 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                    ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6192)
                                                                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                              ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=2064)
                                                                    Index Cond: (id = mi_idx1.movie_id)
                                                        ->  Materialize  (cost=0.00..1.09 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=2064)
                                                              ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'tv series'::text)
                                                                    Rows Removed by Filter: 6
                                                  ->  Materialize  (cost=0.00..1.09 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=1220)
                                                        ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                              Filter: ((kind)::text = 'tv series'::text)
                                                              Rows Removed by Filter: 6
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=13) (actual time=0.002..0.003 rows=1 loops=1220)
                                                  Index Cond: (movie_id = ml.linked_movie_id)
                                                  Filter: (info < '3.0'::text)
                                                  Rows Removed by Filter: 1
                                      ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=1609)
                                            ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                  Filter: ((info)::text = 'rating'::text)
                                                  Rows Removed by Filter: 112
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.67 rows=5 width=8) (actual time=0.004..0.005 rows=2 loops=28)
                                      Index Cond: (movie_id = mi_idx2.movie_id)
                          ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=54)
                                Index Cond: (id = mc2.company_id)
                    ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=54)
                          Index Cond: (id = mc2.movie_id)
                          Filter: ((production_year >= 2005) AND (production_year <= 2008))
                          Rows Removed by Filter: 1
              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.004 rows=3 loops=10)
                    Index Cond: (movie_id = t1.id)
        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=28)
              Index Cond: (id = mc1.company_id)
              Filter: ((country_code)::text = '[us]'::text)
              Rows Removed by Filter: 1
Planning time: 61.999 ms
Execution time: 28.878 ms
