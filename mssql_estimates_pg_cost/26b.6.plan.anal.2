Aggregate  (cost=7474.66..7474.67 rows=1 width=96) (actual time=62.348..62.348 rows=1 loops=1)
  ->  Nested Loop  (cost=9.50..7474.65 rows=1 width=38) (actual time=7.073..62.305 rows=93 loops=1)
        ->  Nested Loop  (cost=9.07..7474.20 rows=1 width=42) (actual time=7.069..61.979 rows=93 loops=1)
              ->  Nested Loop  (cost=8.64..7467.79 rows=14 width=30) (actual time=7.048..59.127 rows=2300 loops=1)
                    Join Filter: (t.id = ci.movie_id)
                    ->  Nested Loop  (cost=8.07..7465.74 rows=1 width=38) (actual time=7.041..57.118 rows=6 loops=1)
                          Join Filter: (cc.subject_id = cct1.id)
                          Rows Removed by Join Filter: 4
                          ->  Nested Loop  (cost=8.07..7464.68 rows=1 width=42) (actual time=7.039..57.101 rows=10 loops=1)
                                Join Filter: (cc.status_id = cct2.id)
                                Rows Removed by Join Filter: 2
                                ->  Nested Loop  (cost=8.07..7463.61 rows=1 width=46) (actual time=7.034..57.066 rows=10 loops=1)
                                      Join Filter: (kt.id = t.kind_id)
                                      Rows Removed by Join Filter: 43
                                      ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                                            Filter: ((kind)::text = 'movie'::text)
                                            Rows Removed by Filter: 6
                                      ->  Nested Loop  (cost=8.07..7462.51 rows=1 width=50) (actual time=7.030..57.054 rows=53 loops=1)
                                            ->  Nested Loop  (cost=7.64..7462.02 rows=1 width=25) (actual time=0.576..56.604 rows=144 loops=1)
                                                  ->  Nested Loop  (cost=7.22..7460.59 rows=3 width=13) (actual time=0.504..55.837 rows=313 loops=1)
                                                        Join Filter: (it2.id = mi_idx.info_type_id)
                                                        Rows Removed by Join Filter: 599
                                                        ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.012 rows=1 loops=1)
                                                              Filter: ((info)::text = 'rating'::text)
                                                              Rows Removed by Filter: 112
                                                        ->  Nested Loop  (cost=7.22..7457.99 rows=15 width=17) (actual time=0.460..55.739 rows=912 loops=1)
                                                              ->  Nested Loop  (cost=6.80..7389.43 rows=135 width=4) (actual time=0.426..28.817 rows=9984 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.063..17.766 rows=4 loops=1)
                                                                          Filter: (keyword = ANY ('{superhero,marvel-comics,based-on-comic,fight}'::text[]))
                                                                          Rows Removed by Filter: 134166
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.80..1103.92 rows=305 width=8) (actual time=0.429..2.510 rows=2496 loops=4)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=7686
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.72 rows=305 width=0) (actual time=0.218..0.218 rows=2496 loops=4)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.002..0.003 rows=0 loops=9984)
                                                                    Index Cond: (movie_id = mk.movie_id)
                                                                    Filter: (info > '8.0'::text)
                                                                    Rows Removed by Filter: 2
                                                  ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=313)
                                                        Index Cond: (movie_id = mk.movie_id)
                                            ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=144)
                                                  Index Cond: (id = mk.movie_id)
                                                  Filter: (production_year > 2005)
                                                  Rows Removed by Filter: 1
                                ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=2 width=4) (actual time=0.001..0.001 rows=1 loops=10)
                                      Filter: ((kind)::text ~~ '%complete%'::text)
                                      Rows Removed by Filter: 2
                          ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=10)
                                Filter: ((kind)::text = 'cast'::text)
                                Rows Removed by Filter: 1
                    ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.56 rows=39 width=12) (actual time=0.006..0.277 rows=383 loops=6)
                          Index Cond: (movie_id = mk.movie_id)
              ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.001..0.001 rows=0 loops=2300)
                    Index Cond: (id = ci.person_role_id)
                    Filter: ((name IS NOT NULL) AND ((name ~~ '%man%'::text) OR (name ~~ '%Man%'::text)))
                    Rows Removed by Filter: 0
        ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=93)
              Index Cond: (id = ci.person_id)
              Heap Fetches: 93
Planning time: 46.600 ms
Execution time: 62.427 ms
