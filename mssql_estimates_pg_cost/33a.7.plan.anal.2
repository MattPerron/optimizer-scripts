Aggregate  (cost=11559.82..11559.83 rows=1 width=192) (actual time=178.095..178.095 rows=1 loops=1)
  ->  Nested Loop  (cost=696.62..11559.81 rows=1 width=82) (actual time=41.041..178.081 rows=8 loops=1)
        ->  Nested Loop  (cost=696.48..11559.64 rows=1 width=86) (actual time=41.036..178.068 rows=8 loops=1)
              ->  Nested Loop  (cost=696.06..11559.19 rows=1 width=71) (actual time=40.950..178.007 rows=28 loops=1)
                    Join Filter: ((t2.id = mi_idx2.movie_id) AND (it2.id = mi_idx2.info_type_id))
                    Rows Removed by Join Filter: 5621
                    ->  Nested Loop  (cost=695.64..11542.01 rows=33 width=82) (actual time=1.310..169.869 rows=3553 loops=1)
                          Join Filter: (ml.linked_movie_id = t2.id)
                          ->  Nested Loop  (cost=695.21..11443.76 rows=184 width=57) (actual time=1.303..127.436 rows=26803 loops=1)
                                ->  Nested Loop  (cost=694.79..11362.18 rows=184 width=42) (actual time=1.298..84.014 rows=26803 loops=1)
                                      ->  Nested Loop  (cost=694.36..11227.25 rows=34 width=34) (actual time=1.292..65.978 rows=5590 loops=1)
                                            Join Filter: (it1.id = mi_idx1.info_type_id)
                                            Rows Removed by Join Filter: 11180
                                            ->  Nested Loop  (cost=0.14..16.54 rows=1 width=8) (actual time=0.027..0.033 rows=1 loops=1)
                                                  ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.018..0.020 rows=1 loops=1)
                                                        Filter: ((info)::text = 'rating'::text)
                                                        Rows Removed by Filter: 112
                                                  ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.012 rows=1 loops=1)
                                                        Filter: ((info)::text = 'rating'::text)
                                                        Rows Removed by Filter: 112
                                            ->  Nested Loop  (cost=694.21..11163.35 rows=3788 width=34) (actual time=1.262..64.442 rows=16770 loops=1)
                                                  ->  Nested Loop  (cost=693.79..10495.80 rows=1263 width=37) (actual time=1.258..51.265 rows=5983 loops=1)
                                                        Join Filter: (t1.kind_id = kt1.id)
                                                        Rows Removed by Join Filter: 4115
                                                        ->  Nested Loop  (cost=693.79..10381.07 rows=7576 width=41) (actual time=1.252..48.795 rows=10098 loops=1)
                                                              Join Filter: (ml.movie_id = t1.id)
                                                              ->  Merge Join  (cost=693.36..6061.48 rows=8166 width=16) (actual time=1.244..33.011 rows=10098 loops=1)
                                                                    Merge Cond: (mc1.movie_id = ml.movie_id)
                                                                    ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..131123.88 rows=2609129 width=8) (actual time=0.005..22.479 rows=99877 loops=1)
                                                                    ->  Sort  (cost=692.91..702.29 rows=3750 width=8) (actual time=1.179..1.712 rows=10173 loops=1)
                                                                          Sort Key: ml.movie_id
                                                                          Sort Method: quicksort  Memory: 205kB
                                                                          ->  Nested Loop  (cost=38.82..470.30 rows=3750 width=8) (actual time=0.064..0.813 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.004..0.007 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.054..0.276 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.042..0.042 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                              ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=10098)
                                                                    Index Cond: (id = mc1.movie_id)
                                                        ->  Materialize  (cost=0.00..1.09 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=10098)
                                                              ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                                                                    Filter: ((kind)::text = 'tv series'::text)
                                                                    Rows Removed by Filter: 6
                                                  ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..0.50 rows=3 width=13) (actual time=0.001..0.002 rows=3 loops=5983)
                                                        Index Cond: (movie_id = t1.id)
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..3.92 rows=5 width=8) (actual time=0.002..0.002 rows=5 loops=5590)
                                            Index Cond: (movie_id = ml.linked_movie_id)
                                ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=26803)
                                      Index Cond: (id = mc2.company_id)
                          ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.001..0.001 rows=0 loops=26803)
                                Index Cond: (id = mc2.movie_id)
                                Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                Rows Removed by Filter: 1
                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.51 rows=1 width=13) (actual time=0.001..0.002 rows=2 loops=3553)
                          Index Cond: (movie_id = mc2.movie_id)
                          Filter: (info < '3.0'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=28)
                    Index Cond: (id = mc1.company_id)
                    Filter: ((country_code)::text = '[us]'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=8)
              Index Cond: (id = t2.kind_id)
              Filter: ((kind)::text = 'tv series'::text)
Planning time: 62.403 ms
Execution time: 178.209 ms
