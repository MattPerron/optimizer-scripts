Aggregate  (cost=3527822.95..3527823.95 rows=1 width=96) (actual time=5841.852..5841.852 rows=1 loops=1)
  ->  Hash Join  (cost=2631130.95..3527822.95 rows=652 width=65) (actual time=5275.655..5806.627 rows=111101 loops=1)
        Hash Cond: (mi.info_type_id = it2.id)
        ->  Nested Loop  (cost=2631016.95..3525199.95 rows=2531 width=69) (actual time=5275.623..5740.716 rows=516327 loops=1)
              ->  Hash Join  (cost=2630974.95..2958073.95 rows=4501 width=35) (actual time=5275.604..5391.038 rows=16470 loops=1)
                    Hash Cond: (miidx.info_type_id = it.id)
                    ->  Nested Loop  (cost=2630860.95..2944569.95 rows=13510 width=39) (actual time=5275.589..5382.360 rows=49448 loops=1)
                          ->  Merge Join  (cost=2630857.95..2648892.95 rows=32853 width=25) (actual time=5275.553..5289.592 rows=32853 loops=1)
                                Merge Cond: (mc.company_type_id = ct.id)
                                ->  Sort  (cost=2630853.95..2630853.95 rows=72141 width=29) (actual time=5269.880..5276.531 rows=72141 loops=1)
                                      Sort Key: mc.company_type_id
                                      Sort Method: quicksort  Memory: 8994kB
                                      ->  Merge Join  (cost=2609691.95..2630853.95 rows=72141 width=29) (actual time=5236.704..5257.069 rows=72141 loops=1)
                                            Merge Cond: (t.kind_id = kt.id)
                                            ->  Sort  (cost=2609684.95..2609684.95 rows=148132 width=33) (actual time=5236.681..5242.308 rows=72142 loops=1)
                                                  Sort Key: t.kind_id
                                                  Sort Method: quicksort  Memory: 18953kB
                                                  ->  Nested Loop  (cost=0.00..2609684.95 rows=148132 width=33) (actual time=0.244..5196.676 rows=148132 loops=1)
                                                        ->  Nested Loop  (cost=0.00..2609684.84 rows=148132 width=8) (actual time=0.238..4855.023 rows=148132 loops=1)
                                                              ->  Seq Scan on movie_companies mc  (cost=0.00..2609129.00 rows=2609129 width=12) (actual time=0.004..270.228 rows=2609129 loops=1)
                                                              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=9775 width=4) (actual time=0.002..0.002 rows=0 loops=2609129)
                                                                    Index Cond: (id = mc.company_id)
                                                                    Filter: ((country_code)::text = '[de]'::text)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=2528312 width=25) (actual time=0.002..0.002 rows=1 loops=148132)
                                                              Index Cond: (id = mc.movie_id)
                                            ->  Sort  (cost=7.00..7.00 rows=1 width=4) (actual time=0.020..0.020 rows=1 loops=1)
                                                  Sort Key: kt.id
                                                  Sort Method: quicksort  Memory: 25kB
                                                  ->  Seq Scan on kind_type kt  (cost=0.00..7.00 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                        Filter: ((kind)::text = 'movie'::text)
                                                        Rows Removed by Filter: 6
                                ->  Sort  (cost=4.00..4.00 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=1)
                                      Sort Key: ct.id
                                      Sort Method: quicksort  Memory: 25kB
                                      ->  Seq Scan on company_type ct  (cost=0.00..4.00 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                            Filter: ((kind)::text = 'production companies'::text)
                                            Rows Removed by Filter: 3
                          ->  Bitmap Heap Scan on movie_info_idx miidx  (cost=3.00..6.00 rows=3 width=14) (actual time=0.002..0.002 rows=2 loops=32853)
                                Recheck Cond: (movie_id = t.id)
                                Heap Blocks: exact=16659
                                ->  Bitmap Index Scan on movie_id_movie_info_idx  (cost=0.00..3.00 rows=3 width=0) (actual time=0.001..0.001 rows=2 loops=32853)
                                      Index Cond: (movie_id = t.id)
                    ->  Hash  (cost=113.00..113.00 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                          ->  Seq Scan on info_type it  (cost=0.00..113.00 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                Filter: ((info)::text = 'rating'::text)
                                Rows Removed by Filter: 112
              ->  Bitmap Heap Scan on movie_info mi  (cost=42.00..84.00 rows=42 width=50) (actual time=0.005..0.015 rows=31 loops=16470)
                    Recheck Cond: (movie_id = t.id)
                    Heap Blocks: exact=176074
                    ->  Bitmap Index Scan on movie_id_movie_info  (cost=0.00..42.00 rows=42 width=0) (actual time=0.003..0.003 rows=31 loops=16470)
                          Index Cond: (movie_id = t.id)
        ->  Hash  (cost=113.00..113.00 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=1)
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              ->  Seq Scan on info_type it2  (cost=0.00..113.00 rows=1 width=4) (actual time=0.007..0.012 rows=1 loops=1)
                    Filter: ((info)::text = 'release dates'::text)
                    Rows Removed by Filter: 112
Planning time: 5.420 ms
Execution time: 5841.949 ms
