Aggregate  (cost=5894.66..5895.66 rows=1 width=96) (actual time=3.206..3.206 rows=1 loops=1)
  ->  Nested Loop  (cost=1926.00..5894.66 rows=1 width=118) (actual time=2.209..3.193 rows=14 loops=1)
        ->  Nested Loop  (cost=1926.00..5890.66 rows=1 width=122) (actual time=2.192..3.083 rows=56 loops=1)
              ->  Nested Loop  (cost=1880.00..5752.66 rows=1 width=130) (actual time=2.185..3.027 rows=14 loops=1)
                    ->  Nested Loop  (cost=1880.00..5748.66 rows=1 width=134) (actual time=2.181..3.007 rows=14 loops=1)
                          ->  Nested Loop  (cost=1880.00..5748.66 rows=1 width=119) (actual time=2.173..2.950 rows=21 loops=1)
                                ->  Nested Loop  (cost=1875.00..5735.66 rows=1 width=107) (actual time=2.159..2.901 rows=7 loops=1)
                                      ->  Nested Loop  (cost=1875.00..5643.00 rows=1666 width=86) (actual time=0.070..0.524 rows=1158 loops=1)
                                            ->  Seq Scan on link_type lt  (cost=0.00..18.00 rows=1 width=86) (actual time=0.006..0.010 rows=1 loops=1)
                                                  Filter: ((link)::text ~~ '%follows%'::text)
                                                  Rows Removed by Filter: 17
                                            ->  Bitmap Heap Scan on movie_link ml  (cost=1875.00..3750.00 rows=1875 width=8) (actual time=0.062..0.336 rows=1158 loops=1)
                                                  Recheck Cond: (link_type_id = lt.id)
                                                  Heap Blocks: exact=95
                                                  ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..1875.00 rows=1875 width=0) (actual time=0.050..0.050 rows=1158 loops=1)
                                                        Index Cond: (link_type_id = lt.id)
                                      ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=36 width=21) (actual time=0.002..0.002 rows=0 loops=1158)
                                            Index Cond: (id = ml.movie_id)
                                            Filter: ((title ~~ '%Money%'::text) AND (production_year = 1998))
                                            Rows Removed by Filter: 1
                                ->  Bitmap Heap Scan on movie_companies mc  (cost=5.00..10.00 rows=3 width=12) (actual time=0.005..0.006 rows=3 loops=7)
                                      Recheck Cond: (movie_id = ml.movie_id)
                                      Filter: (note IS NULL)
                                      Rows Removed by Filter: 1
                                      Heap Blocks: exact=14
                                      ->  Bitmap Index Scan on movie_id_movie_companies  (cost=0.00..5.00 rows=5 width=0) (actual time=0.003..0.003 rows=4 loops=7)
                                            Index Cond: (movie_id = ml.movie_id)
                          ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=48302 width=23) (actual time=0.002..0.002 rows=1 loops=21)
                                Index Cond: (id = mc.company_id)
                                Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                                Rows Removed by Filter: 0
                    ->  Index Scan using company_type_pkey on company_type ct  (cost=0.00..2.00 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=14)
                          Index Cond: (id = mc.company_type_id)
                          Filter: ((kind)::text = 'production companies'::text)
              ->  Bitmap Heap Scan on movie_keyword mk  (cost=46.00..92.00 rows=46 width=8) (actual time=0.002..0.003 rows=4 loops=14)
                    Recheck Cond: (movie_id = ml.movie_id)
                    Heap Blocks: exact=14
                    ->  Bitmap Index Scan on movie_id_movie_keyword  (cost=0.00..46.00 rows=46 width=0) (actual time=0.002..0.002 rows=4 loops=14)
                          Index Cond: (movie_id = ml.movie_id)
        ->  Index Scan using keyword_pkey on keyword k  (cost=0.00..2.00 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=56)
              Index Cond: (id = mk.keyword_id)
              Filter: (keyword = 'sequel'::text)
              Rows Removed by Filter: 1
Planning time: 3.835 ms
Execution time: 3.281 ms
