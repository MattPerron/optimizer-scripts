Aggregate  (cost=1186217.29..1186218.29 rows=1 width=96) (actual time=1051.858..1051.859 rows=1 loops=1)
  ->  Hash Join  (cost=1172443.23..1186217.29 rows=2 width=42) (actual time=832.453..1049.940 rows=4711 loops=1)
        Hash Cond: (mc.company_type_id = ct.id)
        ->  Nested Loop  (cost=1172438.23..1186204.29 rows=10 width=46) (actual time=832.429..1047.951 rows=10112 loops=1)
              ->  Nested Loop  (cost=1172438.23..1186204.23 rows=2553 width=31) (actual time=832.413..950.493 rows=45006 loops=1)
                    ->  Merge Join  (cost=1172433.23..1178884.23 rows=488 width=35) (actual time=832.391..898.628 rows=7964 loops=1)
                          Merge Cond: (mi.movie_id = t.id)
                          ->  Sort  (cost=434971.00..434971.00 rows=325255 width=4) (actual time=418.003..441.742 rows=325235 loops=1)
                                Sort Key: mi.movie_id
                                Sort Method: quicksort  Memory: 27535kB
                                ->  Nested Loop  (cost=215010.00..434971.00 rows=325255 width=4) (actual time=52.554..344.672 rows=325255 loops=1)
                                      ->  Seq Scan on info_type it1  (cost=0.00..113.00 rows=1 width=4) (actual time=0.003..0.011 rows=1 loops=1)
                                            Filter: ((info)::text = 'genres'::text)
                                            Rows Removed by Filter: 112
                                      ->  Bitmap Heap Scan on movie_info mi  (cost=215010.00..430020.00 rows=4838 width=8) (actual time=52.550..303.067 rows=325255 loops=1)
                                            Recheck Cond: (info_type_id = it1.id)
                                            Filter: (info = ANY ('{Drama,Horror,Western,Family}'::text[]))
                                            Rows Removed by Filter: 1208654
                                            Heap Blocks: exact=9770
                                            ->  Bitmap Index Scan on info_type_id_movie_info  (cost=0.00..215010.00 rows=215010 width=0) (actual time=51.236..51.236 rows=1533909 loops=1)
                                                  Index Cond: (info_type_id = it1.id)
                          ->  Sort  (cost=737462.23..737462.23 rows=50142 width=31) (actual time=414.370..418.929 rows=52703 loops=1)
                                Sort Key: mi_idx.movie_id
                                Sort Method: quicksort  Memory: 5792kB
                                ->  Nested Loop  (cost=345009.00..737462.23 rows=50142 width=31) (actual time=16.705..398.714 rows=52304 loops=1)
                                      ->  Nested Loop  (cost=345009.00..737462.00 rows=121572 width=10) (actual time=16.689..133.896 rows=121572 loops=1)
                                            ->  Seq Scan on info_type it2  (cost=0.00..113.00 rows=1 width=4) (actual time=0.018..0.021 rows=1 loops=1)
                                                  Filter: ((info)::text = 'rating'::text)
                                                  Rows Removed by Filter: 112
                                            ->  Bitmap Heap Scan on movie_info_idx mi_idx  (cost=345009.00..690018.00 rows=47331 width=14) (actual time=16.666..115.613 rows=121572 loops=1)
                                                  Recheck Cond: (info_type_id = it2.id)
                                                  Filter: (info > '7.0'::text)
                                                  Rows Removed by Filter: 338353
                                                  Heap Blocks: exact=7934
                                                  ->  Bitmap Index Scan on info_type_id_movie_info_idx  (cost=0.00..345009.00 rows=345009 width=0) (actual time=15.573..15.573 rows=459925 loops=1)
                                                        Index Cond: (info_type_id = it2.id)
                                      ->  Index Scan using title_pkey on title t  (cost=0.00..2.00 rows=1042800 width=21) (actual time=0.002..0.002 rows=0 loops=121572)
                                            Index Cond: (id = mi_idx.movie_id)
                                            Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                            Rows Removed by Filter: 1
                    ->  Bitmap Heap Scan on movie_companies mc  (cost=5.00..10.00 rows=5 width=12) (actual time=0.004..0.005 rows=6 loops=7964)
                          Recheck Cond: (movie_id = t.id)
                          Heap Blocks: exact=11868
                          ->  Bitmap Index Scan on movie_id_movie_companies  (cost=0.00..5.00 rows=5 width=0) (actual time=0.002..0.002 rows=6 loops=7964)
                                Index Cond: (movie_id = t.id)
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.00..2.00 rows=84843 width=23) (actual time=0.002..0.002 rows=0 loops=45006)
                    Index Cond: (id = mc.company_id)
                    Filter: ((country_code)::text = '[us]'::text)
                    Rows Removed by Filter: 1
        ->  Hash  (cost=4.00..4.00 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              ->  Seq Scan on company_type ct  (cost=0.00..4.00 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                    Filter: ((kind)::text = 'production companies'::text)
                    Rows Removed by Filter: 3
Planning time: 3.684 ms
Execution time: 1051.940 ms
