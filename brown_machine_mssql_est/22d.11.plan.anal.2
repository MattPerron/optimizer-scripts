Aggregate  (cost=52076.01..52076.02 rows=1 width=96) (actual time=844.264..844.264 rows=1 loops=1)
  ->  Hash Join  (cost=7519.92..51728.90 rows=46281 width=42) (actual time=87.304..816.071 rows=46281 loops=1)
        Hash Cond: (mc.company_type_id = ct.id)
        ->  Hash Join  (cost=7518.83..51246.20 rows=46281 width=46) (actual time=87.287..804.064 rows=46281 loops=1)
              Hash Cond: (mc.company_id = cn.id)
              ->  Nested Loop  (cost=8.49..42917.15 rows=64848 width=31) (actual time=4.271..695.816 rows=64848 loops=1)
                    Join Filter: (t.id = mc.movie_id)
                    ->  Nested Loop  (cost=8.06..40436.05 rows=4115 width=39) (actual time=4.263..634.651 rows=4115 loops=1)
                          Join Filter: (mi.info_type_id = it1.id)
                          Rows Removed by Join Filter: 594
                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.006..0.017 rows=1 loops=1)
                                Filter: ((info)::text = 'countries'::text)
                                Rows Removed by Filter: 112
                          ->  Nested Loop  (cost=8.06..40374.77 rows=4709 width=43) (actual time=4.256..633.204 rows=4709 loops=1)
                                Join Filter: (t.id = mi.movie_id)
                                ->  Nested Loop  (cost=7.62..29254.90 rows=5949 width=35) (actual time=4.232..302.338 rows=5949 loops=1)
                                      Join Filter: (mi_idx.info_type_id = it2.id)
                                      Rows Removed by Join Filter: 11943
                                      ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.014 rows=1 loops=1)
                                            Filter: ((info)::text = 'rating'::text)
                                            Rows Removed by Filter: 112
                                      ->  Nested Loop  (cost=7.62..29028.83 rows=17892 width=39) (actual time=4.218..299.258 rows=17892 loops=1)
                                            Join Filter: (t.id = mi_idx.movie_id)
                                            ->  Nested Loop  (cost=7.20..24706.84 rows=8073 width=25) (actual time=4.207..249.759 rows=8073 loops=1)
                                                  Join Filter: (t.kind_id = kt.id)
                                                  Rows Removed by Join Filter: 4332
                                                  ->  Nested Loop  (cost=7.20..24427.48 rows=9739 width=29) (actual time=4.179..244.240 rows=9739 loops=1)
                                                        ->  Nested Loop  (cost=6.77..6261.07 rows=37091 width=4) (actual time=4.167..95.992 rows=37091 loops=1)
                                                              ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=3 width=4) (actual time=1.341..29.155 rows=3 loops=1)
                                                                    Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                    Rows Removed by Filter: 134167
                                                              ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.77..1096.83 rows=301 width=8) (actual time=3.243..20.179 rows=12364 loops=3)
                                                                    Recheck Cond: (keyword_id = k.id)
                                                                    Heap Blocks: exact=26312
                                                                    ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.69 rows=301 width=0) (actual time=1.673..1.673 rows=12364 loops=3)
                                                                          Index Cond: (keyword_id = k.id)
                                                        ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                                              Index Cond: (id = mk.movie_id)
                                                              Filter: (production_year > 2005)
                                                              Rows Removed by Filter: 1
                                                  ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                        ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.004..0.006 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                              Rows Removed by Filter: 5
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.004..0.005 rows=2 loops=8073)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: (info < '8.5'::text)
                                                  Rows Removed by Filter: 0
                                ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.84 rows=2 width=8) (actual time=0.047..0.055 rows=1 loops=5949)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                      Rows Removed by Filter: 71
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.005..0.010 rows=16 loops=4115)
                          Index Cond: (movie_id = mk.movie_id)
              ->  Hash  (cost=5932.46..5932.46 rows=126230 width=23) (actual time=82.237..82.237 rows=126230 loops=1)
                    Buckets: 131072  Batches: 1  Memory Usage: 7968kB
                    ->  Seq Scan on company_name cn  (cost=0.00..5932.46 rows=126230 width=23) (actual time=0.009..57.251 rows=126230 loops=1)
                          Filter: ((country_code)::text <> '[us]'::text)
                          Rows Removed by Filter: 108767
        ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.009..0.009 rows=4 loops=1)
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.005..0.006 rows=4 loops=1)
Planning time: 31.657 ms
Execution time: 844.419 ms
