Aggregate  (cost=179991.80..179991.81 rows=1 width=64) (actual time=1852.238..1852.238 rows=1 loops=1)
  ->  Hash Join  (cost=154123.39..178392.14 rows=319932 width=33) (actual time=1359.050..1729.101 rows=319932 loops=1)
        Hash Cond: (an.person_id = n.id)
        ->  Seq Scan on aka_name an  (cost=0.00..20409.43 rows=901343 width=20) (actual time=0.008..138.352 rows=901343 loops=1)
        ->  Hash  (cost=151353.28..151353.28 rows=221609 width=25) (actual time=1358.816..1358.816 rows=221609 loops=1)
              Buckets: 262144  Batches: 1  Memory Usage: 15747kB
              ->  Nested Loop  (cost=9.04..151353.28 rows=221609 width=25) (actual time=6.505..1287.098 rows=221609 loops=1)
                    ->  Nested Loop  (cost=8.61..50453.17 rows=221609 width=21) (actual time=6.492..555.911 rows=221609 loops=1)
                          Join Filter: (t.id = ci.movie_id)
                          ->  Nested Loop  (cost=8.05..33494.19 rows=8538 width=29) (actual time=6.481..284.935 rows=8538 loops=1)
                                ->  Nested Loop  (cost=7.63..28408.33 rows=11406 width=33) (actual time=6.274..245.449 rows=11406 loops=1)
                                      Join Filter: (t.id = mc.movie_id)
                                      ->  Nested Loop  (cost=7.20..24232.36 rows=6926 width=25) (actual time=6.238..214.037 rows=6926 loops=1)
                                            ->  Nested Loop  (cost=6.77..3739.98 rows=41840 width=4) (actual time=6.225..60.156 rows=41840 loops=1)
                                                  ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.661..14.954 rows=1 loops=1)
                                                        Filter: (keyword = 'character-name-in-title'::text)
                                                        Rows Removed by Filter: 134169
                                                  ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.77..1110.84 rows=301 width=8) (actual time=5.560..38.097 rows=41840 loops=1)
                                                        Recheck Cond: (keyword_id = k.id)
                                                        Heap Blocks: exact=11541
                                                        ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.69 rows=301 width=0) (actual time=3.421..3.421 rows=41840 loops=1)
                                                              Index Cond: (keyword_id = k.id)
                                            ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=41840)
                                                  Index Cond: (id = mk.movie_id)
                                                  Filter: (episode_nr < 100)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=2 loops=6926)
                                            Index Cond: (movie_id = mk.movie_id)
                                ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=11406)
                                      Index Cond: (id = mc.company_id)
                                      Filter: ((country_code)::text = '[us]'::text)
                                      Rows Removed by Filter: 0
                          ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.004..0.025 rows=26 loops=8538)
                                Index Cond: (movie_id = mk.movie_id)
                    ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=221609)
                          Index Cond: (id = ci.person_id)
                          Heap Fetches: 221609
Planning time: 6.205 ms
Execution time: 1852.417 ms
