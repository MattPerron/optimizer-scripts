Aggregate  (cost=21458.45..21458.46 rows=1 width=96) (actual time=57.568..57.568 rows=1 loops=1)
  ->  Nested Loop  (cost=11.16..21458.45 rows=1 width=48) (actual time=30.519..57.122 rows=1620 loops=1)
        Join Filter: (cct1.id = cc.subject_id)
        ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
              Filter: ((kind)::text = 'cast'::text)
              Rows Removed by Filter: 3
        ->  Nested Loop  (cost=11.16..21457.38 rows=1 width=52) (actual time=30.513..56.849 rows=1620 loops=1)
              Join Filter: (cct2.id = cc.status_id)
              ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                    Filter: ((kind)::text = 'complete+verified'::text)
                    Rows Removed by Filter: 3
              ->  Nested Loop  (cost=11.16..21456.32 rows=1 width=56) (actual time=30.511..56.575 rows=1620 loops=1)
                    Join Filter: (t.id = cc.movie_id)
                    ->  Nested Loop  (cost=10.74..21453.52 rows=1 width=68) (actual time=30.502..53.974 rows=1620 loops=1)
                          Join Filter: (it3.id = pi.info_type_id)
                          Rows Removed by Join Filter: 3270
                          ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.004..0.009 rows=1 loops=1)
                                Filter: ((info)::text = 'trivia'::text)
                                Rows Removed by Filter: 112
                          ->  Nested Loop  (cost=10.74..21451.10 rows=1 width=72) (actual time=30.491..53.414 rows=4890 loops=1)
                                Join Filter: (n.id = pi.person_id)
                                ->  Nested Loop  (cost=10.31..21431.55 rows=1 width=80) (actual time=30.482..51.615 rows=30 loops=1)
                                      Join Filter: (mi.movie_id = t.id)
                                      ->  Nested Loop  (cost=9.88..21429.40 rows=1 width=59) (actual time=30.474..51.481 rows=75 loops=1)
                                            Join Filter: (n.id = an.person_id)
                                            ->  Nested Loop  (cost=9.45..21426.81 rows=2 width=55) (actual time=30.464..51.410 rows=25 loops=1)
                                                  ->  Nested Loop  (cost=9.03..21416.68 rows=5 width=59) (actual time=30.456..51.097 rows=137 loops=1)
                                                        Join Filter: (mi.movie_id = mc.movie_id)
                                                        ->  Nested Loop  (cost=8.60..21411.81 rows=1 width=51) (actual time=30.446..51.025 rows=5 loops=1)
                                                              ->  Nested Loop  (cost=8.17..21407.74 rows=1 width=39) (actual time=3.942..50.783 rows=79 loops=1)
                                                                    ->  Nested Loop  (cost=7.74..21405.39 rows=1 width=20) (actual time=1.792..45.091 rows=2207 loops=1)
                                                                          Join Filter: (rt.id = ci.role_id)
                                                                          Rows Removed by Join Filter: 5573
                                                                          ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.002..0.004 rows=1 loops=1)
                                                                                Filter: ((role)::text = 'actress'::text)
                                                                                Rows Removed by Filter: 11
                                                                          ->  Nested Loop  (cost=7.74..21404.19 rows=4 width=24) (actual time=0.742..44.252 rows=7780 loops=1)
                                                                                Join Filter: (mi.movie_id = ci.movie_id)
                                                                                ->  Nested Loop  (cost=7.18..21172.49 rows=5 width=8) (actual time=0.343..21.124 rows=374 loops=1)
                                                                                      Join Filter: (it.id = mi.info_type_id)
                                                                                      ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.009 rows=1 loops=1)
                                                                                            Filter: ((info)::text = 'release dates'::text)
                                                                                            Rows Removed by Filter: 112
                                                                                      ->  Nested Loop  (cost=7.18..21163.50 rows=526 width=12) (actual time=0.339..21.044 rows=374 loops=1)
                                                                                            ->  Nested Loop  (cost=6.74..3729.38 rows=414 width=4) (actual time=0.108..9.198 rows=414 loops=1)
                                                                                                  ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.028..8.550 rows=1 loops=1)
                                                                                                        Filter: (keyword = 'computer-animation'::text)
                                                                                                        Rows Removed by Filter: 134169
                                                                                                  ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.74..1100.27 rows=298 width=8) (actual time=0.078..0.578 rows=414 loops=1)
                                                                                                        Recheck Cond: (keyword_id = k.id)
                                                                                                        Heap Blocks: exact=358
                                                                                                        ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=298 width=0) (actual time=0.041..0.041 rows=414 loops=1)
                                                                                                              Index Cond: (keyword_id = k.id)
                                                                                            ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.09 rows=2 width=8) (actual time=0.014..0.028 rows=1 loops=414)
                                                                                                  Index Cond: (movie_id = mk.movie_id)
                                                                                                  Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%200%'::text) OR (info ~~ 'USA:%200%'::text)))
                                                                                                  Rows Removed by Filter: 70
                                                                                ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..46.33 rows=1 width=16) (actual time=0.009..0.058 rows=21 loops=374)
                                                                                      Index Cond: (movie_id = mk.movie_id)
                                                                                      Filter: (note = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                      Rows Removed by Filter: 72
                                                                    ->  Index Scan using name_pkey on name n  (cost=0.43..2.35 rows=1 width=19) (actual time=0.002..0.002 rows=0 loops=2207)
                                                                          Index Cond: (id = ci.person_id)
                                                                          Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                          Rows Removed by Filter: 1
                                                              ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.25 rows=1 width=20) (actual time=0.003..0.003 rows=0 loops=79)
                                                                    Index Cond: (id = ci.person_role_id)
                                                                    Filter: (name = 'Queen'::text)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.80 rows=5 width=8) (actual time=0.003..0.008 rows=27 loops=5)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                  ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=137)
                                                        Index Cond: (id = mc.company_id)
                                                        Filter: ((country_code)::text = '[us]'::text)
                                                        Rows Removed by Filter: 1
                                            ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.27 rows=2 width=4) (actual time=0.002..0.002 rows=3 loops=25)
                                                  Index Cond: (person_id = ci.person_id)
                                                  Heap Fetches: 0
                                      ->  Index Scan using title_pkey on title t  (cost=0.43..2.14 rows=1 width=21) (actual time=0.001..0.001 rows=0 loops=75)
                                            Index Cond: (id = mk.movie_id)
                                            Filter: ((production_year >= 2000) AND (production_year <= 2010) AND (title = 'Shrek 2'::text))
                                            Rows Removed by Filter: 1
                                ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.24 rows=25 width=8) (actual time=0.001..0.028 rows=163 loops=30)
                                      Index Cond: (person_id = an.person_id)
                    ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.001..0.001 rows=1 loops=1620)
                          Index Cond: (movie_id = mk.movie_id)
Planning time: 79.232 ms
Execution time: 57.691 ms
