Aggregate  (cost=8630.88..8630.89 rows=1 width=192) (actual time=18.242..18.242 rows=1 loops=1)
  ->  Nested Loop  (cost=42.51..8630.86 rows=1 width=84) (actual time=1.488..18.231 rows=8 loops=1)
        ->  Nested Loop  (cost=42.09..8630.42 rows=1 width=69) (actual time=1.460..18.171 rows=28 loops=1)
              ->  Nested Loop  (cost=41.95..8630.24 rows=1 width=73) (actual time=1.333..18.080 rows=84 loops=1)
                    ->  Nested Loop  (cost=41.81..8630.06 rows=1 width=77) (actual time=1.331..17.993 rows=84 loops=1)
                          ->  Nested Loop  (cost=41.39..8629.62 rows=1 width=62) (actual time=1.325..17.831 rows=84 loops=1)
                                Join Filter: (t2.id = mc2.movie_id)
                                ->  Nested Loop  (cost=40.96..8628.88 rows=1 width=70) (actual time=1.321..17.718 rows=42 loops=1)
                                      Join Filter: (mi_idx2.info_type_id = it2.id)
                                      Rows Removed by Join Filter: 2469
                                      ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                                            Filter: ((info)::text = 'rating'::text)
                                            Rows Removed by Filter: 112
                                      ->  Nested Loop  (cost=40.96..8624.94 rows=122 width=74) (actual time=0.185..17.486 rows=2511 loops=1)
                                            ->  Nested Loop  (cost=40.53..8553.14 rows=118 width=82) (actual time=0.179..15.885 rows=420 loops=1)
                                                  Join Filter: (kt1.id = t1.kind_id)
                                                  Rows Removed by Join Filter: 408
                                                  ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                        Filter: ((kind)::text = 'tv series'::text)
                                                        Rows Removed by Filter: 6
                                                  ->  Nested Loop  (cost=40.53..8541.70 rows=828 width=86) (actual time=0.177..15.761 rows=828 loops=1)
                                                        Join Filter: (ml.movie_id = t1.id)
                                                        ->  Nested Loop  (cost=40.10..8052.84 rows=828 width=61) (actual time=0.173..14.373 rows=828 loops=1)
                                                              ->  Nested Loop  (cost=39.68..7414.33 rows=308 width=47) (actual time=0.171..13.595 rows=308 loops=1)
                                                                    Join Filter: (ml.linked_movie_id = t2.id)
                                                                    ->  Nested Loop  (cost=39.25..5240.56 rows=2944 width=22) (actual time=0.070..7.471 rows=2944 loops=1)
                                                                          ->  Nested Loop  (cost=38.82..470.30 rows=2315 width=8) (actual time=0.062..1.021 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.001..0.006 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.054..0.328 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.042..0.042 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.0'::text)
                                                                                Rows Removed by Filter: 1
                                                                    ->  Index Scan using title_pkey on title t2  (cost=0.43..0.73 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2944)
                                                                          Index Cond: (id = mi_idx2.movie_id)
                                                                          Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                                                          Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..2.04 rows=3 width=14) (actual time=0.001..0.002 rows=3 loops=308)
                                                                    Index Cond: (movie_id = ml.movie_id)
                                                        ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=828)
                                                              Index Cond: (id = mi_idx1.movie_id)
                                            ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=6 loops=420)
                                                  Index Cond: (movie_id = t1.id)
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.002..0.002 rows=2 loops=42)
                                      Index Cond: (movie_id = mi_idx2.movie_id)
                          ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=84)
                                Index Cond: (id = mc2.company_id)
                    ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=84)
                          Index Cond: (id = t2.kind_id)
                          Filter: ((kind)::text = 'tv series'::text)
              ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=84)
                    Index Cond: (id = mi_idx1.info_type_id)
                    Filter: ((info)::text = 'rating'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=28)
              Index Cond: (id = mc1.company_id)
              Filter: ((country_code)::text = '[us]'::text)
              Rows Removed by Filter: 1
Planning time: 61.048 ms
Execution time: 18.339 ms
