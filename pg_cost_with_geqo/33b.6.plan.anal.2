Aggregate  (cost=5568.90..5568.91 rows=1 width=192) (actual time=8.864..8.864 rows=1 loops=1)
  ->  Nested Loop  (cost=42.37..5568.88 rows=1 width=84) (actual time=0.743..8.855 rows=4 loops=1)
        Join Filter: ((ml.linked_movie_id = t2.id) AND (kt2.id = t2.kind_id))
        ->  Nested Loop  (cost=41.94..5568.35 rows=1 width=83) (actual time=0.738..8.828 rows=10 loops=1)
              ->  Nested Loop  (cost=41.52..5567.91 rows=1 width=68) (actual time=0.736..8.799 rows=10 loops=1)
                    ->  Nested Loop  (cost=41.10..5567.46 rows=1 width=53) (actual time=0.731..8.463 rows=170 loops=1)
                          ->  Nested Loop  (cost=40.67..5566.85 rows=1 width=61) (actual time=0.726..8.283 rows=54 loops=1)
                                Join Filter: (mi_idx1.info_type_id = it1.id)
                                Rows Removed by Join Filter: 108
                                ->  Nested Loop  (cost=40.67..5564.06 rows=25 width=65) (actual time=0.708..8.213 rows=162 loops=1)
                                      Join Filter: (kt1.id = t1.kind_id)
                                      Rows Removed by Join Filter: 12
                                      ->  Nested Loop  (cost=0.13..13.35 rows=1 width=8) (actual time=0.008..0.011 rows=1 loops=1)
                                            ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..12.26 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'tv series'::text)
                                                  Rows Removed by Filter: 6
                                            ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.002..0.004 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'tv series'::text)
                                                  Rows Removed by Filter: 6
                                      ->  Nested Loop  (cost=40.53..5548.53 rows=174 width=65) (actual time=0.699..8.169 rows=174 loops=1)
                                            Join Filter: (ml.movie_id = t1.id)
                                            ->  Nested Loop  (cost=40.10..5445.80 rows=174 width=40) (actual time=0.694..7.855 rows=174 loops=1)
                                                  ->  Nested Loop  (cost=39.68..5304.83 rows=68 width=26) (actual time=0.689..7.680 rows=68 loops=1)
                                                        Join Filter: (ml.linked_movie_id = mc2.movie_id)
                                                        ->  Nested Loop  (cost=39.25..5279.75 rows=34 width=18) (actual time=0.684..7.536 rows=34 loops=1)
                                                              Join Filter: (mi_idx2.info_type_id = it2.id)
                                                              Rows Removed by Join Filter: 2910
                                                              ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                                                    Filter: ((info)::text = 'rating'::text)
                                                                    Rows Removed by Filter: 112
                                                              ->  Nested Loop  (cost=39.25..5240.54 rows=2944 width=22) (actual time=0.067..7.285 rows=2944 loops=1)
                                                                    ->  Nested Loop  (cost=38.82..470.28 rows=2315 width=8) (actual time=0.059..1.007 rows=2315 loops=1)
                                                                          ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=4) (actual time=0.002..0.006 rows=2 loops=1)
                                                                                Filter: ((link)::text ~~ '%follow%'::text)
                                                                                Rows Removed by Filter: 16
                                                                          ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.052..0.315 rows=1158 loops=2)
                                                                                Recheck Cond: (link_type_id = lt.id)
                                                                                Heap Blocks: exact=191
                                                                                ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.040..0.040 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                                    ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=2315)
                                                                          Index Cond: (movie_id = ml.linked_movie_id)
                                                                          Filter: (info < '3.0'::text)
                                                                          Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.003..0.004 rows=2 loops=34)
                                                              Index Cond: (movie_id = mi_idx2.movie_id)
                                                  ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..2.04 rows=3 width=14) (actual time=0.001..0.002 rows=3 loops=68)
                                                        Index Cond: (movie_id = ml.movie_id)
                                            ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=174)
                                                  Index Cond: (id = mi_idx1.movie_id)
                                ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=162)
                                      ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                            Filter: ((info)::text = 'rating'::text)
                                            Rows Removed by Filter: 112
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=3 loops=54)
                                Index Cond: (movie_id = t1.id)
                    ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=170)
                          Index Cond: (id = mc1.company_id)
                          Filter: ((country_code)::text = '[nl]'::text)
                          Rows Removed by Filter: 1
              ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=10)
                    Index Cond: (id = mc2.company_id)
        ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=10)
              Index Cond: (id = mc2.movie_id)
              Filter: (production_year = 2007)
              Rows Removed by Filter: 1
Planning time: 61.433 ms
Execution time: 8.956 ms
