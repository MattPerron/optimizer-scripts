Aggregate  (cost=5627.41..5627.42 rows=1 width=192) (actual time=90.728..90.729 rows=1 loops=1)
  ->  Nested Loop  (cost=4.01..5627.39 rows=1 width=84) (actual time=13.449..90.652 rows=114 loops=1)
        Join Filter: (kt1.id = t1.kind_id)
        ->  Nested Loop  (cost=4.01..5626.28 rows=1 width=88) (actual time=13.447..90.538 rows=114 loops=1)
              Join Filter: (ml.movie_id = t1.id)
              ->  Nested Loop  (cost=3.58..5625.75 rows=1 width=79) (actual time=13.442..90.326 rows=114 loops=1)
                    Join Filter: (t2.kind_id = kt2.id)
                    Rows Removed by Join Filter: 38
                    ->  Nested Loop  (cost=3.58..5624.52 rows=5 width=83) (actual time=11.653..90.266 rows=133 loops=1)
                          ->  Nested Loop  (cost=3.16..5620.06 rows=10 width=68) (actual time=11.647..89.956 rows=150 loops=1)
                                Join Filter: (ml.movie_id = mc1.movie_id)
                                ->  Nested Loop  (cost=2.73..5619.40 rows=1 width=60) (actual time=11.640..89.770 rows=51 loops=1)
                                      Join Filter: ((t2.id = mi_idx2.movie_id) AND (it2.id = mi_idx2.info_type_id))
                                      Rows Removed by Join Filter: 4973
                                      ->  Nested Loop  (cost=2.31..5599.59 rows=37 width=70) (actual time=0.180..81.505 rows=3522 loops=1)
                                            ->  Nested Loop  (cost=1.89..5583.18 rows=37 width=55) (actual time=0.175..74.945 rows=3522 loops=1)
                                                  ->  Nested Loop  (cost=1.46..5559.17 rows=36 width=47) (actual time=0.169..71.593 rows=851 loops=1)
                                                        ->  Nested Loop  (cost=1.03..5165.36 rows=88 width=22) (actual time=0.153..66.213 rows=2064 loops=1)
                                                              Join Filter: (ml.link_type_id = lt.id)
                                                              Rows Removed by Join Filter: 38685
                                                              ->  Nested Loop  (cost=1.03..5140.81 rows=791 width=26) (actual time=0.033..55.048 rows=20890 loops=1)
                                                                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                                    ->  Nested Loop  (cost=1.03..5130.49 rows=791 width=22) (actual time=0.021..51.996 rows=20890 loops=1)
                                                                          Join Filter: (it1.id = mi_idx1.info_type_id)
                                                                          Rows Removed by Join Filter: 41780
                                                                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                                          ->  Merge Join  (cost=1.03..4010.50 rows=89406 width=26) (actual time=0.012..44.649 rows=62670 loops=1)
                                                                                Merge Cond: (ml.movie_id = mi_idx1.movie_id)
                                                                                ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=12) (actual time=0.006..5.077 rows=29997 loops=1)
                                                                                ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43804.18 rows=1380035 width=14) (actual time=0.004..17.759 rows=114373 loops=1)
                                                              ->  Materialize  (cost=0.00..1.26 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=20890)
                                                                    ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.002..0.005 rows=2 loops=1)
                                                                          Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                          Rows Removed by Filter: 16
                                                        ->  Index Scan using title_pkey on title t2  (cost=0.43..4.48 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2064)
                                                              Index Cond: (id = ml.linked_movie_id)
                                                              Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                              Rows Removed by Filter: 1
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.002..0.003 rows=4 loops=851)
                                                        Index Cond: (movie_id = t2.id)
                                            ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=3522)
                                                  Index Cond: (id = mc2.company_id)
                                      ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.51 rows=2 width=14) (actual time=0.001..0.002 rows=1 loops=3522)
                                            Index Cond: (movie_id = mc2.movie_id)
                                            Filter: (info < '3.5'::text)
                                            Rows Removed by Filter: 2
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.002..0.003 rows=3 loops=51)
                                      Index Cond: (movie_id = mi_idx1.movie_id)
                          ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=150)
                                Index Cond: (id = mc1.company_id)
                                Filter: ((country_code)::text <> '[us]'::text)
                                Rows Removed by Filter: 0
                    ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=133)
                          ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.006..0.007 rows=2 loops=1)
                                Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                Rows Removed by Filter: 5
              ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=114)
                    Index Cond: (id = mc1.movie_id)
        ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=114)
              Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
              Rows Removed by Filter: 1
Planning time: 59.500 ms
Execution time: 90.823 ms
