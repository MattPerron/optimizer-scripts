Aggregate  (cost=40957.19..40957.20 rows=1 width=96) (actual time=3024.126..3024.126 rows=1 loops=1)
  ->  Nested Loop  (cost=7519.89..40957.18 rows=1 width=42) (actual time=70.362..3009.293 rows=46281 loops=1)
        Join Filter: (mi.info_type_id = it1.id)
        Rows Removed by Join Filter: 8297
        ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.013 rows=1 loops=1)
              Filter: ((info)::text = 'countries'::text)
              Rows Removed by Filter: 112
        ->  Nested Loop  (cost=7519.89..40954.57 rows=16 width=46) (actual time=70.353..3000.403 rows=54578 loops=1)
              Join Filter: (t.id = mi.movie_id)
              ->  Hash Join  (cost=7519.46..40857.37 rows=52 width=58) (actual time=70.332..356.695 rows=56448 loops=1)
                    Hash Cond: (mc.company_type_id = ct.id)
                    ->  Hash Join  (cost=7518.37..40622.51 rows=22464 width=62) (actual time=70.320..342.819 rows=56448 loops=1)
                          Hash Cond: (mc.company_id = cn.id)
                          ->  Nested Loop  (cost=8.03..32809.97 rows=23937 width=47) (actual time=2.832..247.980 rows=75603 loops=1)
                                Join Filter: (t.id = mc.movie_id)
                                ->  Nested Loop  (cost=7.60..29223.07 rows=5949 width=35) (actual time=2.825..194.832 rows=5949 loops=1)
                                      Join Filter: (mi_idx.info_type_id = it2.id)
                                      Rows Removed by Join Filter: 11943
                                      ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                            Filter: ((info)::text = 'rating'::text)
                                            Rows Removed by Filter: 112
                                      ->  Nested Loop  (cost=7.60..28997.01 rows=17892 width=39) (actual time=2.815..192.611 rows=17892 loops=1)
                                            Join Filter: (t.id = mi_idx.movie_id)
                                            ->  Nested Loop  (cost=7.17..24675.01 rows=8073 width=25) (actual time=2.806..162.457 rows=8073 loops=1)
                                                  Join Filter: (t.kind_id = kt.id)
                                                  Rows Removed by Join Filter: 4332
                                                  ->  Nested Loop  (cost=7.17..24395.66 rows=9739 width=29) (actual time=2.783..158.542 rows=9739 loops=1)
                                                        ->  Nested Loop  (cost=6.74..6229.24 rows=37091 width=4) (actual time=2.772..62.815 rows=37091 loops=1)
                                                              ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=3 width=4) (actual time=0.800..15.533 rows=3 loops=1)
                                                                    Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                    Rows Removed by Filter: 134167
                                                              ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.74..1086.25 rows=298 width=8) (actual time=2.231..13.970 rows=12364 loops=3)
                                                                    Recheck Cond: (keyword_id = k.id)
                                                                    Heap Blocks: exact=26312
                                                                    ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=298 width=0) (actual time=1.134..1.134 rows=12364 loops=3)
                                                                          Index Cond: (keyword_id = k.id)
                                                        ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=37091)
                                                              Index Cond: (id = mk.movie_id)
                                                              Filter: (production_year > 2005)
                                                              Rows Removed by Filter: 1
                                                  ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                        ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.004..0.006 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                              Rows Removed by Filter: 5
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.003..0.003 rows=2 loops=8073)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: (info < '8.5'::text)
                                                  Rows Removed by Filter: 0
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.003..0.006 rows=13 loops=5949)
                                      Index Cond: (movie_id = mk.movie_id)
                          ->  Hash  (cost=5932.46..5932.46 rows=126230 width=23) (actual time=66.901..66.901 rows=126230 loops=1)
                                Buckets: 131072  Batches: 1  Memory Usage: 7968kB
                                ->  Seq Scan on company_name cn  (cost=0.00..5932.46 rows=126230 width=23) (actual time=0.003..40.110 rows=126230 loops=1)
                                      Filter: ((country_code)::text <> '[us]'::text)
                                      Rows Removed by Filter: 108767
                    ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.005..0.005 rows=4 loops=1)
                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                          ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.003 rows=4 loops=1)
              ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.84 rows=2 width=8) (actual time=0.038..0.046 rows=1 loops=56448)
                    Index Cond: (movie_id = mk.movie_id)
                    Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                    Rows Removed by Filter: 154
Planning time: 19.784 ms
Execution time: 3024.250 ms
