Aggregate  (cost=14805.91..14805.92 rows=1 width=96) (actual time=389.316..389.317 rows=1 loops=1)
  ->  Nested Loop  (cost=11.16..14805.90 rows=1 width=48) (actual time=102.412..388.852 rows=1620 loops=1)
        Join Filter: (mi.movie_id = t.id)
        ->  Nested Loop  (cost=10.73..14803.75 rows=1 width=51) (actual time=102.401..385.614 rows=1620 loops=1)
              Join Filter: (mi.info_type_id = it.id)
              ->  Nested Loop  (cost=10.73..14801.32 rows=1 width=55) (actual time=102.397..381.858 rows=1620 loops=1)
                    Join Filter: (ci.role_id = rt.id)
                    ->  Nested Loop  (cost=10.73..14800.16 rows=1 width=59) (actual time=102.392..380.258 rows=1620 loops=1)
                          Join Filter: (cc.subject_id = cct1.id)
                          ->  Nested Loop  (cost=10.73..14799.10 rows=1 width=63) (actual time=102.388..378.855 rows=1620 loops=1)
                                Join Filter: (pi.info_type_id = it3.id)
                                Rows Removed by Join Filter: 3270
                                ->  Nested Loop  (cost=10.73..14796.67 rows=1 width=67) (actual time=101.636..350.151 rows=4890 loops=1)
                                      Join Filter: (cc.status_id = cct2.id)
                                      Rows Removed by Join Filter: 7335
                                      ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                            Filter: ((kind)::text = 'complete+verified'::text)
                                            Rows Removed by Filter: 3
                                      ->  Nested Loop  (cost=10.73..14795.60 rows=2 width=71) (actual time=101.630..348.375 rows=12225 loops=1)
                                            ->  Nested Loop  (cost=10.31..14785.47 rows=5 width=75) (actual time=101.621..227.283 rows=66993 loops=1)
                                                  Join Filter: (mi.movie_id = mc.movie_id)
                                                  ->  Nested Loop  (cost=9.88..14780.60 rows=1 width=67) (actual time=101.611..196.258 rows=2445 loops=1)
                                                        Join Filter: (n.id = an.person_id)
                                                        ->  Nested Loop  (cost=9.45..14779.31 rows=1 width=79) (actual time=101.601..193.888 rows=815 loops=1)
                                                              Join Filter: (ci.person_id = n.id)
                                                              ->  Nested Loop  (cost=9.02..14777.07 rows=1 width=60) (actual time=101.589..190.813 rows=1643 loops=1)
                                                                    Join Filter: (ci.movie_id = mi.movie_id)
                                                                    ->  Nested Loop  (cost=8.59..14734.96 rows=1 width=52) (actual time=2.564..142.242 rows=772 loops=1)
                                                                          ->  Nested Loop  (cost=8.16..10517.56 rows=1871 width=40) (actual time=0.200..51.189 rows=65231 loops=1)
                                                                                ->  Nested Loop  (cost=7.73..9055.22 rows=75 width=32) (actual time=0.193..20.220 rows=2266 loops=1)
                                                                                      ->  Nested Loop  (cost=7.16..4884.83 rows=90 width=16) (actual time=0.184..10.086 rows=90 loops=1)
                                                                                            ->  Nested Loop  (cost=6.74..3729.38 rows=414 width=4) (actual time=0.109..9.136 rows=414 loops=1)
                                                                                                  ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.028..8.487 rows=1 loops=1)
                                                                                                        Filter: (keyword = 'computer-animation'::text)
                                                                                                        Rows Removed by Filter: 134169
                                                                                                  ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.74..1100.27 rows=298 width=8) (actual time=0.080..0.583 rows=414 loops=1)
                                                                                                        Recheck Cond: (keyword_id = k.id)
                                                                                                        Heap Blocks: exact=358
                                                                                                        ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=298 width=0) (actual time=0.043..0.043 rows=414 loops=1)
                                                                                                              Index Cond: (keyword_id = k.id)
                                                                                            ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=414)
                                                                                                  Index Cond: (movie_id = mk.movie_id)
                                                                                      ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..46.33 rows=1 width=16) (actual time=0.012..0.108 rows=25 loops=90)
                                                                                            Index Cond: (movie_id = mk.movie_id)
                                                                                            Filter: (note = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                            Rows Removed by Filter: 90
                                                                                ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.25 rows=25 width=8) (actual time=0.003..0.009 rows=29 loops=2266)
                                                                                      Index Cond: (person_id = ci.person_id)
                                                                          ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.25 rows=1 width=20) (actual time=0.001..0.001 rows=0 loops=65231)
                                                                                Index Cond: (id = ci.person_role_id)
                                                                                Filter: (name = 'Queen'::text)
                                                                                Rows Removed by Filter: 1
                                                                    ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.09 rows=2 width=8) (actual time=0.020..0.062 rows=2 loops=772)
                                                                          Index Cond: (movie_id = mk.movie_id)
                                                                          Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%200%'::text) OR (info ~~ 'USA:%200%'::text)))
                                                                          Rows Removed by Filter: 295
                                                              ->  Index Scan using name_pkey on name n  (cost=0.43..2.22 rows=1 width=19) (actual time=0.002..0.002 rows=0 loops=1643)
                                                                    Index Cond: (id = pi.person_id)
                                                                    Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.26 rows=2 width=4) (actual time=0.001..0.002 rows=3 loops=815)
                                                              Index Cond: (person_id = pi.person_id)
                                                              Heap Fetches: 0
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.80 rows=5 width=8) (actual time=0.002..0.006 rows=27 loops=2445)
                                                        Index Cond: (movie_id = mk.movie_id)
                                            ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=66993)
                                                  Index Cond: (id = mc.company_id)
                                                  Filter: ((country_code)::text = '[us]'::text)
                                                  Rows Removed by Filter: 1
                                ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.005 rows=1 loops=4890)
                                      Filter: ((info)::text = 'trivia'::text)
                                      Rows Removed by Filter: 80
                          ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=1620)
                                Filter: ((kind)::text = 'cast'::text)
                    ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=1620)
                          Filter: ((role)::text = 'actress'::text)
                          Rows Removed by Filter: 1
              ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1620)
                    Filter: ((info)::text = 'release dates'::text)
                    Rows Removed by Filter: 15
        ->  Index Scan using title_pkey on title t  (cost=0.43..2.14 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=1620)
              Index Cond: (id = mk.movie_id)
              Filter: ((production_year >= 2000) AND (production_year <= 2010) AND (title = 'Shrek 2'::text))
Planning time: 79.286 ms
Execution time: 389.452 ms
