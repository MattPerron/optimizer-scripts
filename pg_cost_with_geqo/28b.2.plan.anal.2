Aggregate  (cost=20787.63..20787.64 rows=1 width=96) (actual time=305.136..305.136 rows=1 loops=1)
  ->  Nested Loop  (cost=3783.00..20787.63 rows=1 width=42) (actual time=45.366..305.060 rows=148 loops=1)
        ->  Nested Loop  (cost=3782.85..20787.44 rows=1 width=46) (actual time=45.362..304.798 rows=224 loops=1)
              ->  Nested Loop  (cost=3782.71..20787.10 rows=2 width=50) (actual time=45.356..304.523 rows=225 loops=1)
                    ->  Nested Loop  (cost=3782.58..20786.80 rows=2 width=54) (actual time=45.349..304.299 rows=225 loops=1)
                          ->  Nested Loop  (cost=3782.16..20784.83 rows=4 width=39) (actual time=45.340..303.601 rows=227 loops=1)
                                Join Filter: (t.id = mi.movie_id)
                                ->  Nested Loop  (cost=3781.73..20664.00 rows=78 width=55) (actual time=45.114..176.632 rows=1690 loops=1)
                                      Join Filter: (t.id = mi_idx.movie_id)
                                      ->  Hash Join  (cost=3781.30..20325.62 rows=663 width=41) (actual time=45.100..171.813 rows=1735 loops=1)
                                            Hash Cond: (t.kind_id = kt.id)
                                            ->  Nested Loop  (cost=3780.19..20298.14 rows=2322 width=45) (actual time=45.087..171.323 rows=1856 loops=1)
                                                  ->  Nested Loop  (cost=3779.76..17459.38 rows=5796 width=20) (actual time=45.078..151.884 rows=9908 loops=1)
                                                        ->  Hash Join  (cost=3779.33..11951.83 rows=9571 width=8) (actual time=45.062..121.752 rows=3832 loops=1)
                                                              Hash Cond: (cc.subject_id = cct1.id)
                                                              ->  Hash Join  (cost=3778.26..11552.38 rows=38283 width=12) (actual time=45.022..120.179 rows=10536 loops=1)
                                                                    Hash Cond: (cc.status_id = cct2.id)
                                                                    ->  Hash Join  (cost=3777.18..11020.12 rows=51044 width=16) (actual time=45.014..116.812 rows=20024 loops=1)
                                                                          Hash Cond: (mk.movie_id = cc.movie_id)
                                                                          ->  Nested Loop  (cost=6.74..6229.24 rows=37091 width=4) (actual time=2.893..61.834 rows=37091 loops=1)
                                                                                ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=3 width=4) (actual time=0.843..15.728 rows=3 loops=1)
                                                                                      Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                      Rows Removed by Filter: 134167
                                                                                ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.74..1086.25 rows=298 width=8) (actual time=2.206..13.563 rows=12364 loops=3)
                                                                                      Recheck Cond: (keyword_id = k.id)
                                                                                      Heap Blocks: exact=26312
                                                                                      ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=298 width=0) (actual time=1.140..1.140 rows=12364 loops=3)
                                                                                            Index Cond: (keyword_id = k.id)
                                                                          ->  Hash  (cost=2081.86..2081.86 rows=135086 width=12) (actual time=41.754..41.754 rows=135086 loops=1)
                                                                                Buckets: 262144  Batches: 1  Memory Usage: 7853kB
                                                                                ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.005..18.348 rows=135086 loops=1)
                                                                    ->  Hash  (cost=1.05..1.05 rows=3 width=4) (actual time=0.002..0.002 rows=3 loops=1)
                                                                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                          ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.001..0.001 rows=3 loops=1)
                                                                                Filter: ((kind)::text <> 'complete+verified'::text)
                                                                                Rows Removed by Filter: 1
                                                              ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                    ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                          Filter: ((kind)::text = 'crew'::text)
                                                                          Rows Removed by Filter: 3
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.005..0.007 rows=3 loops=3832)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                              Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                                              Rows Removed by Filter: 9
                                                  ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=9908)
                                                        Index Cond: (id = mk.movie_id)
                                                        Filter: (production_year > 2005)
                                                        Rows Removed by Filter: 1
                                            ->  Hash  (cost=1.09..1.09 rows=2 width=4) (actual time=0.008..0.008 rows=2 loops=1)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                  ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.005..0.006 rows=2 loops=1)
                                                        Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                        Rows Removed by Filter: 5
                                      ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=1735)
                                            Index Cond: (movie_id = mk.movie_id)
                                            Filter: (info > '6.5'::text)
                                            Rows Removed by Filter: 2
                                ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.54 rows=1 width=8) (actual time=0.075..0.075 rows=0 loops=1690)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                      Rows Removed by Filter: 361
                          ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=227)
                                Index Cond: (id = mc.company_id)
                                Filter: ((country_code)::text <> '[us]'::text)
                                Rows Removed by Filter: 0
                    ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=225)
                          Index Cond: (id = mc.company_type_id)
                          Heap Fetches: 0
              ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=225)
                    Index Cond: (id = mi.info_type_id)
                    Filter: ((info)::text = 'countries'::text)
                    Rows Removed by Filter: 0
        ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=224)
              Index Cond: (id = mi_idx.info_type_id)
              Filter: ((info)::text = 'rating'::text)
              Rows Removed by Filter: 0
Planning time: 59.116 ms
Execution time: 305.265 ms
