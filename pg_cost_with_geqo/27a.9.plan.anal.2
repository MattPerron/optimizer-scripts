Aggregate  (cost=3705.17..3705.18 rows=1 width=96) (actual time=16.326..16.327 rows=1 loops=1)
  ->  Hash Join  (cost=604.79..3704.94 rows=30 width=48) (actual time=2.473..16.159 rows=477 loops=1)
        Hash Cond: (cc.subject_id = cct1.id)
        ->  Nested Loop  (cost=603.72..3703.24 rows=60 width=52) (actual time=2.462..16.038 rows=477 loops=1)
              ->  Hash Join  (cost=603.30..3570.23 rows=291 width=37) (actual time=2.454..14.019 rows=1106 loops=1)
                    Hash Cond: (mc.company_type_id = ct.id)
                    ->  Nested Loop  (cost=602.23..3557.07 rows=1163 width=41) (actual time=2.448..13.759 rows=1163 loops=1)
                          Join Filter: (ml.movie_id = mc.movie_id)
                          ->  Nested Loop  (cost=601.80..3468.06 rows=154 width=53) (actual time=2.442..12.977 rows=154 loops=1)
                                Join Filter: (cc.status_id = cct2.id)
                                Rows Removed by Join Filter: 57
                                ->  Nested Loop  (cost=601.80..3463.85 rows=211 width=57) (actual time=2.437..12.890 rows=211 loops=1)
                                      Join Filter: (ml.movie_id = mi.movie_id)
                                      ->  Nested Loop  (cost=601.37..3312.02 rows=98 width=53) (actual time=1.835..11.993 rows=98 loops=1)
                                            Join Filter: (ml.movie_id = t.id)
                                            ->  Nested Loop  (cost=600.94..3262.56 rows=98 width=32) (actual time=1.829..11.776 rows=98 loops=1)
                                                  ->  Nested Loop  (cost=600.52..1703.96 rows=3532 width=36) (actual time=1.677..6.058 rows=3532 loops=1)
                                                        Join Filter: (ml.movie_id = mk.movie_id)
                                                        ->  Merge Join  (cost=600.09..957.63 rows=257 width=28) (actual time=1.671..4.262 rows=257 loops=1)
                                                              Merge Cond: (cc.movie_id = ml.movie_id)
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6332.07 rows=135086 width=12) (actual time=0.005..1.814 rows=5993 loops=1)
                                                              ->  Sort  (cost=599.65..605.43 rows=2315 width=16) (actual time=1.457..1.619 rows=2341 loops=1)
                                                                    Sort Key: ml.movie_id
                                                                    Sort Method: quicksort  Memory: 205kB
                                                                    ->  Nested Loop  (cost=38.82..470.28 rows=2315 width=16) (actual time=0.060..0.961 rows=2315 loops=1)
                                                                          ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=16) (actual time=0.003..0.005 rows=2 loops=1)
                                                                                Filter: ((link)::text ~~ '%follow%'::text)
                                                                                Rows Removed by Filter: 16
                                                                          ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=8) (actual time=0.053..0.290 rows=1158 loops=2)
                                                                                Recheck Cond: (link_type_id = lt.id)
                                                                                Heap Blocks: exact=191
                                                                                ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.041..0.041 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                        ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..2.33 rows=46 width=8) (actual time=0.002..0.004 rows=14 loops=257)
                                                              Index Cond: (movie_id = cc.movie_id)
                                                  ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=3532)
                                                        Index Cond: (id = mk.keyword_id)
                                                        Filter: (keyword = 'sequel'::text)
                                                        Rows Removed by Filter: 1
                                            ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=98)
                                                  Index Cond: (id = mk.movie_id)
                                                  Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                      ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.54 rows=1 width=4) (actual time=0.007..0.008 rows=2 loops=98)
                                            Index Cond: (movie_id = mk.movie_id)
                                            Filter: (info = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                            Rows Removed by Filter: 16
                                ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=211)
                                      ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.004 rows=1 loops=1)
                                            Filter: ((kind)::text = 'complete'::text)
                                            Rows Removed by Filter: 3
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.002..0.004 rows=8 loops=154)
                                Index Cond: (movie_id = mk.movie_id)
                                Filter: (note IS NULL)
                                Rows Removed by Filter: 1
                    ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                          ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                Filter: ((kind)::text = 'production companies'::text)
                                Rows Removed by Filter: 3
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1106)
                    Index Cond: (id = mc.company_id)
                    Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                    Rows Removed by Filter: 1
        ->  Hash  (cost=1.05..1.05 rows=2 width=4) (actual time=0.007..0.007 rows=2 loops=1)
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.004..0.005 rows=2 loops=1)
                    Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                    Rows Removed by Filter: 2
Planning time: 46.656 ms
Execution time: 16.418 ms
