Aggregate  (cost=4373.73..4373.74 rows=1 width=96) (actual time=23.322..23.322 rows=1 loops=1)
  ->  Nested Loop  (cost=6.04..4372.80 rows=124 width=48) (actual time=2.945..23.087 rows=743 loops=1)
        Join Filter: (ml.movie_id = mi.movie_id)
        ->  Nested Loop  (cost=5.61..4284.94 rows=48 width=68) (actual time=2.933..21.395 rows=172 loops=1)
              Join Filter: (ct.id = mc.company_type_id)
              Rows Removed by Join Filter: 19
              ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                    Filter: ((kind)::text = 'production companies'::text)
                    Rows Removed by Filter: 3
              ->  Nested Loop  (cost=5.61..4281.50 rows=191 width=72) (actual time=2.926..21.349 rows=191 loops=1)
                    ->  Nested Loop  (cost=5.19..4085.87 rows=428 width=57) (actual time=1.816..20.538 rows=428 loops=1)
                          Join Filter: (ml.movie_id = mc.movie_id)
                          ->  Nested Loop  (cost=4.76..4040.79 rows=78 width=45) (actual time=1.808..20.179 rows=78 loops=1)
                                ->  Nested Loop  (cost=4.34..2615.01 rows=3231 width=49) (actual time=0.887..14.889 rows=3231 loops=1)
                                      Join Filter: (ml.movie_id = mk.movie_id)
                                      ->  Nested Loop  (cost=3.90..2184.07 rows=228 width=41) (actual time=0.881..13.227 rows=228 loops=1)
                                            Join Filter: (cc.status_id = cct2.id)
                                            Rows Removed by Join Filter: 68
                                            ->  Nested Loop  (cost=3.90..2176.75 rows=228 width=45) (actual time=0.879..13.131 rows=228 loops=1)
                                                  Join Filter: (ml.movie_id = t.id)
                                                  ->  Hash Join  (cost=3.47..1766.99 rows=228 width=24) (actual time=0.871..12.574 rows=228 loops=1)
                                                        Hash Cond: (ml.link_type_id = lt.id)
                                                        ->  Merge Join  (cost=2.22..1722.50 rows=3564 width=16) (actual time=0.036..12.188 rows=3564 loops=1)
                                                              Merge Cond: (cc.movie_id = ml.movie_id)
                                                              ->  Nested Loop  (cost=0.42..8359.41 rows=85941 width=8) (actual time=0.009..4.039 rows=3688 loops=1)
                                                                    Join Filter: (cct1.id = cc.subject_id)
                                                                    Rows Removed by Join Filter: 2305
                                                                    ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6332.07 rows=135086 width=12) (actual time=0.006..1.875 rows=5993 loops=1)
                                                                    ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                          ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                                                Filter: ((kind)::text = 'cast'::text)
                                                                                Rows Removed by Filter: 3
                                                              ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.004..4.736 rows=29997 loops=1)
                                                        ->  Hash  (cost=1.23..1.23 rows=2 width=16) (actual time=0.007..0.007 rows=2 loops=1)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                              ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=16) (actual time=0.002..0.005 rows=2 loops=1)
                                                                    Filter: ((link)::text ~~ '%follow%'::text)
                                                                    Rows Removed by Filter: 16
                                                  ->  Index Scan using title_pkey on title t  (cost=0.43..1.78 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=228)
                                                        Index Cond: (id = cc.movie_id)
                                                        Filter: ((production_year >= 1950) AND (production_year <= 2010))
                                            ->  Materialize  (cost=0.00..1.06 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=228)
                                                  ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=2 width=4) (actual time=0.001..0.002 rows=2 loops=1)
                                                        Filter: ((kind)::text ~~ 'complete%'::text)
                                                        Rows Removed by Filter: 2
                                      ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.32 rows=46 width=8) (actual time=0.002..0.004 rows=14 loops=228)
                                            Index Cond: (movie_id = t.id)
                                ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=3231)
                                      Index Cond: (id = mk.keyword_id)
                                      Filter: (keyword = 'sequel'::text)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.002..0.003 rows=5 loops=78)
                                Index Cond: (movie_id = mk.movie_id)
                                Filter: (note IS NULL)
                                Rows Removed by Filter: 1
                    ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=428)
                          Index Cond: (id = mc.company_id)
                          Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                          Rows Removed by Filter: 1
        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.79 rows=3 width=4) (actual time=0.007..0.009 rows=4 loops=172)
              Index Cond: (movie_id = mk.movie_id)
              Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
              Rows Removed by Filter: 15
Planning time: 46.713 ms
Execution time: 23.404 ms
