Aggregate  (cost=28810.11..28810.12 rows=1 width=68) (actual time=0.352..0.352 rows=1 loops=1)
  ->  Hash Join  (cost=5173.40..28792.44 rows=2356 width=45) (actual time=0.339..0.342 rows=3 loops=1)
        Hash Cond: (mc.company_type_id = ct.id)
        ->  Nested Loop  (cost=5172.34..28693.30 rows=9425 width=49) (actual time=0.144..0.321 rows=66 loops=1)
              Join Filter: (t.id = mc.movie_id)
              ->  Nested Loop  (cost=5171.91..26438.04 rows=3509 width=29) (actual time=0.123..0.188 rows=4 loops=1)
                    ->  Nested Loop  (cost=5171.48..19319.05 rows=12213 width=4) (actual time=0.017..0.021 rows=10 loops=1)
                          ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                Filter: ((info)::text = 'bottom 10 rank'::text)
                                Rows Removed by Filter: 112
                          ->  Bitmap Heap Scan on movie_info_idx mi_idx  (cost=5171.48..16556.57 rows=276007 width=8) (actual time=0.006..0.007 rows=10 loops=1)
                                Recheck Cond: (info_type_id = it.id)
                                Heap Blocks: exact=1
                                ->  Bitmap Index Scan on info_type_id_movie_info_idx  (cost=0.00..5102.48 rows=276007 width=0) (actual time=0.003..0.003 rows=10 loops=1)
                                      Index Cond: (info_type_id = it.id)
                    ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.016..0.016 rows=0 loops=10)
                          Index Cond: (id = mi_idx.movie_id)
                          Filter: ((production_year >= 2005) AND (production_year <= 2010))
                          Rows Removed by Filter: 1
              ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.61 rows=3 width=32) (actual time=0.018..0.030 rows=16 loops=4)
                    Index Cond: (movie_id = mi_idx.movie_id)
                    Filter: (note !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text)
                    Rows Removed by Filter: 2
        ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                    Filter: ((kind)::text = 'production companies'::text)
                    Rows Removed by Filter: 3
Planning time: 0.812 ms
Execution time: 0.415 ms
