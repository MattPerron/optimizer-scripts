Aggregate  (cost=8279.52..8279.53 rows=1 width=192) (actual time=31.021..31.022 rows=1 loops=1)
  ->  Nested Loop  (cost=5413.19..8279.50 rows=1 width=84) (actual time=11.508..31.009 rows=8 loops=1)
        Join Filter: ((ml.movie_id = t1.id) AND (kt1.id = t1.kind_id))
        ->  Nested Loop  (cost=5412.76..8275.25 rows=8 width=83) (actual time=11.501..30.990 rows=8 loops=1)
              Join Filter: (kt2.id = t2.kind_id)
              ->  Nested Loop  (cost=5412.76..8272.94 rows=8 width=83) (actual time=11.496..30.979 rows=8 loops=1)
                    Join Filter: (ml.linked_movie_id = t2.id)
                    ->  Nested Loop  (cost=5412.33..8252.65 rows=38 width=74) (actual time=11.490..30.897 rows=38 loops=1)
                          Join Filter: (mi_idx1.info_type_id = it1.id)
                          Rows Removed by Join Filter: 76
                          ->  Nested Loop  (cost=5412.33..8248.53 rows=114 width=78) (actual time=11.383..30.846 rows=114 loops=1)
                                ->  Nested Loop  (cost=5411.91..8009.08 rows=537 width=63) (actual time=11.375..29.938 rows=537 loops=1)
                                      Join Filter: (ml.movie_id = mc1.movie_id)
                                      ->  Nested Loop  (cost=5411.48..7895.08 rows=174 width=55) (actual time=11.371..29.420 rows=174 loops=1)
                                            ->  Nested Loop  (cost=5411.06..7817.92 rows=174 width=40) (actual time=11.364..29.075 rows=174 loops=1)
                                                  Join Filter: (ml.linked_movie_id = mc2.movie_id)
                                                  ->  Nested Loop  (cost=5410.63..7751.54 rows=90 width=32) (actual time=11.356..28.789 rows=90 loops=1)
                                                        Join Filter: (mi_idx2.info_type_id = it2.id)
                                                        Rows Removed by Join Filter: 8268
                                                        ->  Merge Join  (cost=5410.63..7623.75 rows=8358 width=36) (actual time=8.667..25.902 rows=8358 loops=1)
                                                              Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43804.18 rows=1380035 width=14) (actual time=0.006..9.265 rows=63901 loops=1)
                                                              ->  Sort  (cost=5410.19..5417.55 rows=2944 width=22) (actual time=8.631..9.209 rows=8516 loops=1)
                                                                    Sort Key: ml.movie_id
                                                                    Sort Method: quicksort  Memory: 327kB
                                                                    ->  Nested Loop  (cost=39.25..5240.56 rows=2944 width=22) (actual time=0.071..7.874 rows=2944 loops=1)
                                                                          ->  Nested Loop  (cost=38.82..470.30 rows=2315 width=8) (actual time=0.062..1.073 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.003..0.009 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.055..0.343 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.042..0.042 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.002..0.003 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.0'::text)
                                                                                Rows Removed by Filter: 1
                                                        ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=8358)
                                                              ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                                    Filter: ((info)::text = 'rating'::text)
                                                                    Rows Removed by Filter: 112
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.002..0.003 rows=2 loops=90)
                                                        Index Cond: (movie_id = mi_idx2.movie_id)
                                            ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=174)
                                                  Index Cond: (id = mc2.company_id)
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.001..0.002 rows=3 loops=174)
                                            Index Cond: (movie_id = mi_idx1.movie_id)
                                ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.001..0.001 rows=0 loops=537)
                                      Index Cond: (id = mc1.company_id)
                                      Filter: ((country_code)::text = '[us]'::text)
                                      Rows Removed by Filter: 1
                          ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=114)
                                ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                      Filter: ((info)::text = 'rating'::text)
                                      Rows Removed by Filter: 112
                    ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=38)
                          Index Cond: (id = mc2.movie_id)
                          Filter: ((production_year >= 2005) AND (production_year <= 2008))
                          Rows Removed by Filter: 1
              ->  Materialize  (cost=0.00..2.19 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=8)
                    ->  Nested Loop  (cost=0.00..2.18 rows=1 width=8) (actual time=0.004..0.006 rows=1 loops=1)
                          ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                Filter: ((kind)::text = 'tv series'::text)
                                Rows Removed by Filter: 6
                          ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                Filter: ((kind)::text = 'tv series'::text)
                                Rows Removed by Filter: 6
        ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=8)
              Index Cond: (id = mc1.movie_id)
Planning time: 60.523 ms
Execution time: 31.128 ms
