Aggregate  (cost=20890.65..20890.66 rows=1 width=96) (actual time=479.692..479.692 rows=1 loops=1)
  ->  Nested Loop  (cost=3781.92..20890.64 rows=1 width=42) (actual time=44.157..477.833 rows=4803 loops=1)
        ->  Nested Loop  (cost=3781.79..20890.47 rows=1 width=46) (actual time=44.151..452.412 rows=22733 loops=1)
              ->  Nested Loop  (cost=3781.66..20890.32 rows=1 width=50) (actual time=44.145..432.204 rows=22733 loops=1)
                    ->  Nested Loop  (cost=3781.52..20890.14 rows=1 width=54) (actual time=44.139..401.742 rows=25734 loops=1)
                          ->  Nested Loop  (cost=3781.10..20889.65 rows=1 width=39) (actual time=44.130..339.250 rows=26705 loops=1)
                                Join Filter: (t.id = mc.movie_id)
                                ->  Nested Loop  (cost=3780.67..20887.91 rows=3 width=51) (actual time=44.118..307.380 rows=2131 loops=1)
                                      Join Filter: (it2.id = mi_idx.info_type_id)
                                      Rows Removed by Join Filter: 4385
                                      ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                                            Filter: ((info)::text = 'rating'::text)
                                            Rows Removed by Filter: 112
                                      ->  Nested Loop  (cost=3780.67..20881.35 rows=332 width=55) (actual time=44.104..306.451 rows=6516 loops=1)
                                            Join Filter: (t.id = mi_idx.movie_id)
                                            ->  Nested Loop  (cost=3780.24..20546.75 rows=625 width=41) (actual time=44.090..295.720 rows=2261 loops=1)
                                                  Join Filter: (t.id = mi.movie_id)
                                                  ->  Hash Join  (cost=3779.81..16419.55 rows=2208 width=33) (actual time=44.069..155.963 rows=2208 loops=1)
                                                        Hash Cond: (t.kind_id = kt.id)
                                                        ->  Nested Loop  (cost=3778.69..16389.90 rows=2513 width=37) (actual time=44.008..155.250 rows=2513 loops=1)
                                                              ->  Hash Join  (cost=3778.26..11229.58 rows=10536 width=12) (actual time=43.984..123.234 rows=10536 loops=1)
                                                                    Hash Cond: (cc.status_id = cct2.id)
                                                                    ->  Hash Join  (cost=3777.18..11020.12 rows=20024 width=16) (actual time=43.976..119.611 rows=20024 loops=1)
                                                                          Hash Cond: (mk.movie_id = cc.movie_id)
                                                                          ->  Nested Loop  (cost=6.74..6229.24 rows=37091 width=4) (actual time=2.765..64.486 rows=37091 loops=1)
                                                                                ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=3 width=4) (actual time=0.802..15.685 rows=3 loops=1)
                                                                                      Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                      Rows Removed by Filter: 134167
                                                                                ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.74..1086.25 rows=298 width=8) (actual time=2.253..14.374 rows=12364 loops=3)
                                                                                      Recheck Cond: (keyword_id = k.id)
                                                                                      Heap Blocks: exact=26312
                                                                                      ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=298 width=0) (actual time=1.177..1.177 rows=12364 loops=3)
                                                                                            Index Cond: (keyword_id = k.id)
                                                                          ->  Hash  (cost=2081.86..2081.86 rows=135086 width=12) (actual time=40.828..40.828 rows=135086 loops=1)
                                                                                Buckets: 262144  Batches: 1  Memory Usage: 7853kB
                                                                                ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.005..17.532 rows=135086 loops=1)
                                                                    ->  Hash  (cost=1.05..1.05 rows=3 width=4) (actual time=0.003..0.003 rows=3 loops=1)
                                                                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                          ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.001..0.002 rows=3 loops=1)
                                                                                Filter: ((kind)::text <> 'complete+verified'::text)
                                                                                Rows Removed by Filter: 1
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=10536)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2000)
                                                                    Rows Removed by Filter: 1
                                                        ->  Hash  (cost=1.09..1.09 rows=2 width=4) (actual time=0.006..0.006 rows=2 loops=1)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                              ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=1)
                                                                    Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                    Rows Removed by Filter: 5
                                                  ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.84 rows=2 width=8) (actual time=0.054..0.063 rows=1 loops=2208)
                                                        Index Cond: (movie_id = mk.movie_id)
                                                        Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                                        Rows Removed by Filter: 141
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.003..0.004 rows=3 loops=2261)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: (info < '8.5'::text)
                                                  Rows Removed by Filter: 0
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.005..0.012 rows=13 loops=2131)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: ((note !~~ '%(USA)%'::text) AND (note ~~ '%(200%)%'::text))
                                      Rows Removed by Filter: 11
                          ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=26705)
                                Index Cond: (id = mc.company_id)
                                Filter: ((country_code)::text <> '[us]'::text)
                                Rows Removed by Filter: 0
                    ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=25734)
                          Index Cond: (id = mi.info_type_id)
                          Filter: ((info)::text = 'countries'::text)
                          Rows Removed by Filter: 0
              ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=22733)
                    Index Cond: (id = mc.company_type_id)
                    Heap Fetches: 0
        ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=22733)
              Index Cond: (id = cc.subject_id)
              Filter: ((kind)::text = 'crew'::text)
              Rows Removed by Filter: 1
Planning time: 58.754 ms
Execution time: 479.819 ms
