Aggregate  (cost=3087.03..3087.04 rows=1 width=192) (actual time=34.915..34.915 rows=1 loops=1)
  ->  Nested Loop  (cost=603.23..3087.02 rows=1 width=84) (actual time=5.549..34.840 rows=114 loops=1)
        ->  Nested Loop  (cost=602.81..3086.57 rows=1 width=69) (actual time=5.547..34.640 rows=114 loops=1)
              ->  Nested Loop  (cost=602.67..3086.41 rows=1 width=73) (actual time=4.753..34.497 rows=133 loops=1)
                    Join Filter: (ml.linked_movie_id = t2.id)
                    ->  Nested Loop  (cost=602.24..3084.80 rows=3 width=64) (actual time=4.746..34.080 rows=218 loops=1)
                          ->  Nested Loop  (cost=601.82..3082.58 rows=5 width=49) (actual time=4.740..33.483 rows=293 loops=1)
                                ->  Nested Loop  (cost=601.39..3079.53 rows=5 width=57) (actual time=4.735..33.182 rows=84 loops=1)
                                      Join Filter: (ml.linked_movie_id = mc2.movie_id)
                                      ->  Nested Loop  (cost=600.96..3078.81 rows=1 width=49) (actual time=4.727..32.998 rows=41 loops=1)
                                            Join Filter: (mi_idx2.info_type_id = it2.id)
                                            Rows Removed by Join Filter: 2863
                                            ->  Nested Loop  (cost=600.96..3075.99 rows=27 width=53) (actual time=1.460..31.952 rows=2904 loops=1)
                                                  Join Filter: (kt1.id = t1.kind_id)
                                                  Rows Removed by Join Filter: 1204
                                                  ->  Nested Loop  (cost=600.96..3072.23 rows=93 width=57) (actual time=1.447..30.801 rows=2904 loops=1)
                                                        Join Filter: (ml.movie_id = t1.id)
                                                        ->  Nested Loop  (cost=600.53..3017.33 rows=93 width=32) (actual time=1.440..25.781 rows=2904 loops=1)
                                                              ->  Nested Loop  (cost=600.11..2891.02 rows=61 width=18) (actual time=1.432..19.881 rows=2064 loops=1)
                                                                    Join Filter: (it1.id = mi_idx1.info_type_id)
                                                                    Rows Removed by Join Filter: 4128
                                                                    ->  Merge Join  (cost=600.11..2785.10 rows=6900 width=22) (actual time=1.415..17.784 rows=6192 loops=1)
                                                                          Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43804.18 rows=1380035 width=14) (actual time=0.006..9.171 rows=63901 loops=1)
                                                                          ->  Sort  (cost=599.67..605.46 rows=2315 width=8) (actual time=1.381..1.818 rows=6443 loops=1)
                                                                                Sort Key: ml.movie_id
                                                                                Sort Method: quicksort  Memory: 205kB
                                                                                ->  Nested Loop  (cost=38.82..470.30 rows=2315 width=8) (actual time=0.063..0.976 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.003..0.007 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.055..0.298 rows=1158 loops=2)
                                                                                            Recheck Cond: (link_type_id = lt.id)
                                                                                            Heap Blocks: exact=191
                                                                                            ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.043..0.043 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                    ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6192)
                                                                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=2 width=14) (actual time=0.002..0.002 rows=1 loops=2064)
                                                                    Index Cond: (movie_id = ml.linked_movie_id)
                                                                    Filter: (info < '3.5'::text)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using title_pkey on title t1  (cost=0.43..0.58 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=2904)
                                                              Index Cond: (id = mi_idx1.movie_id)
                                                  ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=2904)
                                                        ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=2 width=4) (actual time=0.012..0.013 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                              Rows Removed by Filter: 5
                                            ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=2904)
                                                  ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                        Filter: ((info)::text = 'rating'::text)
                                                        Rows Removed by Filter: 112
                                      ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.66 rows=5 width=8) (actual time=0.003..0.004 rows=2 loops=41)
                                            Index Cond: (movie_id = mi_idx2.movie_id)
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=3 loops=84)
                                      Index Cond: (movie_id = t1.id)
                          ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=293)
                                Index Cond: (id = mc1.company_id)
                                Filter: ((country_code)::text <> '[us]'::text)
                                Rows Removed by Filter: 0
                    ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=218)
                          Index Cond: (id = mc2.movie_id)
                          Filter: ((production_year >= 2000) AND (production_year <= 2010))
                          Rows Removed by Filter: 0
              ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=133)
                    Index Cond: (id = t2.kind_id)
                    Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                    Rows Removed by Filter: 0
        ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=114)
              Index Cond: (id = mc2.company_id)
Planning time: 59.105 ms
Execution time: 35.019 ms
