Aggregate  (cost=4882.05..4882.06 rows=1 width=192) (actual time=51.404..51.404 rows=1 loops=1)
  ->  Nested Loop  (cost=668.89..4882.04 rows=1 width=84) (actual time=8.874..51.382 rows=8 loops=1)
        Join Filter: ((t2.id = mi_idx2.movie_id) AND (it2.id = mi_idx2.info_type_id))
        Rows Removed by Join Filter: 807
        ->  Nested Loop  (cost=668.46..4881.52 rows=1 width=94) (actual time=2.438..50.257 rows=465 loops=1)
              Join Filter: (t1.kind_id = kt1.id)
              ->  Nested Loop  (cost=668.46..4880.31 rows=8 width=98) (actual time=2.436..50.099 rows=465 loops=1)
                    Join Filter: (ml.movie_id = t1.id)
                    ->  Nested Loop  (cost=668.03..4876.08 rows=8 width=89) (actual time=2.432..49.313 rows=465 loops=1)
                          ->  Nested Loop  (cost=667.61..4872.53 rows=8 width=74) (actual time=2.429..48.469 rows=465 loops=1)
                                ->  Nested Loop  (cost=667.18..4866.13 rows=8 width=66) (actual time=2.426..48.167 rows=58 loops=1)
                                      Join Filter: (kt2.id = t2.kind_id)
                                      Rows Removed by Join Filter: 89
                                      ->  Nested Loop  (cost=667.18..4864.23 rows=54 width=70) (actual time=1.503..48.108 rows=147 loops=1)
                                            ->  Nested Loop  (cost=666.75..3499.30 rows=305 width=45) (actual time=1.496..43.761 rows=2083 loops=1)
                                                  ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.019..0.023 rows=1 loops=1)
                                                        Filter: ((info)::text = 'rating'::text)
                                                        Rows Removed by Filter: 112
                                                  ->  Nested Loop  (cost=666.61..3482.13 rows=305 width=41) (actual time=1.476..43.395 rows=2083 loops=1)
                                                        ->  Nested Loop  (cost=666.19..3105.35 rows=845 width=26) (actual time=1.447..27.500 rows=9674 loops=1)
                                                              Join Filter: (ml.movie_id = mc1.movie_id)
                                                              ->  Nested Loop  (cost=665.76..3047.69 rows=88 width=18) (actual time=1.442..20.264 rows=2064 loops=1)
                                                                    Join Filter: (mi_idx1.info_type_id = it1.id)
                                                                    Rows Removed by Join Filter: 4128
                                                                    ->  Merge Join  (cost=665.76..2896.27 rows=9934 width=22) (actual time=1.426..18.167 rows=6192 loops=1)
                                                                          Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43804.18 rows=1380035 width=14) (actual time=0.004..9.428 rows=63901 loops=1)
                                                                          ->  Sort  (cost=665.32..673.65 rows=3333 width=8) (actual time=1.394..1.867 rows=6443 loops=1)
                                                                                Sort Key: ml.movie_id
                                                                                Sort Method: quicksort  Memory: 205kB
                                                                                ->  Nested Loop  (cost=38.82..470.30 rows=3333 width=8) (actual time=0.062..0.977 rows=2315 loops=1)
                                                                                      ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.003..0.007 rows=2 loops=1)
                                                                                            Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                            Rows Removed by Filter: 16
                                                                                      ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.054..0.299 rows=1158 loops=2)
                                                                                            Recheck Cond: (link_type_id = lt.id)
                                                                                            Heap Blocks: exact=191
                                                                                            ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.043..0.043 rows=1158 loops=2)
                                                                                                  Index Cond: (link_type_id = lt.id)
                                                                    ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6192)
                                                                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                                Filter: ((info)::text = 'rating'::text)
                                                                                Rows Removed by Filter: 112
                                                              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.001..0.002 rows=5 loops=2064)
                                                                    Index Cond: (movie_id = mi_idx1.movie_id)
                                                        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.001..0.001 rows=0 loops=9674)
                                                              Index Cond: (id = mc1.company_id)
                                                              Filter: ((country_code)::text = '[us]'::text)
                                                              Rows Removed by Filter: 1
                                            ->  Index Scan using title_pkey on title t2  (cost=0.43..4.48 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=2083)
                                                  Index Cond: (id = ml.linked_movie_id)
                                                  Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                                  Rows Removed by Filter: 1
                                      ->  Materialize  (cost=0.00..1.09 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=147)
                                            ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                  Filter: ((kind)::text = 'tv series'::text)
                                                  Rows Removed by Filter: 6
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.75 rows=5 width=8) (actual time=0.002..0.003 rows=8 loops=58)
                                      Index Cond: (movie_id = t2.id)
                          ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=465)
                                Index Cond: (id = mc2.company_id)
                    ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=465)
                          Index Cond: (id = mc1.movie_id)
              ->  Materialize  (cost=0.00..1.09 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=465)
                    ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                          Filter: ((kind)::text = 'tv series'::text)
                          Rows Removed by Filter: 1
        ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.51 rows=1 width=14) (actual time=0.001..0.002 rows=2 loops=465)
              Index Cond: (movie_id = mc2.movie_id)
              Filter: (info < '3.0'::text)
              Rows Removed by Filter: 1
Planning time: 60.790 ms
Execution time: 51.522 ms
