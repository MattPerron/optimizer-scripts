Aggregate  (cost=48705.67..48705.68 rows=1 width=96) (actual time=106.802..106.802 rows=1 loops=1)
  ->  Nested Loop  (cost=10.31..48703.60 rows=275 width=48) (actual time=13.528..106.695 rows=275 loops=1)
        ->  Nested Loop  (cost=9.88..48221.47 rows=277 width=36) (actual time=13.349..106.206 rows=277 loops=1)
              ->  Nested Loop  (cost=9.46..46901.91 rows=895 width=40) (actual time=13.341..104.606 rows=895 loops=1)
                    Join Filter: (t.id = mc.movie_id)
                    ->  Nested Loop  (cost=9.03..46673.07 rows=66 width=52) (actual time=13.333..104.105 rows=66 loops=1)
                          Join Filter: (n.id = an.person_id)
                          ->  Nested Loop  (cost=8.60..46635.40 rows=37 width=60) (actual time=5.744..103.938 rows=37 loops=1)
                                Join Filter: (it.id = mi.info_type_id)
                                ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.006..0.013 rows=1 loops=1)
                                      Filter: ((info)::text = 'release dates'::text)
                                      Rows Removed by Filter: 112
                                ->  Nested Loop  (cost=8.60..46632.53 rows=37 width=64) (actual time=5.737..103.912 rows=37 loops=1)
                                      Join Filter: (t.id = mi.movie_id)
                                      ->  Nested Loop  (cost=8.17..45673.14 rows=30 width=56) (actual time=5.722..103.145 rows=30 loops=1)
                                            Join Filter: (rt.id = ci.role_id)
                                            ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.002..0.005 rows=1 loops=1)
                                                  Filter: ((role)::text = 'actress'::text)
                                                  Rows Removed by Filter: 11
                                            ->  Nested Loop  (cost=8.17..45671.61 rows=30 width=60) (actual time=5.719..103.130 rows=30 loops=1)
                                                  ->  Nested Loop  (cost=7.74..40805.74 rows=2625 width=41) (actual time=0.869..94.399 rows=2625 loops=1)
                                                        Join Filter: (t.id = ci.movie_id)
                                                        ->  Nested Loop  (cost=7.17..21605.69 rows=495 width=25) (actual time=0.678..53.479 rows=495 loops=1)
                                                              ->  Nested Loop  (cost=6.74..6061.53 rows=9696 width=4) (actual time=0.635..25.795 rows=9696 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.008..13.419 rows=3 loops=1)
                                                                          Filter: (keyword = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                          Rows Removed by Filter: 134167
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.74..1086.25 rows=298 width=8) (actual time=0.619..3.657 rows=3232 loops=3)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=7446
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=298 width=0) (actual time=0.324..0.324 rows=3232 loops=3)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=9696)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2010)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..38.78 rows=1 width=16) (actual time=0.056..0.081 rows=5 loops=495)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                              Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                              Rows Removed by Filter: 83
                                                  ->  Index Scan using name_pkey on name n  (cost=0.43..1.85 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=2625)
                                                        Index Cond: (id = ci.person_id)
                                                        Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                        Rows Removed by Filter: 1
                                      ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..31.97 rows=1 width=8) (actual time=0.007..0.025 rows=1 loops=30)
                                            Index Cond: (movie_id = mk.movie_id)
                                            Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%201%'::text) OR (info ~~ 'USA:%201%'::text)))
                                            Rows Removed by Filter: 46
                          ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..0.99 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=37)
                                Index Cond: (person_id = ci.person_id)
                                Heap Fetches: 0
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.40 rows=5 width=8) (actual time=0.002..0.005 rows=14 loops=66)
                          Index Cond: (movie_id = mk.movie_id)
              ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=895)
                    Index Cond: (id = mc.company_id)
                    Filter: ((country_code)::text = '[us]'::text)
                    Rows Removed by Filter: 1
        ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.74 rows=1 width=20) (actual time=0.001..0.001 rows=1 loops=277)
              Index Cond: (id = ci.person_role_id)
Planning time: 49.282 ms
Execution time: 106.903 ms
