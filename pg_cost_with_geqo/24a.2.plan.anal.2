Aggregate  (cost=76435.84..76435.85 rows=1 width=96) (actual time=606.888..606.888 rows=1 loops=1)
  ->  Nested Loop  (cost=10.31..76435.83 rows=1 width=48) (actual time=52.357..606.762 rows=275 loops=1)
        ->  Nested Loop  (cost=9.88..76433.98 rows=1 width=41) (actual time=1.011..594.628 rows=6518 loops=1)
              ->  Nested Loop  (cost=9.45..76430.50 rows=2 width=29) (actual time=1.004..582.508 rows=6532 loops=1)
                    ->  Nested Loop  (cost=9.02..76429.49 rows=1 width=25) (actual time=0.994..575.596 rows=2778 loops=1)
                          Join Filter: (rt.id = ci.role_id)
                          Rows Removed by Join Filter: 10980
                          ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                Filter: ((role)::text = 'actress'::text)
                                Rows Removed by Filter: 11
                          ->  Nested Loop  (cost=9.02..76428.32 rows=1 width=29) (actual time=0.982..574.151 rows=13758 loops=1)
                                Join Filter: (t.id = ci.movie_id)
                                ->  Nested Loop  (cost=8.46..76389.54 rows=1 width=33) (actual time=0.713..311.123 rows=3406 loops=1)
                                      ->  Nested Loop  (cost=8.04..76386.59 rows=2 width=37) (actual time=0.707..282.597 rows=13560 loops=1)
                                            Join Filter: (it.id = mi.info_type_id)
                                            ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.004..0.011 rows=1 loops=1)
                                                  Filter: ((info)::text = 'release dates'::text)
                                                  Rows Removed by Filter: 112
                                            ->  Nested Loop  (cost=8.04..76381.86 rows=185 width=41) (actual time=0.703..280.046 rows=13560 loops=1)
                                                  Join Filter: (t.id = mi.movie_id)
                                                  ->  Nested Loop  (cost=7.60..26813.52 rows=1550 width=33) (actual time=0.694..59.195 rows=5566 loops=1)
                                                        Join Filter: (t.id = mc.movie_id)
                                                        ->  Nested Loop  (cost=7.17..21605.69 rows=1502 width=25) (actual time=0.687..54.639 rows=495 loops=1)
                                                              ->  Nested Loop  (cost=6.74..6061.53 rows=9696 width=4) (actual time=0.646..26.641 rows=9696 loops=1)
                                                                    ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.008..13.930 rows=3 loops=1)
                                                                          Filter: (keyword = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                          Rows Removed by Filter: 134167
                                                                    ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.74..1086.25 rows=298 width=8) (actual time=0.608..3.768 rows=3232 loops=3)
                                                                          Recheck Cond: (keyword_id = k.id)
                                                                          Heap Blocks: exact=7446
                                                                          ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=298 width=0) (actual time=0.323..0.323 rows=3232 loops=3)
                                                                                Index Cond: (keyword_id = k.id)
                                                              ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=9696)
                                                                    Index Cond: (id = mk.movie_id)
                                                                    Filter: (production_year > 2010)
                                                                    Rows Removed by Filter: 1
                                                        ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.40 rows=5 width=8) (actual time=0.004..0.007 rows=11 loops=495)
                                                              Index Cond: (movie_id = mk.movie_id)
                                                  ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..31.97 rows=1 width=8) (actual time=0.009..0.039 rows=2 loops=5566)
                                                        Index Cond: (movie_id = mk.movie_id)
                                                        Filter: ((info IS NOT NULL) AND ((info ~~ 'Japan:%201%'::text) OR (info ~~ 'USA:%201%'::text)))
                                                        Rows Removed by Filter: 175
                                      ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=13560)
                                            Index Cond: (id = mc.company_id)
                                            Filter: ((country_code)::text = '[us]'::text)
                                            Rows Removed by Filter: 1
                                ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..38.78 rows=1 width=16) (actual time=0.050..0.076 rows=4 loops=3406)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: (note = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                      Rows Removed by Filter: 169
                    ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..0.99 rows=2 width=4) (actual time=0.002..0.002 rows=2 loops=2778)
                          Index Cond: (person_id = ci.person_id)
                          Heap Fetches: 0
              ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.74 rows=1 width=20) (actual time=0.001..0.001 rows=1 loops=6532)
                    Index Cond: (id = ci.person_role_id)
        ->  Index Scan using name_pkey on name n  (cost=0.43..1.85 rows=1 width=19) (actual time=0.002..0.002 rows=0 loops=6518)
              Index Cond: (id = ci.person_id)
              Filter: ((name ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
              Rows Removed by Filter: 1
Planning time: 49.996 ms
Execution time: 606.982 ms
