Aggregate  (cost=6011.24..6011.25 rows=1 width=192) (actual time=10.318..10.318 rows=1 loops=1)
  ->  Nested Loop  (cost=42.51..6011.22 rows=1 width=84) (actual time=0.788..10.248 rows=114 loops=1)
        ->  Nested Loop  (cost=42.38..6011.06 rows=1 width=88) (actual time=0.785..10.127 rows=114 loops=1)
              Join Filter: (it1.id = mi_idx1.info_type_id)
              Rows Removed by Join Filter: 228
              ->  Nested Loop  (cost=41.95..5996.05 rows=28 width=98) (actual time=0.769..9.831 rows=121 loops=1)
                    Join Filter: (t2.kind_id = kt2.id)
                    Rows Removed by Join Filter: 38
                    ->  Nested Loop  (cost=41.95..5992.16 rows=98 width=102) (actual time=0.764..9.768 rows=140 loops=1)
                          Join Filter: (ml.linked_movie_id = t2.id)
                          ->  Nested Loop  (cost=41.52..5865.60 rows=237 width=93) (actual time=0.759..9.325 rows=237 loops=1)
                                Join Filter: (ml.movie_id = t1.id)
                                ->  Nested Loop  (cost=41.09..5740.24 rows=237 width=68) (actual time=0.752..8.882 rows=237 loops=1)
                                      ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..14.12 rows=1 width=4) (actual time=0.019..0.022 rows=1 loops=1)
                                            Filter: ((info)::text = 'rating'::text)
                                            Rows Removed by Filter: 112
                                      ->  Nested Loop  (cost=40.95..5723.75 rows=237 width=64) (actual time=0.732..8.817 rows=237 loops=1)
                                            ->  Nested Loop  (cost=40.53..5618.66 rows=237 width=49) (actual time=0.730..8.343 rows=237 loops=1)
                                                  Join Filter: (ml.linked_movie_id = mc2.movie_id)
                                                  ->  Nested Loop  (cost=40.10..5547.43 rows=98 width=41) (actual time=0.726..8.014 rows=98 loops=1)
                                                        ->  Nested Loop  (cost=39.68..5491.24 rows=126 width=26) (actual time=0.707..7.708 rows=126 loops=1)
                                                              ->  Nested Loop  (cost=39.25..5304.63 rows=47 width=18) (actual time=0.702..7.509 rows=47 loops=1)
                                                                    Join Filter: (it2.id = mi_idx2.info_type_id)
                                                                    Rows Removed by Join Filter: 3033
                                                                    ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                                                          Filter: ((info)::text = 'rating'::text)
                                                                          Rows Removed by Filter: 112
                                                                    ->  Nested Loop  (cost=39.25..5263.71 rows=3080 width=22) (actual time=0.069..7.252 rows=3080 loops=1)
                                                                          ->  Nested Loop  (cost=38.82..470.30 rows=2315 width=8) (actual time=0.061..0.986 rows=2315 loops=1)
                                                                                ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=2 width=4) (actual time=0.002..0.006 rows=2 loops=1)
                                                                                      Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                      Rows Removed by Filter: 16
                                                                                ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=12) (actual time=0.053..0.322 rows=1158 loops=2)
                                                                                      Recheck Cond: (link_type_id = lt.id)
                                                                                      Heap Blocks: exact=191
                                                                                      ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.041..0.041 rows=1158 loops=2)
                                                                                            Index Cond: (link_type_id = lt.id)
                                                                          ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=2 width=14) (actual time=0.002..0.002 rows=1 loops=2315)
                                                                                Index Cond: (movie_id = ml.linked_movie_id)
                                                                                Filter: (info < '3.5'::text)
                                                                                Rows Removed by Filter: 1
                                                              ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..3.92 rows=5 width=8) (actual time=0.003..0.003 rows=3 loops=47)
                                                                    Index Cond: (movie_id = ml.movie_id)
                                                        ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=126)
                                                              Index Cond: (id = mc1.company_id)
                                                              Filter: ((country_code)::text <> '[us]'::text)
                                                              Rows Removed by Filter: 0
                                                  ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.66 rows=5 width=8) (actual time=0.002..0.003 rows=2 loops=98)
                                                        Index Cond: (movie_id = mi_idx2.movie_id)
                                            ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=237)
                                                  Index Cond: (id = mc2.company_id)
                                ->  Index Scan using title_pkey on title t1  (cost=0.43..0.52 rows=1 width=25) (actual time=0.001..0.001 rows=1 loops=237)
                                      Index Cond: (id = mc1.movie_id)
                          ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=237)
                                Index Cond: (id = mc2.movie_id)
                                Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                Rows Removed by Filter: 0
                    ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=140)
                          ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.003..0.005 rows=2 loops=1)
                                Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                Rows Removed by Filter: 5
              ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..0.50 rows=3 width=14) (actual time=0.001..0.002 rows=3 loops=121)
                    Index Cond: (movie_id = t1.id)
        ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=114)
              Index Cond: (id = t1.kind_id)
              Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
Planning time: 58.589 ms
Execution time: 10.415 ms
