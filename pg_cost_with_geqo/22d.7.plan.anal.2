Aggregate  (cost=41611.21..41611.22 rows=1 width=96) (actual time=635.256..635.256 rows=1 loops=1)
  ->  Nested Loop  (cost=9.97..41611.14 rows=10 width=42) (actual time=3.305..620.728 rows=46281 loops=1)
        ->  Hash Join  (cost=9.55..41581.71 rows=66 width=27) (actual time=2.873..474.226 rows=64848 loops=1)
              Hash Cond: (mc.company_type_id = ct.id)
              ->  Nested Loop  (cost=8.46..41288.13 rows=28107 width=31) (actual time=2.860..459.696 rows=64848 loops=1)
                    Join Filter: (t.id = mc.movie_id)
                    ->  Nested Loop  (cost=8.03..40404.22 rows=1466 width=39) (actual time=2.853..416.500 rows=4115 loops=1)
                          Join Filter: (mi.info_type_id = it1.id)
                          Rows Removed by Join Filter: 594
                          ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.004..0.011 rows=1 loops=1)
                                Filter: ((info)::text = 'countries'::text)
                                Rows Removed by Filter: 112
                          ->  Nested Loop  (cost=8.03..40342.94 rows=4709 width=43) (actual time=2.848..415.547 rows=4709 loops=1)
                                Join Filter: (t.id = mi.movie_id)
                                ->  Nested Loop  (cost=7.60..29223.07 rows=5949 width=35) (actual time=2.829..201.427 rows=5949 loops=1)
                                      Join Filter: (mi_idx.info_type_id = it2.id)
                                      Rows Removed by Join Filter: 11943
                                      ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                            Filter: ((info)::text = 'rating'::text)
                                            Rows Removed by Filter: 112
                                      ->  Nested Loop  (cost=7.60..28997.01 rows=17892 width=39) (actual time=2.819..199.147 rows=17892 loops=1)
                                            Join Filter: (t.id = mi_idx.movie_id)
                                            ->  Nested Loop  (cost=7.17..24675.01 rows=8073 width=25) (actual time=2.809..167.218 rows=8073 loops=1)
                                                  Join Filter: (t.kind_id = kt.id)
                                                  Rows Removed by Join Filter: 4332
                                                  ->  Nested Loop  (cost=7.17..24395.66 rows=9739 width=29) (actual time=2.786..163.193 rows=9739 loops=1)
                                                        ->  Nested Loop  (cost=6.74..6229.24 rows=37091 width=4) (actual time=2.775..63.580 rows=37091 loops=1)
                                                              ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=3 width=4) (actual time=0.794..15.320 rows=3 loops=1)
                                                                    Filter: (keyword = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                    Rows Removed by Filter: 134167
                                                              ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.74..1086.25 rows=298 width=8) (actual time=2.310..14.233 rows=12364 loops=3)
                                                                    Recheck Cond: (keyword_id = k.id)
                                                                    Heap Blocks: exact=26312
                                                                    ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=298 width=0) (actual time=1.193..1.193 rows=12364 loops=3)
                                                                          Index Cond: (keyword_id = k.id)
                                                        ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=37091)
                                                              Index Cond: (id = mk.movie_id)
                                                              Filter: (production_year > 2005)
                                                              Rows Removed by Filter: 1
                                                  ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                        ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.004..0.006 rows=2 loops=1)
                                                              Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                              Rows Removed by Filter: 5
                                            ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.003..0.003 rows=2 loops=8073)
                                                  Index Cond: (movie_id = mk.movie_id)
                                                  Filter: (info < '8.5'::text)
                                                  Rows Removed by Filter: 0
                                ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.84 rows=2 width=8) (actual time=0.031..0.036 rows=1 loops=5949)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                      Rows Removed by Filter: 71
                    ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.003..0.007 rows=16 loops=4115)
                          Index Cond: (movie_id = mk.movie_id)
              ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.008..0.008 rows=4 loops=1)
                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                    ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.004..0.005 rows=4 loops=1)
        ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=64848)
              Index Cond: (id = mc.company_id)
              Filter: ((country_code)::text <> '[us]'::text)
              Rows Removed by Filter: 0
Planning time: 19.916 ms
Execution time: 635.359 ms
