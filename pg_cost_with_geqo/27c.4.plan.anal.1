Aggregate  (cost=2526.66..2526.67 rows=1 width=96) (actual time=16.102..16.103 rows=1 loops=1)
  ->  Nested Loop  (cost=603.99..2526.64 rows=3 width=48) (actual time=2.491..15.887 rows=743 loops=1)
        Join Filter: (ml.movie_id = mi.movie_id)
        ->  Nested Loop  (cost=603.55..2524.80 rows=1 width=68) (actual time=2.478..14.241 rows=172 loops=1)
              ->  Nested Loop  (cost=603.42..2524.63 rows=1 width=72) (actual time=2.475..14.001 rows=229 loops=1)
                    ->  Nested Loop  (cost=603.29..2524.46 rows=1 width=76) (actual time=2.472..13.741 rows=248 loops=1)
                          ->  Nested Loop  (cost=602.87..2522.18 rows=5 width=61) (actual time=1.859..12.692 rows=581 loops=1)
                                Join Filter: (ml.movie_id = mc.movie_id)
                                ->  Nested Loop  (cost=602.44..2521.60 rows=1 width=49) (actual time=1.851..12.259 rows=98 loops=1)
                                      Join Filter: (ml.movie_id = t.id)
                                      ->  Nested Loop  (cost=602.01..2521.10 rows=1 width=28) (actual time=1.845..12.059 rows=98 loops=1)
                                            ->  Hash Join  (cost=601.59..1741.79 rows=1766 width=32) (actual time=1.688..6.619 rows=3532 loops=1)
                                                  Hash Cond: (cc.status_id = cct2.id)
                                                  ->  Nested Loop  (cost=600.52..1703.96 rows=3532 width=36) (actual time=1.676..5.883 rows=3532 loops=1)
                                                        Join Filter: (ml.movie_id = mk.movie_id)
                                                        ->  Merge Join  (cost=600.09..957.63 rows=257 width=28) (actual time=1.669..4.164 rows=257 loops=1)
                                                              Merge Cond: (cc.movie_id = ml.movie_id)
                                                              ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6332.07 rows=135086 width=12) (actual time=0.006..1.763 rows=5993 loops=1)
                                                              ->  Sort  (cost=599.65..605.43 rows=2315 width=16) (actual time=1.454..1.610 rows=2341 loops=1)
                                                                    Sort Key: ml.movie_id
                                                                    Sort Method: quicksort  Memory: 205kB
                                                                    ->  Nested Loop  (cost=38.82..470.28 rows=2315 width=16) (actual time=0.060..0.952 rows=2315 loops=1)
                                                                          ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=2 width=16) (actual time=0.002..0.005 rows=2 loops=1)
                                                                                Filter: ((link)::text ~~ '%follow%'::text)
                                                                                Rows Removed by Filter: 16
                                                                          ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..215.78 rows=1875 width=8) (actual time=0.053..0.291 rows=1158 loops=2)
                                                                                Recheck Cond: (link_type_id = lt.id)
                                                                                Heap Blocks: exact=191
                                                                                ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.042..0.042 rows=1158 loops=2)
                                                                                      Index Cond: (link_type_id = lt.id)
                                                        ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..2.33 rows=46 width=8) (actual time=0.002..0.004 rows=14 loops=257)
                                                              Index Cond: (movie_id = cc.movie_id)
                                                  ->  Hash  (cost=1.05..1.05 rows=2 width=4) (actual time=0.007..0.007 rows=2 loops=1)
                                                        Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                        ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=2 width=4) (actual time=0.004..0.005 rows=2 loops=1)
                                                              Filter: ((kind)::text ~~ 'complete%'::text)
                                                              Rows Removed by Filter: 2
                                            ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=3532)
                                                  Index Cond: (id = mk.keyword_id)
                                                  Filter: (keyword = 'sequel'::text)
                                                  Rows Removed by Filter: 1
                                      ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=98)
                                            Index Cond: (id = mk.movie_id)
                                            Filter: ((production_year >= 1950) AND (production_year <= 2010))
                                ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.002..0.003 rows=6 loops=98)
                                      Index Cond: (movie_id = mk.movie_id)
                                      Filter: (note IS NULL)
                                      Rows Removed by Filter: 1
                          ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=581)
                                Index Cond: (id = mc.company_id)
                                Filter: (((country_code)::text <> '[pl]'::text) AND ((name ~~ '%Film%'::text) OR (name ~~ '%Warner%'::text)))
                                Rows Removed by Filter: 1
                    ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=248)
                          Index Cond: (id = mc.company_type_id)
                          Filter: ((kind)::text = 'production companies'::text)
                          Rows Removed by Filter: 0
              ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=229)
                    Index Cond: (id = cc.subject_id)
                    Filter: ((kind)::text = 'cast'::text)
                    Rows Removed by Filter: 0
        ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.79 rows=3 width=4) (actual time=0.007..0.009 rows=4 loops=172)
              Index Cond: (movie_id = mk.movie_id)
              Filter: (info = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
              Rows Removed by Filter: 15
Planning time: 47.219 ms
Execution time: 16.191 ms
